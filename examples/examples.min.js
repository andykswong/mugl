(()=>{var e,t,n,r,i={972:(e,t,n)=>{n.d(t,{p:()=>Ve,B:()=>Ue});var r=n(665),i=n(618);const s="\nstruct VertexInput {\n  @location(0) position: vec3<f32>,\n  @location(1) color: vec4<f32>,\n};\n\nstruct VertexOutput {\n  @builtin(position) clip_position: vec4<f32>,\n  @location(0) color: vec4<f32>,\n};\n";function a(e=!1){return e?`${s}\n@vertex\nfn vs_main(model: VertexInput) -> VertexOutput {\n  var out: VertexOutput;\n  out.color = model.color;\n  out.clip_position = vec4<f32>(model.position, 1.0);\n  return out;\n}\n`:"#version 300 es\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec4 color;\nout vec4 vColor;\nvoid main () {\n  gl_Position = vec4(position, 1);\n  vColor = color;\n}\n"}function o(e=!1){return e?`${s}\n@fragment\nfn fs_main(in: VertexOutput) -> @location(0) vec4<f32> {\n  return in.color;\n}\n`:"#version 300 es\nprecision mediump float;\nin vec4 vColor;\nout vec4 outColor;\nvoid main () {\n  outColor = vColor;\n}\n"}const u=(0,i.LI)(i.CJ);class l extends i.r{buffer=null;pipeline=null;pass=null;constructor(e,t){super(t),this.device=e}init(){const e=this.gpu.createShader(this.device,{code:a(this.useWebGPU),usage:r.$X.Vertex}),t=this.gpu.createShader(this.device,{code:o(this.useWebGPU),usage:r.$X.Fragment});this.pipeline=this.gpu.createRenderPipeline(this.device,{vertex:e,fragment:t,buffers:(0,r.O5)([{attributes:[r.gB.F32x3,r.gB.F32x4]}]),depthStencil:{format:r.EV.Depth24Stencil8}}),this.pass=this.gpu.createRenderPass(this.device,{clearColor:[.1,.2,.3,1]}),this.buffer=(0,i.gS)(this.gpu,this.device,u),this.register([this.buffer,this.pipeline,this.pass,e,t])}render(e){return this.gpu.beginRenderPass(this.device,this.pass),this.gpu.setRenderPipeline(this.device,this.pipeline),this.gpu.setVertex(this.device,0,this.buffer),this.gpu.draw(this.device,3),this.gpu.submitRenderPass(this.device),!1}}const c="\nstruct VertexInput {\n  @location(0) position: vec2<f32>,\n  @location(1) offset: vec2<f32>,\n  @location(2) color: vec3<f32>,\n  @location(3) angle: f32,\n};\n\nstruct VertexOutput {\n  @builtin(position) clip_position: vec4<f32>,\n  @location(0) color: vec3<f32>,\n};\n";function p(e=!1){return e?`${c}\n@vertex\nfn vs_main(model: VertexInput) -> VertexOutput {\n  var out: VertexOutput;\n  out.color = model.color;\n  out.clip_position = vec4<f32>(\n    cos(model.angle) * model.position[0] + sin(model.angle) * model.position[1] + model.offset[0],\n    -sin(model.angle) * model.position[0] + cos(model.angle) * model.position[1] + model.offset[1],\n    0.0,\n    1.0\n  );\n  return out;\n}\n`:"#version 300 es\nlayout (location=0) in vec2 position;\nlayout (location=1) in vec2 offset;\nlayout (location=2) in vec3 color;\nlayout (location=3) in float angle;\nout vec3 vColor;\n\nvoid main() {\n  gl_Position = vec4(\n    cos(angle) * position.x + sin(angle) * position.y + offset.x,\n    -sin(angle) * position.x + cos(angle) * position.y + offset.y,\n    0, 1);\n  vColor = color;\n}\n"}function d(e=!1){return e?`${c}\nstruct Data { ambient: vec4<f32> };\n@group(0) @binding(0) var<uniform> data: Data;\n\n@fragment\nfn fs_main(in: VertexOutput) -> @location(0) vec4<f32> {\n  return vec4<f32>(data.ambient.rgb + in.color, data.ambient[3]);\n}\n`:"#version 300 es\nprecision mediump float;\nlayout(std140) uniform Data { vec3 ambient; };\nin vec3 vColor;\nout vec4 outColor;\n\nvoid main () {\n  outColor = vec4(ambient + vColor, 1.0);\n}\n"}const f=(0,i.MA)([0,1,2,0]),h=(0,i.om)([0,-.05,-.05,0,.05,.05]),g=new Float32Array(4*Math.ceil(125)),v=new Float32Array(4*Math.ceil(25));for(let e=0;e<100;e++){v[e]=Math.random()*(2*Math.PI),g[5*e]=2*Math.floor(e/10)/10-1+.1,g[5*e+1]=e%10*2/10-1+.1;const t=Math.floor(e/10)/10,n=e%10/10,r=t*n+.2;g[5*e+2]=t,g[5*e+3]=n,g[5*e+4]=r}class m extends i.r{pass=null;pipeline=null;indexBuffer=null;position=null;offsetColor=null;angle=null;bindGroup=null;ambient=null;ambientData=new Float32Array(4);t=0;constructor(e,t){super(t),this.device=e}init(){const e=this.gpu.createShader(this.device,{code:p(this.useWebGPU),usage:r.$X.Vertex}),t=this.gpu.createShader(this.device,{code:d(this.useWebGPU),usage:r.$X.Fragment}),n=this.gpu.createBindGroupLayout(this.device,{entries:[{label:"Data",type:r.$l.Buffer}]});this.pipeline=this.gpu.createRenderPipeline(this.device,{vertex:e,fragment:t,buffers:(0,r.O5)([{attributes:[r.gB.F32x2]},{attributes:[r.gB.F32x2,r.gB.F32x3],instanced:!0},{attributes:[r.gB.F32],instanced:!0}]),bindGroups:[n],depthStencil:{format:r.EV.Depth24Stencil8}}),this.pass=this.gpu.createRenderPass(this.device,{clearColor:[0,0,0,1]}),this.indexBuffer=(0,i.gS)(this.gpu,this.device,f,r.FB.Index),this.position=(0,i.gS)(this.gpu,this.device,h),this.offsetColor=(0,i.gS)(this.gpu,this.device,g),this.angle=(0,i.gS)(this.gpu,this.device,v,r.FB.Vertex|r.FB.Stream),this.ambient=(0,i.gS)(this.gpu,this.device,this.ambientData,r.FB.Uniform|r.FB.Stream),this.bindGroup=this.gpu.createBindGroup(this.device,{layout:n,entries:[{buffer:this.ambient}]}),this.register([this.pipeline,this.pass,e,t,n,this.bindGroup,this.ambient,this.indexBuffer,this.position,this.offsetColor,this.angle])}render(e){for(let t=0;t<100;t++)v[t]+=this.t-e-2*Math.PI*Math.floor(v[t]/Math.PI/2);this.t=e,this.gpu.writeBuffer(this.device,this.angle,v);const t=Math.sin(e)/2;return this.ambientData[0]=this.ambientData[1]=this.ambientData[2]=t,this.gpu.writeBuffer(this.device,this.ambient,this.ambientData),this.gpu.beginRenderPass(this.device,this.pass),this.gpu.setRenderPipeline(this.device,this.pipeline),this.gpu.setIndex(this.device,this.indexBuffer),this.gpu.setVertex(this.device,0,this.position),this.gpu.setVertex(this.device,1,this.offsetColor),this.gpu.setVertex(this.device,2,this.angle),this.gpu.setBindGroup(this.device,0,this.bindGroup),this.gpu.drawIndexed(this.device,3,100),this.gpu.submitRenderPass(this.device),!0}}const x=new Array(16);function b(e,t,n=0,r=0,i=e.length-n){for(let s=0;s<i;++s)t[r+s]=e[n+s];return t}function B(e=0,t=0,n=0,r=0){return[e,t,n,r]}function y(e=0,t=0,n=0){return[e,t,n]}function S(e,t){return function(e,t){let n=0;for(let r=0;r<e.length;++r)n+=e[r]*t[r];return n}(e,t)}function w(e,t=y()){return function(e,t,n){for(let r=0;r<e.length;++r)n[r]=e[r]*t;return n}(e,1/(function(e){return Math.sqrt(S(e,e))}(e)||1),t)}function F(e,t,n=y()){const r=e[2]*t[0]-t[2]*e[0],i=e[0]*t[1]-t[0]*e[1];return n[0]=e[1]*t[2]-t[1]*e[2],n[1]=r,n[2]=i,n}function D(e){for(let t=0;t<16;++t)e[t]=t%5?0:1;return e}function P(e,t,n=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]){return function(e,t,n,r){const i=t.length/4,s=n.length/4;let a=0;x.length=i*s;for(let e=0;e<s;++e)for(let r=0;r<i;++r){a=0;for(let s=0;s<4;++s)a+=t[s*i+r]*n[4*e+s];x[e*i+r]=a}return b(x,r,0,0,x.length),r}(0,e,t,n)}y(),B(),B();const R=y(),G=y(),M=y();function T(e,t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]){return D(t),t[0]=e[0],t[5]=e[1],t[10]=e[2],t}function C(e,t,n,r=1/0,i=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]){const s=1/Math.tan(t/2);if(D(i),i[0]=s/e,i[5]=s,i[11]=-1,i[15]=0,isFinite(r)){const e=1/(n-r);i[10]=(n+r)*e,i[14]=2*n*r*e}else i[10]=-1,i[14]=-2*n;return i}function E(e,t=y(),n=y(0,1,0),r=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]){const i=function(e,t,n=y()){return function(e,t,n){for(let r=0;r<e.length;++r)n[r]=e[r]-t[r];return n}(e,t,n)}(t,e,R);w(i,i);const s=F(i,n,G);w(s,s);const a=F(s,i,M);return w(a,a),r[0]=s[0],r[1]=a[0],r[2]=-i[0],r[4]=s[1],r[5]=a[1],r[6]=-i[1],r[8]=s[2],r[9]=a[2],r[10]=-i[2],r[12]=-S(s,e),r[13]=-S(a,e),r[14]=S(i,e),r[3]=r[7]=r[11]=0,r[15]=1,r}const O="\nstruct VertexInput {\n  @location(0) position: vec3<f32>,\n  @location(1) uv: vec2<f32>,\n};\n\nstruct VertexOutput {\n  @builtin(position) clip_position: vec4<f32>,\n  @location(0) position: vec3<f32>,\n  @location(1) uv: vec2<f32>,\n};\n",V="\nstruct Data { model: mat4x4<f32>, vp: mat4x4<f32>, color: vec3<f32> };\n@group(0) @binding(0) var<uniform> data: Data;\n",U="\nlayout(std140) uniform Data { mat4 model, vp; vec3 color; };\n";function _(e=!1){return e?`${O} ${V}\n@vertex\nfn vs_main(model: VertexInput) -> VertexOutput {\n  var out: VertexOutput;\n  let world = data.model * vec4(model.position, 1.0);\n  out.clip_position = data.vp * world;\n  out.position = world.xyz;\n  out.uv = model.uv;\n  return out;\n}\n`:`#version 300 es\nprecision mediump float;\n${U}\nlayout(location = 0) in vec3 position;\nlayout(location = 1) in vec2 uv;\nout vec3 vPosition;\nout vec2 vUv;\n\nvoid main() {\n  vec4 worldPos = model * vec4(position, 1.0);\n  vPosition = worldPos.xyz;\n  vUv = uv;\n  gl_Position = vp * worldPos;\n}\n`}function k(e=!1){return e?`${O} ${V}\nstruct FragmentOutput {\n  @location(0) color: vec4<f32>,\n  @location(1) uv: vec4<f32>,\n  @location(2) position: vec4<f32>,\n};\n\n@fragment\nfn fs_main(in: VertexOutput) -> FragmentOutput {\n  var out: FragmentOutput;\n  out.color = vec4(data.color, 1);\n  out.uv = vec4(in.uv, 0, 0);\n  out.position = vec4(in.position, 1);\n  return out;\n}\n`:`#version 300 es\nprecision mediump float;\n${U}\nin vec3 vPosition;\nin vec2 vUv;\nlayout(location = 0) out vec4 out0;\nlayout(location = 1) out vec4 out1;\nlayout(location = 2) out vec4 out2;\n\nvoid main() {\n  out0 = vec4(color, 1.0);\n  out1 = vec4(vUv, 0.0, 0.0);\n  out2 = vec4(vPosition, 1.0);\n}\n`}function I(e=!1){return e?`${O}\n@vertex\nfn vs_main(model: VertexInput) -> VertexOutput {\n  var out: VertexOutput;\n  out.clip_position = vec4(model.position, 1);\n  out.uv = model.uv;\n  return out;\n}\n`:"#version 300 es\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec2 uv;\nout vec2 vUv;\n\nvoid main() {\n  gl_Position = vec4(position, 1.0);\n  vUv = uv;\n}\n"}function A(e=!1){return e?`${O}\n@group(0) @binding(0) var tex0: texture_2d<f32>;\n@group(0) @binding(1) var tex0_sampler: sampler;\n@group(0) @binding(2) var tex1: texture_2d<f32>;\n@group(0) @binding(3) var tex1_sampler: sampler;\n@group(0) @binding(4) var tex2: texture_2d<f32>;\n@group(0) @binding(5) var tex2_sampler: sampler;\n\n@fragment\nfn fs_main(in: VertexOutput) -> @location(0) vec4<f32> {\n  let texUV = in.uv * vec2(1, -1) + vec2(0, 1);\n  let colorSum =\n    textureSample(tex0, tex0_sampler, texUV) * step(0.5, 1.0 - in.uv.x) * step(0.5, in.uv.y) +\n    textureSample(tex0, tex0_sampler, texUV) * step(0.5, in.uv.x) * step(0.5, 1.0 - in.uv.y) +\n    textureSample(tex1, tex1_sampler, texUV) * step(0.5, 1.0 - in.uv.x) * step(0.5, 1.0 - in.uv.y) +\n    textureSample(tex2, tex2_sampler, texUV) * step(0.5, in.uv.x) * step(0.5, in.uv.y);\n  return vec4(colorSum.rgb, 1);\n}\n`:"#version 300 es\nprecision mediump float;\nuniform sampler2D tex0, tex1, tex2;\nin vec2 vUv;\nout vec4 outColor;\n\nvoid main() {\n  vec4 colorSum =\n    texture(tex0, vUv) * step(0.5, 1.0 - vUv.x) * step(0.5, vUv.y) +\n    texture(tex0, vUv) * step(0.5, vUv.x) * step(0.5, 1.0 - vUv.y) +\n    texture(tex1, vUv) * step(0.5, 1.0 - vUv.x) * step(0.5, 1.0 - vUv.y) +\n    texture(tex2, vUv) * step(0.5, vUv.x) * step(0.5, vUv.y);\n  outColor = vec4(colorSum.rgb, 1.0);\n}\n"}const L=512,$=(0,i.LI)({positions:i.Xv.positions,uvs:i.Xv.uvs}),q=(0,i.iy)(i.Xv),X=(0,i.LI)(i.lD);class z extends i.r{pass=null;offscreenPass=null;vertBuffer=null;indexBuffer=null;quadVertBuffer=null;cubeDataBuffer=null;cubePipeline=null;quadPipeline=null;colorTex=null;uvTex=null;positionTex=null;depthTex=null;offscreenTexSampler=null;offscreenTexBindGroup=null;cubeBindGroup=null;cubeData=new Float32Array(40);constructor(e,t){super(t),this.device=e}init(){const e=this.gpu.createShader(this.device,{code:_(this.useWebGPU),usage:r.$X.Vertex}),t=this.gpu.createShader(this.device,{code:k(this.useWebGPU),usage:r.$X.Fragment}),n=this.gpu.createShader(this.device,{code:I(this.useWebGPU),usage:r.$X.Vertex}),s=this.gpu.createShader(this.device,{code:A(this.useWebGPU),usage:r.$X.Fragment}),a=this.gpu.createBindGroupLayout(this.device,{entries:[{label:"Data",type:r.$l.Buffer}]}),o=this.gpu.createBindGroupLayout(this.device,{entries:[{binding:0,label:"tex0",type:r.$l.Texture},{binding:1,label:"tex0",type:r.$l.Sampler},{binding:2,label:"tex1",type:r.$l.Texture},{binding:3,label:"tex1",type:r.$l.Sampler},{binding:4,label:"tex2",type:r.$l.Texture},{binding:5,label:"tex2",type:r.$l.Sampler}]});this.cubePipeline=this.gpu.createRenderPipeline(this.device,{vertex:e,fragment:t,buffers:(0,r.O5)([{attributes:[r.gB.F32x3,r.gB.F32x2]}]),bindGroups:[a],depthStencil:{format:r.EV.Depth16,depthCompare:r.wb.LessEqual,depthWrite:!0},primitive:{cullMode:r.Wf.Back},targets:{targets:[{format:r.EV.RGBA8},{format:r.EV.RGBA8},{format:r.EV.RGBA8}]},multisample:{sampleCount:4}}),this.vertBuffer=(0,i.gS)(this.gpu,this.device,$),this.indexBuffer=(0,i.gS)(this.gpu,this.device,q,r.FB.Index),this.cubeDataBuffer=(0,i.gS)(this.gpu,this.device,this.cubeData,r.FB.Uniform|r.FB.Stream),this.cubeBindGroup=this.gpu.createBindGroup(this.device,{layout:a,entries:[{buffer:this.cubeDataBuffer}]}),this.quadPipeline=this.gpu.createRenderPipeline(this.device,{vertex:n,fragment:s,bindGroups:[o],buffers:(0,r.O5)([{attributes:[r.gB.F32x3,r.gB.F32x2]}]),depthStencil:{format:r.EV.Depth24Stencil8}}),this.quadVertBuffer=(0,i.gS)(this.gpu,this.device,X),this.colorTex=this.gpu.createTexture(this.device,{format:r.EV.RGBA8,size:[L,L,1],sampleCount:4,usage:r.v2.TextureBinding|r.v2.RenderAttachment}),this.uvTex=this.gpu.createTexture(this.device,{format:r.EV.RGBA8,size:[L,L,1],sampleCount:4,usage:r.v2.TextureBinding|r.v2.RenderAttachment}),this.positionTex=this.gpu.createTexture(this.device,{format:r.EV.RGBA8,size:[L,L,1],sampleCount:4,usage:r.v2.TextureBinding|r.v2.RenderAttachment}),this.offscreenTexSampler=this.gpu.createSampler(this.device,{magFilter:r.X9.Linear,minFilter:r.X9.Linear}),this.offscreenTexBindGroup=this.gpu.createBindGroup(this.device,{layout:o,entries:[{binding:0,texture:this.colorTex},{binding:1,sampler:this.offscreenTexSampler},{binding:2,texture:this.uvTex},{binding:3,sampler:this.offscreenTexSampler},{binding:4,texture:this.positionTex},{binding:5,sampler:this.offscreenTexSampler}]}),this.depthTex=this.gpu.createTexture(this.device,{format:r.EV.Depth16,size:[L,L,1],usage:r.v2.RenderAttachment,sampleCount:4}),this.offscreenPass=this.gpu.createRenderPass(this.device,{colors:[{view:{texture:this.colorTex},clear:[.1,.2,.3,1]},{view:{texture:this.uvTex},clear:[.3,.1,.2,1]},{view:{texture:this.positionTex},clear:[.1,.3,.2,1]}],depthStencil:{texture:this.depthTex},clearDepth:1}),this.pass=this.gpu.createRenderPass(this.device,{clearColor:[0,0,0,1],clearDepth:1}),this.register([this.pass,this.offscreenPass,this.cubePipeline,this.vertBuffer,this.indexBuffer,this.cubeDataBuffer,this.cubeBindGroup,this.quadPipeline,this.quadVertBuffer,this.offscreenTexBindGroup,this.colorTex,this.uvTex,this.positionTex,this.depthTex,this.offscreenTexSampler,t,e,s,n,a,o])}render(e){{const t=y(.5,.5,.5),n=P(C(this.width/this.height,Math.PI/4,.01,100),E(function(e,t,n=y()){return function(e,t,n){for(let r=0;r<e.length;++r)n[r]=e[r]+t[r];return n}(e,t,n)}([5*Math.cos(e),2.5*Math.sin(e),5*Math.sin(e)],t),t));let r=function(e,t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]){return D(t),b(e,t,0,12,3),t}(t);r=P(r,T([.5,.5,.5]),r),b(r,this.cubeData,0,0,16),b(n,this.cubeData,0,16,16),b([1,1,1],this.cubeData,0,32,3),this.gpu.writeBuffer(this.device,this.cubeDataBuffer,this.cubeData)}return this.gpu.beginRenderPass(this.device,this.offscreenPass),this.gpu.setRenderPipeline(this.device,this.cubePipeline),this.gpu.setIndex(this.device,this.indexBuffer),this.gpu.setVertex(this.device,0,this.vertBuffer),this.gpu.setBindGroup(this.device,0,this.cubeBindGroup),this.gpu.drawIndexed(this.device,q.length),this.gpu.submitRenderPass(this.device),this.gpu.beginRenderPass(this.device,this.pass),this.gpu.setRenderPipeline(this.device,this.quadPipeline),this.gpu.setVertex(this.device,0,this.quadVertBuffer),this.gpu.setBindGroup(this.device,0,this.offscreenTexBindGroup),this.gpu.draw(this.device,6),this.gpu.submitRenderPass(this.device),!0}}const W="\nstruct VertexOutput {\n  @builtin(position) clip_position: vec4<f32>,\n  @location(0) position: vec3<f32>,\n  @location(1) uv: vec2<f32>,\n  @location(2) normal: vec3<f32>,\n};\n",N="\nstruct Data { model: mat4x4<f32>, viewProj: mat4x4<f32>, camPos: vec4<f32> };\n@group(0) @binding(0) var<uniform> data: Data;\n",j="\nlayout(std140) uniform Data { mat4 model, viewProj; vec4 camPos; };\n";function H(e=!1){return e?`${W} ${N}\nstruct VertexInput {\n  @location(0) position: vec3<f32>,\n  @location(1) uv: vec2<f32>,\n  @location(2) normal: vec3<f32>,\n};\n\n@vertex\nfn vs_main(model: VertexInput) -> VertexOutput {\n  var out: VertexOutput;\n  let world = data.model * vec4(model.position, 1);\n  out.clip_position = data.viewProj * world;\n  out.position = world.xyz / world.w;\n  out.uv = model.uv;\n  out.normal = (data.model * vec4(normalize(model.normal), 1)).xyz;\n  return out;\n}\n`:`#version 300 es\nprecision mediump float;\n${j}\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec2 uv;\nlayout (location=2) in vec3 normal;\nout vec3 vPosition;\nout vec2 vUv;\nout vec3 vNormal;\n\nvoid main() {\n  vec4 worldPos = model * vec4(position, 1.0);\n  vPosition = worldPos.xyz / worldPos.w;\n  vNormal = mat3(model) * normalize(normal);\n  vUv = uv;\n  gl_Position = viewProj * worldPos;\n}\n`}function Y(e=!1){return e?`${W} ${N}\n@group(1) @binding(0) var tex: texture_2d<f32>;\n@group(1) @binding(1) var tex_sampler: sampler;\nstruct Material { albedo: vec4<f32>, metallicRoughness: vec2<f32> };\n@group(2) @binding(0) var<uniform> material: Material;\nstruct Env { ambient: vec4<f32>, lightDir: vec4<f32>, lightColor: vec4<f32> };\n@group(2) @binding(1) var<uniform> env: Env;\nconst PI: f32 = 3.14159265359;\n\nfn toSrgb(color: vec3<f32>) -> vec3<f32> { return pow(color, vec3(1.0/2.2)); }\nfn toLinear(color: vec4<f32>) -> vec4<f32> { return vec4(pow(color.rgb, vec3(2.2)), color.a); }\nfn diffuse(color: vec3<f32>) -> vec3<f32> { return color / PI; }\n\nfn specularF(r0: vec3<f32>, r90: vec3<f32>, vDotH: f32) -> vec3<f32> {\n  return r0 + (r90 - r0) * pow(clamp(1.0 - vDotH, 0, 1), 5);\n}\nfn specularD(aSqr: f32, nDotH: f32) -> f32 {\n  let f = (nDotH * nDotH) * (aSqr - 1) + 1;\n  return aSqr / (PI * f * f);\n}\nfn specularG(aSqr: f32, nDotL: f32, nDotV: f32) -> f32 {\n  let gl = 2.0 * nDotL / (nDotL + sqrt(aSqr + (1.0 - aSqr) * (nDotL * nDotL)));\n  let gv = 2.0 * nDotV / (nDotV + sqrt(aSqr + (1.0 - aSqr) * (nDotV * nDotV)));\n  return gl * gv;\n}\n\n@fragment\nfn fs_main(in: VertexOutput) -> @location(0) vec4<f32> {\n  let n = normalize(in.normal);\n  let v = normalize(data.camPos.xyz - in.position);\n  let l = normalize(-env.lightDir.xyz);\n  let h = normalize(l + v);\n  let nDotL = clamp(dot(n, l), 0.001, 1);\n  let nDotV = clamp(abs(dot(n, v)), 0.001, 1);\n  let nDotH = clamp(dot(n, h), 0, 1);\n  let vDotH = clamp(dot(v, h), 0, 1);\n\n  let baseColor = toLinear(textureSample(tex, tex_sampler, in.uv)) * material.albedo;\n\n  const f0 = vec3(0.04);\n  let diffuseColor = baseColor.rgb * (vec3(1.0) - f0) * (1 - material.metallicRoughness.x);\n  let specularColor = mix(f0, baseColor.rgb, material.metallicRoughness.x);\n\n  let r0 = max(max(specularColor.r, specularColor.g), specularColor.b);\n  let r90 = clamp(r0 * 25, 0, 1);\n  let specularEnvR0 = specularColor.rgb;\n  let specularEnvR90 = vec3(1.0) * r90;\n\n  let aSqrt = clamp(material.metallicRoughness.y , 0.004, 1);\n  let aSqr = pow(aSqrt, 4);\n\n  var color0 = vec3(0.0);\n\n  let F = specularF(specularEnvR0, specularEnvR90, vDotH);\n  let D = specularD(aSqr, nDotH);\n  let G = specularG(aSqr, nDotL, nDotV);\n\n  let diffuseStr = (1.0 - F) * diffuse(diffuseColor);\n  let specularStr = F * G * D / (4.0 * nDotL * nDotV);\n\n  color0 += nDotL * env.lightColor.rgb * env.lightColor.a * (diffuseStr + specularStr);\n  color0 += env.ambient.rgb * diffuseColor;\n\n  return vec4(toSrgb(color0), baseColor.a);\n}\n`:`#version 300 es\nprecision mediump float;\n${j}\nuniform sampler2D tex;\nlayout(std140) uniform Material { vec4 albedo; vec2 metallicRoughness;};\nlayout(std140) uniform Env { vec4 ambient; vec4 lightDir; vec4 lightColor; };\nin vec3 vPosition;\nin vec2 vUv;\nin vec3 vNormal;\nout vec4 color;\nconst float PI = 3.14159265359;\n\nvec3 toSrgb(vec3 color) { return pow(color, vec3(1.0/2.2)); }\nvec4 toLinear(vec4 srgbIn) { return vec4(pow(srgbIn.rgb, vec3(2.2)), srgbIn.a); }\nvec3 diffuse(vec3 color) { return color / PI; }\n\nvec3 specularF(vec3 r0, vec3 r90, float vDotH) { return r0 + (r90 - r0) * pow(clamp(1.0 - vDotH, 0.0, 1.0), 5.0); }\nfloat specularD(float aSqr, float nDotH) {\n  float f = (nDotH * nDotH) * (aSqr - 1.0) + 1.0;\n  return aSqr / (PI * f * f);\n}\nfloat specularG(float aSqr, float nDotL, float nDotV) {\n  float gl = 2.0 * nDotL / (nDotL + sqrt(aSqr + (1.0 - aSqr) * (nDotL * nDotL)));\n  float gv = 2.0 * nDotV / (nDotV + sqrt(aSqr + (1.0 - aSqr) * (nDotV * nDotV)));\n  return gl * gv;\n}\n\nvoid main() {\n  vec3 n = normalize(vNormal);\n  vec3 v = normalize(camPos.xyz - vPosition);\n  vec3 l = normalize(-lightDir.xyz);\n  vec3 h = normalize(l + v);\n  float nDotL = clamp(dot(n, l), 0.001, 1.0);\n  float nDotV = clamp(abs(dot(n, v)), 0.001, 1.0);\n  float nDotH = clamp(dot(n, h), 0.0, 1.0);\n  float vDotH = clamp(dot(v, h), 0.0, 1.0);\n\n  vec4 baseColor = toLinear(texture(tex, vUv)) * albedo;\n\n  vec3 f0 = vec3(0.04);\n  vec3 diffuseColor = baseColor.rgb * (vec3(1.0) - f0) * (1.0 - metallicRoughness.x);\n  vec3 specularColor = mix(f0, baseColor.rgb, metallicRoughness.x);\n\n  float r0 = max(max(specularColor.r, specularColor.g), specularColor.b);\n  float r90 = clamp(r0 * 25.0, 0.0, 1.0);\n  vec3 specularEnvR0 = specularColor.rgb;\n  vec3 specularEnvR90 = vec3(1.0, 1.0, 1.0) * r90;\n\n  float a = clamp(metallicRoughness.y, 0.04, 1.0);\n  a *= a;\n  float aSqr = a * a;\n\n  vec3 color0 = vec3(0.0);\n\n  vec3 F = specularF(specularEnvR0, specularEnvR90, vDotH);\n  float D = specularD(aSqr, nDotH);\n  float G = specularG(aSqr, nDotL, nDotV);\n\n  vec3 diffuse = (1.0 - F) * diffuse(diffuseColor);\n  vec3 specular = F * G * D / (4.0 * nDotL * nDotV);\n\n  color0 += nDotL * lightColor.rgb * lightColor.a * (diffuse + specular);\n  color0 += ambient.rgb * diffuseColor;\n\n  color = vec4(toSrgb(color0), baseColor.a);\n}\n`}function J(e=!1){return e?`${W}\n@group(1) @binding(0) var tex: texture_cube<f32>;\n@group(1) @binding(1) var tex_sampler: sampler;\n\n@fragment\nfn fs_main(in: VertexOutput) -> @location(0) vec4<f32> {\n  return textureSample(tex, tex_sampler, normalize(in.position));\n}\n`:"#version 300 es\nprecision mediump float;\nuniform samplerCube tex;\nin vec3 vPosition;\nout vec4 outColor;\n\nvoid main() {\n  outColor = texture(tex, normalize(vPosition));\n}\n"}const Q=i.c4,K=(0,i.LI)({positions:i.Xv.positions,normals:i.Xv.normals,uvs:i.Xv.uvs}),Z=(0,i.iy)(i.Xv);class ee extends i.r{pass=null;vertBuffer=null;indexBuffer=null;matBuffer=null;envBuffer=null;cubeDataBuffer=null;skyDataBuffer=null;cubePipeline=null;cubeTex=null;skyPipeline=null;skyTex=null;sampler=null;envBindGroup=null;cubeTexBindGroup=null;cubeDataBindGroup=null;skyTexBindGroup=null;skyDataBindGroup=null;cubeData=new Float32Array(36);skyData=new Float32Array(36);constructor(e,t){super(t),this.device=e}init(){const e=(0,r.gJ)("airplane"),t=(0,r.gJ)("sky0"),n=(0,r.gJ)("sky1"),s=(0,r.gJ)("sky2"),a=this.gpu.createShader(this.device,{code:H(this.useWebGPU),usage:r.$X.Vertex}),o=this.gpu.createShader(this.device,{code:Y(this.useWebGPU),usage:r.$X.Fragment}),u=this.gpu.createShader(this.device,{code:J(this.useWebGPU),usage:r.$X.Fragment});this.matBuffer=(0,i.gS)(this.gpu,this.device,(0,i.om)([1,1,1,1,.5,.5,0,0]),r.FB.Uniform),this.envBuffer=(0,i.gS)(this.gpu,this.device,(0,i.om)([223/255*.75,246/255*.75,245/255*.75,1,1,-2,1,0,252/255,203/255,203/255,5]),r.FB.Uniform),this.vertBuffer=(0,i.gS)(this.gpu,this.device,K),this.indexBuffer=(0,i.gS)(this.gpu,this.device,Z,r.FB.Index),this.cubeDataBuffer=(0,i.gS)(this.gpu,this.device,this.cubeData,r.FB.Uniform|r.FB.Stream),this.skyDataBuffer=(0,i.gS)(this.gpu,this.device,this.skyData,r.FB.Uniform|r.FB.Stream);const l=this.gpu.createBindGroupLayout(this.device,{entries:[{binding:0,label:"tex",type:r.$l.Texture},{binding:1,label:"tex",type:r.$l.Sampler}]}),c=this.gpu.createBindGroupLayout(this.device,{entries:[{binding:0,label:"tex",type:r.$l.Texture,textureDimension:r.kd.CubeMap},{binding:1,label:"tex",type:r.$l.Sampler}]}),p=this.gpu.createBindGroupLayout(this.device,{entries:[{binding:0,label:"Material",type:r.$l.Buffer},{binding:1,label:"Env",type:r.$l.Buffer}]}),d=this.gpu.createBindGroupLayout(this.device,{entries:[{label:"Data",type:r.$l.Buffer}]});this.cubeTex=this.gpu.createTexture(this.device,{size:[Q,Q,1],usage:r.v2.TextureBinding|r.v2.RenderAttachment}),e&&this.gpu.copyExternalImageToTexture(this.device,{src:e},{texture:this.cubeTex}),this.sampler=this.gpu.createSampler(this.device,{magFilter:r.X9.Linear,minFilter:r.X9.Linear,mipmapFilter:r.X9.Linear,maxAnisotropy:16}),this.cubeDataBindGroup=this.gpu.createBindGroup(this.device,{layout:d,entries:[{buffer:this.cubeDataBuffer}]}),this.cubeTexBindGroup=this.gpu.createBindGroup(this.device,{layout:l,entries:[{binding:0,texture:this.cubeTex},{binding:1,sampler:this.sampler}]}),this.envBindGroup=this.gpu.createBindGroup(this.device,{layout:p,entries:[{binding:0,buffer:this.matBuffer},{binding:1,buffer:this.envBuffer}]});const f={vertex:a,fragment:o,buffers:(0,r.O5)([{attributes:[r.gB.F32x3,r.gB.F32x2,r.gB.F32x3]}]),bindGroups:[d,l,p],depthStencil:{format:r.EV.Depth24Stencil8,depthWrite:!0,depthCompare:r.wb.LessEqual},primitive:{cullMode:r.Wf.Back}};if(this.cubePipeline=this.gpu.createRenderPipeline(this.device,f),this.skyTex=this.gpu.createTexture(this.device,{dimension:r.kd.CubeMap,size:[Q,Q,1],usage:r.v2.TextureBinding|r.v2.RenderAttachment}),t&&n&&s){const e=[t,t,n,s,t,t];for(let t=0;t<6;++t)this.gpu.copyExternalImageToTexture(this.device,{src:e[t]},{texture:this.skyTex,origin:[0,0,t]})}this.skyDataBindGroup=this.gpu.createBindGroup(this.device,{layout:d,entries:[{buffer:this.skyDataBuffer}]}),this.skyTexBindGroup=this.gpu.createBindGroup(this.device,{layout:c,entries:[{binding:0,texture:this.skyTex},{binding:1,sampler:this.sampler}]}),this.skyPipeline=this.gpu.createRenderPipeline(this.device,{vertex:a,fragment:u,buffers:f.buffers,bindGroups:[d,c],depthStencil:f.depthStencil,primitive:{cullMode:r.Wf.Front}}),this.pass=this.gpu.createRenderPass(this.device,{clearColor:[0,0,0,1],clearDepth:1}),this.register([this.vertBuffer,this.indexBuffer,this.matBuffer,this.envBuffer,this.cubeDataBuffer,this.skyDataBuffer,this.cubePipeline,this.cubeTex,this.skyPipeline,this.skyTex,this.sampler,this.envBindGroup,this.cubeDataBindGroup,this.cubeTexBindGroup,this.skyDataBindGroup,this.skyTexBindGroup,this.pass,a,o,u,l,c,p,d])}render(e){{const t=y(10*Math.cos(e),5*Math.sin(e),10*Math.sin(e)),n=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],r=P(C(this.width/this.height,Math.PI/4,.01,100),E(t,[0,0,0]));b(n,this.cubeData,0,0,16),b(r,this.cubeData,0,16,16),b(t,this.cubeData,0,32,3),this.gpu.writeBuffer(this.device,this.cubeDataBuffer,this.cubeData),b(T([10,10,10]),this.skyData,0,0,16),b(r,this.skyData,0,16,16),b(t,this.skyData,0,32,3),this.gpu.writeBuffer(this.device,this.skyDataBuffer,this.skyData)}return this.gpu.beginRenderPass(this.device,this.pass),this.gpu.setRenderPipeline(this.device,this.cubePipeline),this.gpu.setIndex(this.device,this.indexBuffer),this.gpu.setVertex(this.device,0,this.vertBuffer),this.gpu.setBindGroup(this.device,0,this.cubeDataBindGroup),this.gpu.setBindGroup(this.device,1,this.cubeTexBindGroup),this.gpu.setBindGroup(this.device,2,this.envBindGroup),this.gpu.drawIndexed(this.device,Z.length),this.gpu.setRenderPipeline(this.device,this.skyPipeline),this.gpu.setIndex(this.device,this.indexBuffer),this.gpu.setVertex(this.device,0,this.vertBuffer),this.gpu.setBindGroup(this.device,0,this.skyDataBindGroup),this.gpu.setBindGroup(this.device,1,this.skyTexBindGroup),this.gpu.drawIndexed(this.device,Z.length),this.gpu.submitRenderPass(this.device),!0}}const te="\nstruct VertexOutput {\n  @builtin(position) clip_position: vec4<f32>,\n  @location(0) color: vec4<f32>,\n  @location(1) uv: vec2<f32>,\n};\n";function ne(e=!1){return e?`${te}\nstruct VertexInput {\n  @location(0) position: vec4<f32>,\n  @location(1) color: vec4<f32>,\n};\n\nstruct Data { mvp: mat4x4<f32> };\n@group(0) @binding(0) var<uniform> data: Data;\n\n@vertex\nfn vs_main(model: VertexInput) -> VertexOutput {\n  var out: VertexOutput;\n  out.clip_position = data.mvp * model.position;\n  out.color = model.color;\n  return out;\n}\n`:"#version 300 es\nlayout(std140) uniform Data { mat4 mvp; };\nlayout (location=0) in vec4 position;\nlayout (location=1) in vec4 color;\nout vec4 vColor;\n\nvoid main() {\n  gl_Position = mvp * position;\n  vColor = color;\n}\n"}function re(e=!1){return e?`${te}\n@fragment\nfn fs_main(in: VertexOutput) -> @location(0) vec4<f32> {\n  return in.color;\n}\n`:"#version 300 es\nprecision mediump float;\nin vec4 vColor;\nout vec4 outColor;\n\nvoid main() {\n  outColor = vColor;\n}\n"}function ie(e=!1){return e?`${te}\nstruct VertexInput {\n  @location(0) position: vec4<f32>,\n  @location(1) uv: vec2<f32>,\n};\n\n@vertex\nfn vs_main(model: VertexInput) -> VertexOutput {\n  var out: VertexOutput;\n  out.clip_position = model.position;\n  out.uv = model.uv;\n  return out;\n}\n`:"#version 300 es\nlayout (location=0) in vec4 position;\nlayout (location=1) in vec2 uv;\nout vec2 vUv;\n\nvoid main() {\n  gl_Position = position;\n  vUv = uv;\n}\n"}function se(e=!1){return e?`${te}\n@group(0) @binding(0) var tex: texture_2d<f32>;\n@group(0) @binding(1) var tex_sampler: sampler;\nstruct Data { kernel: mat4x4<f32>, texSize: vec2<f32>, kernelWeight: f32 };\n@group(1) @binding(0) var<uniform> data: Data;\n\n@fragment\nfn fs_main(in: VertexOutput) -> @location(0) vec4<f32> {\n  let onePixel = vec2(1.0, 1.0) / data.texSize;\n  let uv = in.uv * vec2(1, -1) + vec2(0, 1);\n  let colorSum =\n    textureSample(tex, tex_sampler, uv + onePixel * vec2(-1, -1)) * data.kernel[0][0] +\n    textureSample(tex, tex_sampler, uv + onePixel * vec2( 0, -1)) * data.kernel[0][1] +\n    textureSample(tex, tex_sampler, uv + onePixel * vec2( 1, -1)) * data.kernel[0][2] +\n    textureSample(tex, tex_sampler, uv + onePixel * vec2(-1,  0)) * data.kernel[1][0] +\n    textureSample(tex, tex_sampler, uv + onePixel * vec2( 0,  0)) * data.kernel[1][1] +\n    textureSample(tex, tex_sampler, uv + onePixel * vec2( 1,  0)) * data.kernel[1][2] +\n    textureSample(tex, tex_sampler, uv + onePixel * vec2(-1,  1)) * data.kernel[2][0] +\n    textureSample(tex, tex_sampler, uv + onePixel * vec2( 0,  1)) * data.kernel[2][1] +\n    textureSample(tex, tex_sampler, uv + onePixel * vec2( 1,  1)) * data.kernel[2][2] ;\n  return vec4((colorSum / data.kernelWeight).rgb, 1);\n}\n`:"#version 300 es\nprecision mediump float;\nuniform sampler2D tex;\nlayout(std140) uniform Data { mat4 kernel; vec2 texSize; float kernelWeight; };\nin vec2 vUv;\nout vec4 outColor;\n\nvoid main() {\n  vec2 onePixel = vec2(1.0, 1.0) / texSize;\n  vec4 colorSum =\n    texture(tex, vUv + onePixel * vec2(-1, -1)) * kernel[0][0] +\n    texture(tex, vUv + onePixel * vec2( 0, -1)) * kernel[0][1] +\n    texture(tex, vUv + onePixel * vec2( 1, -1)) * kernel[0][2] +\n    texture(tex, vUv + onePixel * vec2(-1,  0)) * kernel[1][0] +\n    texture(tex, vUv + onePixel * vec2( 0,  0)) * kernel[1][1] +\n    texture(tex, vUv + onePixel * vec2( 1,  0)) * kernel[1][2] +\n    texture(tex, vUv + onePixel * vec2(-1,  1)) * kernel[2][0] +\n    texture(tex, vUv + onePixel * vec2( 0,  1)) * kernel[2][1] +\n    texture(tex, vUv + onePixel * vec2( 1,  1)) * kernel[2][2] ;\n  outColor = vec4((colorSum / kernelWeight).rgb, 1);\n}\n"}const ae=512,oe=[[-1,-1,-1,0,-1,8,-1,0,-1,-1,-1,0,0,0,0,0],[-2,-1,0,0,-1,1,1,0,0,1,2,0,0,0,0,0],[0,-1,0,0,-1,4,-1,0,0,-1,0,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0]],ue=(0,i.LI)({positions:i.Xv.positions,colors:i.Xv.colors}),le=(0,i.iy)(i.Xv),ce=(0,i.LI)(i.lD);class pe extends i.r{pass=null;offscreenPass=null;vertBuffer=null;indexBuffer=null;quadVertBuffer=null;cubeDataBuffer=null;kernelDataBuffer=null;cubePipeline=null;quadPipeline=null;offscreenTex=null;offscreenTexSampler=null;depthTex=null;offscreenTexBindGroup=null;cubeBindGroup=null;kernelBindGroup=null;cubeData=new Float32Array(16);kernelData=new Float32Array(20);constructor(e,t){super(t),this.device=e}init(){const e=this.gpu.createShader(this.device,{code:ne(this.useWebGPU),usage:r.$X.Vertex}),t=this.gpu.createShader(this.device,{code:re(this.useWebGPU),usage:r.$X.Fragment}),n=this.gpu.createShader(this.device,{code:ie(this.useWebGPU),usage:r.$X.Vertex}),s=this.gpu.createShader(this.device,{code:se(this.useWebGPU),usage:r.$X.Fragment}),a=this.gpu.createBindGroupLayout(this.device,{entries:[{label:"Data",type:r.$l.Buffer}]}),o=this.gpu.createBindGroupLayout(this.device,{entries:[{binding:0,label:"tex",type:r.$l.Texture},{binding:1,label:"tex",type:r.$l.Sampler}]});this.cubePipeline=this.gpu.createRenderPipeline(this.device,{vertex:e,fragment:t,buffers:(0,r.O5)([{attributes:[r.gB.F32x3,r.gB.F32x4]}]),bindGroups:[a],depthStencil:{format:r.EV.Depth16,depthCompare:r.wb.LessEqual,depthWrite:!0},primitive:{cullMode:r.Wf.Back},targets:{targets:[{format:r.EV.RGBA8}]}}),this.vertBuffer=(0,i.gS)(this.gpu,this.device,ue),this.indexBuffer=(0,i.gS)(this.gpu,this.device,le,r.FB.Index),this.cubeDataBuffer=(0,i.gS)(this.gpu,this.device,this.cubeData,r.FB.Uniform|r.FB.Stream),this.cubeBindGroup=this.gpu.createBindGroup(this.device,{layout:a,entries:[{buffer:this.cubeDataBuffer}]}),this.quadPipeline=this.gpu.createRenderPipeline(this.device,{vertex:n,fragment:s,bindGroups:[o,a],buffers:(0,r.O5)([{attributes:[r.gB.F32x3,r.gB.F32x2]}]),depthStencil:{format:r.EV.Depth24Stencil8}}),this.quadVertBuffer=(0,i.gS)(this.gpu,this.device,ce),this.kernelDataBuffer=(0,i.gS)(this.gpu,this.device,this.kernelData,r.FB.Uniform|r.FB.Stream),this.offscreenTex=this.gpu.createTexture(this.device,{format:r.EV.RGBA8,size:[ae,ae,1],sampleCount:1,usage:r.v2.TextureBinding|r.v2.RenderAttachment}),this.offscreenTexSampler=this.gpu.createSampler(this.device,{magFilter:r.X9.Linear,minFilter:r.X9.Linear}),this.offscreenTexBindGroup=this.gpu.createBindGroup(this.device,{layout:o,entries:[{binding:0,texture:this.offscreenTex},{binding:1,sampler:this.offscreenTexSampler}]}),this.kernelBindGroup=this.gpu.createBindGroup(this.device,{layout:a,entries:[{buffer:this.kernelDataBuffer}]}),this.depthTex=this.gpu.createTexture(this.device,{format:r.EV.Depth16,size:[ae,ae,1],usage:r.v2.RenderAttachment,sampleCount:1}),this.offscreenPass=this.gpu.createRenderPass(this.device,{colors:[{view:{texture:this.offscreenTex},clear:[.25,.25,.25,1]}],depthStencil:{texture:this.depthTex},clearDepth:1}),this.pass=this.gpu.createRenderPass(this.device,{clearColor:[0,0,0,1],clearDepth:1}),this.register([this.cubePipeline,this.vertBuffer,this.indexBuffer,this.cubeDataBuffer,this.kernelDataBuffer,this.quadPipeline,this.quadVertBuffer,this.offscreenTex,this.offscreenTexSampler,this.depthTex,this.pass,this.offscreenPass,this.cubeBindGroup,this.offscreenTexBindGroup,this.kernelBindGroup,t,e,s,n,o,a])}render(e){b(P(C(this.width/this.height,Math.PI/4,.01,100),E([10*Math.cos(e),5*Math.sin(e),10*Math.sin(e)],[0,0,0])),this.cubeData,0,0,16),this.gpu.writeBuffer(this.device,this.cubeDataBuffer,this.cubeData);{const t=oe[Math.floor(e/2)%oe.length];let n=0;for(let e=0;e<t.length;++e)n+=t[e];n=n<=0?1:n,b(t,this.kernelData,0,0,16),this.kernelData[16]=ae,this.kernelData[17]=ae,this.kernelData[18]=n,this.gpu.writeBuffer(this.device,this.kernelDataBuffer,this.kernelData)}return this.gpu.beginRenderPass(this.device,this.offscreenPass),this.gpu.setRenderPipeline(this.device,this.cubePipeline),this.gpu.setIndex(this.device,this.indexBuffer),this.gpu.setVertex(this.device,0,this.vertBuffer),this.gpu.setBindGroup(this.device,0,this.cubeBindGroup),this.gpu.drawIndexed(this.device,le.length),this.gpu.submitRenderPass(this.device),this.gpu.beginRenderPass(this.device,this.pass),this.gpu.setRenderPipeline(this.device,this.quadPipeline),this.gpu.setVertex(this.device,0,this.quadVertBuffer),this.gpu.setBindGroup(this.device,0,this.offscreenTexBindGroup),this.gpu.setBindGroup(this.device,1,this.kernelBindGroup),this.gpu.draw(this.device,6),this.gpu.submitRenderPass(this.device),!0}}const de="\nstruct VertexOutput {\n  @builtin(position) clip_position: vec4<f32>,\n  @location(0) uv: vec2<f32>,\n  @location(1) normal: vec3<f32>,\n};\n",fe="\nstruct Data { mvp: mat4x4<f32>, outline: vec4<f32> };\n@group(0) @binding(0) var<uniform> data: Data;\n",he="\nlayout(std140) uniform Data { mat4 mvp; vec4 outline; };\n";function ge(e=!1){return e?`${fe} ${de}\nstruct VertexInput {\n  @location(0) position: vec3<f32>,\n  @location(1) uv: vec2<f32>,\n};\n\n@vertex\nfn vs_main(model: VertexInput) -> VertexOutput {\n  var out: VertexOutput;\n  out.clip_position = data.mvp * vec4<f32>(model.position, 1.0);\n  out.uv = model.uv;\n  out.normal = normalize(model.position);\n  return out;\n}\n`:`#version 300 es\nprecision mediump float;\n${he}\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec2 uv;\nout vec2 vUv;\n\nvoid main(void) {\n  vUv = uv;\n  gl_Position = mvp * vec4(position, 1.0);\n}\n`}function ve(e=!1){return e?`${de}\n@group(1) @binding(0) var tex: texture_2d<f32>;\n@group(1) @binding(1) var tex_sampler: sampler;\n\n@fragment\nfn fs_main(in: VertexOutput) -> @location(0) vec4<f32> {\n  return textureSample(tex, tex_sampler, in.uv);\n}\n`:"#version 300 es\nprecision mediump float;\nin vec2 vUv;\nout vec4 outColor;\nuniform sampler2D tex;\n\nvoid main () {\n  outColor = texture(tex, vUv);\n}\n"}function me(e=!1){return e?`${fe} ${de}\n@fragment\nfn fs_main(in: VertexOutput) -> @location(0) vec4<f32> {\n  return data.outline;\n}\n`:`#version 300 es\nprecision mediump float;\n${he}\nout vec4 outColor;\n\nvoid main () {\n  outColor = outline;\n}\n`}const xe=(0,i.LI)({positions:i.Xv.positions,uvs:i.Xv.uvs}),be=(0,i.iy)(i.Xv),Be=be.length,ye=new Uint16Array(2*Be);for(let e=0;e<Be;++e)ye[e]=be[e];for(let e=0;e<Be;e+=3)ye[Be+e]=be[e+2],ye[Be+e+1]=be[e+1],ye[Be+e+2]=be[e];const Se=i.c4;class we extends i.r{pass=null;vertBuffer=null;indexBuffer=null;data=new Float32Array(192);dataBuffer=null;texture=null;sampler=null;cubePipeline=null;cubeOutlinePipeline=null;textureBindGroup=null;dataBindGroup=null;constructor(e,t){super(t),this.device=e}init(){this.pass=this.gpu.createRenderPass(this.device,{clearDepth:1,clearStencil:0});const e=this.initPipelines();this.vertBuffer=(0,i.gS)(this.gpu,this.device,xe),this.indexBuffer=(0,i.gS)(this.gpu,this.device,ye,r.FB.Index),this.dataBuffer=(0,i.gS)(this.gpu,this.device,this.data,r.FB.Uniform|r.FB.Stream),this.texture=this.gpu.createTexture(this.device,{size:[Se,Se,1],usage:r.v2.TextureBinding|r.v2.RenderAttachment});const t=(0,r.gJ)("airplane");t&&this.gpu.copyExternalImageToTexture(this.device,{src:t},{texture:this.texture}),this.sampler=this.gpu.createSampler(this.device,{}),this.dataBindGroup=this.gpu.createBindGroup(this.device,{layout:e[0],entries:[{buffer:this.dataBuffer,bufferSize:256}]}),this.textureBindGroup=this.gpu.createBindGroup(this.device,{layout:e[1],entries:[{binding:0,texture:this.texture},{binding:1,sampler:this.sampler}]}),this.register([this.pass,this.vertBuffer,this.indexBuffer,this.dataBuffer,this.texture,this.sampler,this.textureBindGroup,this.dataBindGroup])}initPipelines(){const e=this.gpu.createShader(this.device,{code:ge(this.useWebGPU),usage:r.$X.Vertex}),t=this.gpu.createShader(this.device,{code:ve(this.useWebGPU),usage:r.$X.Fragment}),n=this.gpu.createShader(this.device,{code:me(this.useWebGPU),usage:r.$X.Fragment}),i=this.gpu.createBindGroupLayout(this.device,{entries:[{label:"Data",type:r.$l.Buffer,bufferDynamicOffset:!0}]}),s=this.gpu.createBindGroupLayout(this.device,{entries:[{binding:0,label:"tex",type:r.$l.Texture},{binding:1,label:"tex",type:r.$l.Sampler}]});return this.cubePipeline=this.gpu.createRenderPipeline(this.device,{vertex:e,fragment:t,buffers:(0,r.O5)([{attributes:[r.gB.F32x3,r.gB.F32x2]}]),bindGroups:[i,s],depthStencil:{format:r.EV.Depth24Stencil8,depthWrite:!0,depthCompare:r.wb.LessEqual,stencilBack:{compare:r.wb.Always,passOp:r.xS.Replace},stencilFront:{compare:r.wb.Always,passOp:r.xS.Replace}},primitive:{cullMode:r.Wf.Back}}),this.cubeOutlinePipeline=this.gpu.createRenderPipeline(this.device,{vertex:e,fragment:n,buffers:(0,r.O5)([{attributes:[r.gB.F32x3,r.gB.F32x2]}]),bindGroups:[i],depthStencil:{format:r.EV.Depth24Stencil8,depthWrite:!0,stencilBack:{compare:r.wb.NotEqual},stencilFront:{compare:r.wb.NotEqual},stencilWriteMask:0},primitive:{cullMode:r.Wf.Back}}),this.register([this.cubePipeline,this.cubeOutlinePipeline,e,t,n,s,i]),[i,s]}render(e){{const t=P(C(this.width/this.height,Math.PI/4,.01,100),E([10*Math.cos(e),5*Math.sin(e),10*Math.sin(e)],[0,0,0]));let n=t;b(n,this.data,0,0,16),n=P(t,T([1.1,1.1,1.1])),b(n,this.data,0,64,16),b([.1,.3,.2,1],this.data,0,80,4),n=P(t,T([10,10,10])),b(n,this.data,0,128,16)}return this.gpu.writeBuffer(this.device,this.dataBuffer,this.data),this.gpu.beginRenderPass(this.device,this.pass),this.gpu.setRenderPipeline(this.device,this.cubePipeline),this.gpu.setIndex(this.device,this.indexBuffer),this.gpu.setVertex(this.device,0,this.vertBuffer),this.gpu.setBindGroup(this.device,0,this.dataBindGroup,[0]),this.gpu.setBindGroup(this.device,1,this.textureBindGroup),this.gpu.setStencilRef(this.device,1),this.gpu.drawIndexed(this.device,Be),this.gpu.setBindGroup(this.device,0,this.dataBindGroup,[512]),this.gpu.setStencilRef(this.device,0),this.gpu.drawIndexed(this.device,Be,1,Be),this.gpu.setRenderPipeline(this.device,this.cubeOutlinePipeline),this.gpu.setIndex(this.device,this.indexBuffer),this.gpu.setVertex(this.device,0,this.vertBuffer),this.gpu.setBindGroup(this.device,0,this.dataBindGroup,[256]),this.gpu.setStencilRef(this.device,1),this.gpu.drawIndexed(this.device,Be),this.gpu.submitRenderPass(this.device),!0}}const Fe="\nstruct VertexOutput {\n  @builtin(position) clip_position: vec4<f32>,\n  @location(0) uv: vec2<f32>,\n  @location(1) normal: vec3<f32>,\n};\n";function De(e=!1){return e?`${Fe}\nstruct VertexInput {\n  @location(0) position: vec3<f32>,\n  @location(1) uv: vec2<f32>,\n};\n\nstruct Data { mvp: mat4x4<f32> };\n@group(1) @binding(0) var<uniform> data: Data;\n\n@vertex\nfn vs_main(model: VertexInput) -> VertexOutput {\n  var out: VertexOutput;\n  out.clip_position = data.mvp * vec4(model.position, 1);\n  out.uv = model.uv;\n  out.normal = normalize(model.position);\n  return out;\n}\n`:"#version 300 es\nlayout(std140) uniform Data { mat4 mvp; };\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec2 uv;\nout vec2 vUv;\nout vec3 vNormal;\n\nvoid main() {\n  vUv = uv;\n  vNormal = normalize(position);\n  gl_Position = mvp * vec4(position, 1.0);\n}\n"}function Pe(e=!1){return e?`${Fe}\n@group(0) @binding(0) var tex: texture_2d<f32>;\n@group(0) @binding(1) var tex_sampler: sampler;\n\n@fragment\nfn fs_main(in: VertexOutput) -> @location(0) vec4<f32> {\n  return textureSample(tex, tex_sampler, in.uv);\n}\n`:"#version 300 es\nprecision mediump float;\nuniform sampler2D tex;\nin vec2 vUv;\nout vec4 outColor;\n\nvoid main() {\n  outColor = texture(tex, vUv);\n}\n"}function Re(e=!1){return e?`${Fe}\n@group(0) @binding(0) var tex: texture_cube<f32>;\n@group(0) @binding(1) var tex_sampler: sampler;\n\n@fragment\nfn fs_main(in: VertexOutput) -> @location(0) vec4<f32> {\n  return textureSample(tex, tex_sampler, normalize(in.normal));\n}\n`:"#version 300 es\nprecision mediump float;\nuniform samplerCube tex;\nin vec3 vNormal;\nout vec4 outColor;\n\nvoid main() {\n  outColor = texture(tex, normalize(vNormal));\n}\n"}const Ge=i.c4,Me=[];for(let e=0;e<i.Xv.uvs.length;++e){const t=i.Xv.uvs[e];Me.push([2*t[0],2*t[1]])}const Te=(0,i.LI)({positions:i.Xv.positions,uvs:Me}),Ce=(0,i.iy)(i.Xv);class Ee extends i.r{pass=null;vertBuffer=null;indexBuffer=null;cube=null;skybox=null;constructor(e,t){super(t),this.device=e}init(){const e=this.gpu.createShader(this.device,{code:De(this.useWebGPU),usage:r.$X.Vertex}),t=this.gpu.createShader(this.device,{code:Pe(this.useWebGPU),usage:r.$X.Fragment}),n=this.gpu.createShader(this.device,{code:Re(this.useWebGPU),usage:r.$X.Fragment}),s=(0,r.gJ)("airplane"),a=(0,r.gJ)("sky0"),o=(0,r.gJ)("sky1"),u=(0,r.gJ)("sky2");this.vertBuffer=(0,i.gS)(this.gpu,this.device,Te),this.indexBuffer=(0,i.gS)(this.gpu,this.device,Ce,r.FB.Index);const l={vertex:e,fragment:t,buffers:(0,r.O5)([{attributes:[r.gB.F32x3,r.gB.F32x2]}]),depthStencil:{format:r.EV.Depth24Stencil8,depthWrite:!0,depthCompare:r.wb.LessEqual},primitive:{cullMode:r.Wf.Back}};this.cube=new Oe(this.gpu,this.device,l,r.kd.D2,this.vertBuffer,this.indexBuffer,Ce.length),s&&this.gpu.copyExternalImageToTexture(this.device,{src:s},{texture:this.cube.texture});const c={vertex:e,fragment:n,buffers:l.buffers,depthStencil:l.depthStencil,primitive:{cullMode:r.Wf.Front}};if(this.skybox=new Oe(this.gpu,this.device,c,r.kd.CubeMap,this.vertBuffer,this.indexBuffer,Ce.length),a&&o&&u){const e=[a,a,o,u,a,a];for(let t=0;t<6;++t)this.gpu.copyExternalImageToTexture(this.device,{src:e[t]},{texture:this.skybox.texture,origin:[0,0,t]})}this.pass=this.gpu.createRenderPass(this.device,{clearColor:[.1,.2,.3,1],clearDepth:1}),this.register([this.vertBuffer,this.indexBuffer,this.pass,e,t,n])}render(e){const t=P(C(this.width/this.height,Math.PI/4,.01,100),E([10*Math.cos(e),5*Math.sin(e),10*Math.sin(e)],[0,0,0]));let n=t;return this.cube.updateCamera(n),n=P(t,T([10,10,10]),t),this.skybox.updateCamera(n),this.gpu.beginRenderPass(this.device,this.pass),this.cube.render(this.device),this.skybox.render(this.device),this.gpu.submitRenderPass(this.device),!0}destroy(){super.destroy(),this.cube.destroy(),this.skybox.destroy()}}class Oe{cameraData=new Float32Array(16);constructor(e,t,n,s,a,o,u){this.gpu=e,this.device=t,this.vertexBuffer=a,this.indexBuffer=o,this.indexCount=u;const l=e.createBindGroupLayout(t,{entries:[{label:"tex",type:r.$l.Texture,textureDimension:s,binding:0},{label:"tex",type:r.$l.Sampler,binding:1}]}),c=e.createBindGroupLayout(t,{entries:[{label:"Data",type:r.$l.Buffer}]});n.bindGroups=[l,c],this.pipeline=e.createRenderPipeline(t,n),this.texture=e.createTexture(t,{dimension:s,size:[Ge,Ge,1],usage:r.v2.TextureBinding|r.v2.RenderAttachment}),this.sampler=e.createSampler(t,{magFilter:r.X9.Linear,minFilter:r.X9.Linear,mipmapFilter:r.X9.Linear,addressModeU:r.OB.Repeat,addressModeV:r.OB.Repeat,maxAnisotropy:16}),this.cameraBuffer=(0,i.gS)(e,t,this.cameraData,r.FB.Uniform|r.FB.Stream),this.textureBindGroup=e.createBindGroup(t,{layout:l,entries:[{binding:0,texture:this.texture},{binding:1,sampler:this.sampler}]}),this.cameraBindGroup=e.createBindGroup(t,{layout:c,entries:[{buffer:this.cameraBuffer}]}),l.destroy(),c.destroy()}updateCamera(e){b(e,this.cameraData,0,0,16),this.gpu.writeBuffer(this.device,this.cameraBuffer,this.cameraData)}render(e){this.gpu.setRenderPipeline(e,this.pipeline),this.gpu.setIndex(e,this.indexBuffer),this.gpu.setVertex(e,0,this.vertexBuffer),this.gpu.setBindGroup(e,0,this.textureBindGroup),this.gpu.setBindGroup(e,1,this.cameraBindGroup),this.gpu.drawIndexed(e,this.indexCount)}destroy(){this.pipeline.destroy(),this.textureBindGroup.destroy(),this.cameraBindGroup.destroy(),this.texture.destroy(),this.sampler.destroy(),this.cameraBuffer.destroy()}}class Ve{constructor(e,t,n){this.id=e,this.title=t,this.factory=n}}const Ue=[new Ve("basic","Hello World",((e,t)=>new l(e,t))),new Ve("instancing","Buffers & Instancing",((e,t)=>new m(e,t))),new Ve("texture","Texture & Sampler",((e,t)=>new Ee(e,t))),new Ve("stencil","Depth Stencil",((e,t)=>new we(e,t))),new Ve("postprocess","Post-processing",((e,t)=>new pe(e,t))),new Ve("mrt","Multi Render Targets",((e,t)=>new z(e,t))),new Ve("pbr","Physically Based Rendering",((e,t)=>new ee(e,t)))]},618:(e,t,n)=>{n.d(t,{db:()=>a,r:()=>s,Xv:()=>d,Go:()=>i,lD:()=>p,c4:()=>o,CJ:()=>c,gS:()=>f,om:()=>h,MA:()=>g,iy:()=>l,LI:()=>u});var r=n(665);class i{init(){}render(e){return!1}resize(e,t){}destroy(){}}class s extends i{resources=[];width=1;height=1;constructor(e=!1){super(),this.useWebGPU=e}get gpu(){return this.useWebGPU?r.SD:r.XY}resize(e,t){this.width=e,this.height=t}destroy(){for(let e=0;e<this.resources.length;++e)this.resources[e].destroy();this.resources.length=0}register(e){for(let t=0;t<e.length;++t)this.resources.push(e[t])}}const a=1337,o=512;function u(e){const t=e.positions,n=e.uvs,r=e.normals,i=e.colors;let s=0,a=0;t&&(a=t.length,s+=3),n&&(s+=2),r&&(s+=3),i&&(s+=4);const o=new Float32Array(s*a);for(let e=0;e<a;++e){let a=0;t&&(o[e*s+a++]=t[e][0],o[e*s+a++]=t[e][1],o[e*s+a++]=t[e][2]),n&&(o[e*s+a++]=n[e][0],o[e*s+a++]=n[e][1]),r&&(o[e*s+a++]=r[e][0],o[e*s+a++]=r[e][1],o[e*s+a++]=r[e][2]),i&&(o[e*s+a++]=i[e][0],o[e*s+a++]=i[e][1],o[e*s+a++]=i[e][2],o[e*s+a++]=i[e][3])}return o}function l(e){const t=e.indices;if(!t)return new Uint16Array(0);const n=new Uint16Array(3*t.length);for(let e=0;e<t.length;++e)n[3*e]=t[e][0],n[3*e+1]=t[e][1],n[3*e+2]=t[e][2];return n}const c={positions:[[0,.5,0],[.5,-.5,0],[-.5,-.5,0]],colors:[[1,0,0,1],[0,1,0,1],[0,0,1,1]]},p={positions:[[-1,-1,1],[1,-1,1],[1,1,1],[-1,-1,1],[1,1,1],[-1,1,1]],uvs:[[0,0],[1,0],[1,1],[0,0],[1,1],[0,1]]},d={indices:[[2,1,0],[2,0,3],[6,5,4],[6,4,7],[10,9,8],[10,8,11],[14,13,12],[14,12,15],[18,17,16],[18,16,19],[20,21,22],[23,20,22]],positions:[[-1,1,1],[1,1,1],[1,-1,1],[-1,-1,1],[1,1,-1],[-1,1,-1],[-1,-1,-1],[1,-1,-1],[1,1,1],[1,1,-1],[1,-1,-1],[1,-1,1],[-1,1,-1],[-1,1,1],[-1,-1,1],[-1,-1,-1],[-1,1,-1],[1,1,-1],[1,1,1],[-1,1,1],[-1,-1,-1],[1,-1,-1],[1,-1,1],[-1,-1,1]],uvs:[[0,0],[1,0],[1,1],[0,1],[0,0],[1,0],[1,1],[0,1],[0,0],[1,0],[1,1],[0,1],[0,0],[1,0],[1,1],[0,1],[0,0],[1,0],[1,1],[0,1],[0,0],[1,0],[1,1],[0,1]],normals:[[0,0,1],[0,0,1],[0,0,1],[0,0,1],[0,0,-1],[0,0,-1],[0,0,-1],[0,0,-1],[1,0,0],[1,0,0],[1,0,0],[1,0,0],[-1,0,0],[-1,0,0],[-1,0,0],[-1,0,0],[0,1,0],[0,1,0],[0,1,0],[0,1,0],[0,-1,0],[0,-1,0],[0,-1,0],[0,-1,0]],colors:[[1,0,0,1],[1,0,0,1],[1,0,0,1],[1,0,0,1],[0,1,0,1],[0,1,0,1],[0,1,0,1],[0,1,0,1],[0,0,1,1],[0,0,1,1],[0,0,1,1],[0,0,1,1],[1,1,0,1],[1,1,0,1],[1,1,0,1],[1,1,0,1],[0,1,1,1],[0,1,1,1],[0,1,1,1],[0,1,1,1],[1,0,1,1],[1,0,1,1],[1,0,1,1],[1,0,1,1]]};function f(e,t,n,i=r.FB.Vertex){const s=e.createBuffer(t,{usage:i,size:n.byteLength});return e.writeBuffer(t,s,n),s}function h(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=e[n];return t}function g(e){const t=new Uint16Array(e.length);for(let n=0;n<e.length;++n)t[n]=e[n];return t}},721:(e,t,n)=>{n.d(t,{g:()=>o,l:()=>u});var r=n(837),i=n(618);function s(e){const t=new Image;return e.canvas.toBlob((e=>t.src=URL.createObjectURL(e))),t}const a={};function o(e){return a[e]}function u(e=i.c4){const t=document.createElement("div");return t.style.display="none",document.body.appendChild(t),new Promise(((n,r)=>{let i=1;const a=()=>{--i<=0&&n()},o=function(e){const t=new Image;return t.crossOrigin="anonymous",t.src="./airplane.png",t}();o.id="airplane",o.onload=async()=>{await l(o),a()},o.onerror=r,t.appendChild(o);const u=function(e){const t=document.createElement("canvas");t.width=t.height=e;const n=t.getContext("2d"),r="#28ccdf",i="#39314b",a=n.createLinearGradient(0,0,0,e);a.addColorStop(0,r),a.addColorStop(.4,"#8aebf1"),a.addColorStop(.99,"#dff6f5"),a.addColorStop(1,i),n.fillStyle=r,n.fillRect(0,0,e,e);const o=s(n);n.fillStyle=i,n.fillRect(0,0,e,e);const u=s(n);return n.fillStyle=a,n.fillRect(0,0,e,e),[s(n),o,u]}(e);i+=u.length;for(let e=0;e<u.length;++e)u[e].id=`sky${e}`,u[e].onload=async()=>{await l(u[e]),a()},u[e].onerror=r,t.appendChild(u[e])}))}async function l(e){const t=await createImageBitmap(e);a[e.id]=t,(0,r.gf)(e.id,t)}},440:(e,t,n)=>{n.a(e,(async(e,t)=>{try{var r=n(940),i=n(513),s=n(100),a=n(720),o=n(837),u=n(618),l=n(972),c=n(721),p=n(869),d=e([p]);p=(d.then?(await d)():d)[0];let v,m=!1,x=!1,b=0,B=0,y=0;const S=await(0,p.Y)();function f(e,t,n){return(t,r)=>x?new T(e,r?B:y):n(t,r)}const w={};for(let C=0;C<l.B.length;++C)w[l.B[C].id]=new l.p(l.B[C].id,l.B[C].title,f(C,l.B[C].id,l.B[C].factory));w.gltf=new l.p("gltf","glTF Model Viewer 🔗",(()=>new M("../gltf-viewer"))),w.docs=new l.p("docs","API Documentation 🔗",(()=>new M("../docs")));const F=document.getElementById("menu");for(const E in w){const O=document.createElement("li"),V=document.createElement("a");V.id=w[E].id,V.href=`#${w[E].id}`,V.innerText=w[E].title,O.appendChild(V),F.appendChild(O)}const D=document.getElementById("canvas"),P=document.getElementById("canvas2");function h(e){const t=window.devicePixelRatio||1;if(t>1){const{width:n,height:r}=e;e.width=n*t,e.height=r*t,e.style.width=`${n}px`,e.style.height=`${r}px`}}h(D),h(P);const R=r.requestWebGL2Device(D,{stencil:!0,powerPreference:"low-power"},i.N.TextureAnisotropic|i.N.TextureHalfFloatLinear|i.N.TextureFloatLinear|i.N.ColorBufferFloat);y=(0,o.JE)(u.db,R,"canvas",r);const G=s.requestWebGPUDevice(P,{powerPreference:"low-power",depthStencilFormat:a.EV.Depth24Stencil8});function g(e=0){b=requestAnimationFrame(g),e&&(v.render(e/1e3)||cancelAnimationFrame(b))}G.then((e=>{e&&(B=(0,o.JE)(u.db,e,"canvas2",s))})),window.loadExample=async function(e=location.hash){const t=w[e.replace("#","")];if(t){document.getElementById("title").innerText=t.title,document.getElementById("code").href=`https://github.com/andykswong/mugl/tree/main/packages/examples/src/apps/${t.id}.ts`,cancelAnimationFrame(b),v&&(v.destroy(),m?s.resetDevice(await G):r.resetDevice(R)),v=t.factory(m?await G:R,m),v.init();const e=m?P:D;v.resize(e.width,e.height),g()}},(0,c.l)().then((()=>{window.loadExample()})),location.hash=location.hash||"#basic",document.getElementById("envMode")?.addEventListener("click",(e=>{x=e.target.checked,window.loadExample()})),document.getElementById("gpuMode")?.addEventListener("click",(e=>{m=e.target.checked,D.style.display=m?"none":"block",P.style.display=m?"block":"none",window.loadExample()}));class M extends u.Go{constructor(e){super(),this.uri=e}render(){return window.location.replace(this.uri),!1}}class T extends u.Go{constructor(e,t){super(),this.id=e,this.deviceId=t}init(){S.init(this.id,this.deviceId,m)}render(e){return S.render(e)}resize(e,t){S.resize(e,t)}destroy(){S.destroy()}}t()}catch(U){t(U)}}),1)},665:(e,t,n)=>{n.d(t,{OB:()=>i.OB,$l:()=>i.$l,FB:()=>i.FB,wb:()=>i.wb,Wf:()=>i.Wf,X9:()=>i.X9,$X:()=>i.$X,xS:()=>i.xS,kd:()=>i.kd,EV:()=>i.EV,v2:()=>i.v2,gB:()=>i.gB,XY:()=>a,SD:()=>o,gJ:()=>u,O5:()=>s.O5});var r=n(721),i=n(720),s=n(232),a=n(940),o=n(100);function u(e){return(0,r.g)(e)}},497:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{D:()=>o,J:()=>a});var i=n(132),s=e([i]);function a(){}i=(s.then?(await s)():s)[0];const o=Date.now;r()}catch(u){r(u)}}))},869:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{Y:()=>u});var i=n(837),s=n(132),a=n(618),o=e([s]);async function u(){return(0,i.GH)(a.db,s.memory),{init:s.init,render:s.render,resize:s.resize,destroy:s.destroy}}s=(o.then?(await o)():o)[0],r()}catch(l){r(l)}}))},940:(e,t,n)=>{n.r(t),n.d(t,{beginRenderPass:()=>H,copyBuffer:()=>q,copyExternalImageToTexture:()=>W,copyTexture:()=>N,copyTextureToBuffer:()=>j,createBindGroup:()=>I,createBindGroupLayout:()=>k,createBuffer:()=>E,createRenderPass:()=>_,createRenderPipeline:()=>A,createSampler:()=>V,createShader:()=>U,createTexture:()=>O,draw:()=>ee,drawIndexed:()=>te,flush:()=>C,generateMipmap:()=>X,getDeviceFeatures:()=>T,isDeviceLost:()=>f,readBuffer:()=>L,requestWebGL2Device:()=>G,resetDevice:()=>M,setBindGroup:()=>Z,setBlendConst:()=>ie,setIndex:()=>Q,setRenderPipeline:()=>J,setScissorRect:()=>re,setStencilRef:()=>se,setVertex:()=>K,setViewport:()=>ne,submitRenderPass:()=>Y,writeBuffer:()=>$,writeTexture:()=>z});var r=n(544),i=n(720),s=n(232),a=n(222);function o(e){switch(e){case r.R8:case r.sVf:case r.WsI:case r.h2H:return r.hMC;case r.LrX:case r.q6i:case r.iVF:case r.xiM:case r.If2:case r.$oc:return r.vPF;case r.$mf:case r.wAm:case r.MJi:case r.qed:return r.RG;case r.coM:case r.LGL:case r.ZLz:case r.qB9:case r.m89:case r.nR4:return r.BIZ;case r.hw6:case r.jnw:case r.Mgl:case r.blh:case r._hT:case r.Nug:return r.VS8;case r.r5A:case r.Qjo:case r.rxK:case r.Rkd:case r.Msg:case r.gtH:return r.SE0;case r.Khk:return r.eXq;case r.kv5:case r.d_Y:case r.dj5:return r.Mh0;case r.ABS:case r.Vwh:return r.U0z}return r.Hnw}function u(e){switch(e){case r.R8:case r.LrX:case r.sVf:case r.q6i:return 1;case r.iVF:case r.xiM:case r.$mf:case r.coM:case r.wAm:case r.LGL:case r.WsI:return 2;case r.If2:case r.$oc:case r.h2H:case r.ZLz:case r.qB9:case r.MJi:case r.hw6:case r.jnw:case r.r5A:case r.Mgl:case r.Qjo:case r.blh:case r.Khk:return 4;case r.m89:case r.nR4:case r.qed:case r.rxK:case r.Msg:case r._hT:return 8;case r.Rkd:case r.gtH:case r.Nug:return 16;case r.kv5:return 2;case r.d_Y:case r.ABS:case r.dj5:return 4;case r.Vwh:return 8}return 0}function l(e){switch(e){case r.R8:case r.LrX:case r.$mf:case r.coM:case r.hw6:case r.jnw:case r.r5A:return r.wgU;case r.sVf:case r.q6i:case r.wAm:case r.LGL:case r.Mgl:case r.Qjo:return r.d93;case r.iVF:case r.ZLz:case r.rxK:return r.Ae4;case r.xiM:case r.qB9:case r.Msg:return r.QoO;case r.If2:case r.m89:case r.Rkd:return r.r1O;case r.$oc:case r.nR4:case r.gtH:return r.bBe;case r.blh:return r.fa2;case r.WsI:case r.MJi:case r._hT:return r.s_k;case r.h2H:case r.qed:case r.Nug:return r.RFu;case r.Khk:return r.JpA;case r.kv5:return r.Ae4;case r.d_Y:return r.r1O;case r.ABS:return r.mLJ;case r.dj5:return r.RFu;case r.Vwh:return r.EZf}return r.Hnw}function c(e){switch(e){case r.q6i:case r.xiM:case r.$oc:case r.LGL:case r.qB9:case r.nR4:case r.Qjo:case r.Msg:case r.gtH:return r.bBe;case r.LrX:case r.iVF:case r.If2:case r.coM:case r.ZLz:case r.m89:case r.r5A:case r.rxK:case r.Rkd:return r.r1O}return r.RFu}var p=n(513);const d=4294967295;function f(e){return e.gl.isContextLost()}function h(e){const t=g();e.blendColor(1,1,1,1),m(e,null,t,t,0,!0);const n=e.getParameter(r.Fcx);for(let t=0;t<n;++t)e.disableVertexAttribArray(t);return e.pixelStorei(r.d8P,1),e.pixelStorei(r.T_I,1),{copyFrameBuffer:e.createFramebuffer(),buffers:[],state:t,pipeline:null,index:null,stencilRef:0,scissor:!1}}function g(e={}){const t=e.primitive||{},n=e.depthStencil||{},{stencilFront:i={},stencilBack:s={}}=n,{sampleCount:a=1,alphaToCoverage:o=!1}=e.multisample||{},u=e.targets||{},l=u.targets&&u.targets.map((e=>v(e.blendColor,e.blendAlpha,e.writeMask)))||[];return{sampleCount:a,alphaToCoverage:o,topology:t.topology||r.QPP,indexFormat:t.indexFormat||r.Ae4,frontFace:t.frontFace||r.iHR,cullMode:t.cullMode||r.Hnw,depth:!!e.depthStencil,depthWrite:n.depthWrite||!1,depthFormat:n.format||r.kv5,depthCompare:n.depthCompare||r.Brs,depthBias:n.depthBias||0,depthBiasSlopeScale:n.depthBiasSlopeScale||0,stencil:!(!n.stencilFront&&!n.stencilBack),stencilFrontCompare:i.compare||r.Brs,stencilFrontFailOp:i.failOp||r.M$f,stencilFrontDepthFailOp:i.depthFailOp||r.M$f,stencilFrontPassOp:i.passOp||r.M$f,stencilBackCompare:s.compare||r.Brs,stencilBackFailOp:s.failOp||r.M$f,stencilBackDepthFailOp:s.depthFailOp||r.M$f,stencilBackPassOp:s.passOp||r.M$f,stencilReadMask:n.stencilReadMask||d,stencilWriteMask:n.stencilWriteMask||d,blend:!!e.targets,drawBuffers:l,...v(u.blendColor,u.blendAlpha,u.writeMask)}}function v(e={},t={},n=i.Yw.All){return{blendWriteMask:n,blendColorOp:e.operation||r.BjA,blendColorSrcFactor:void 0!==e.srcFactor?e.srcFactor:r.ryP,blendColorDstFactor:e.dstFactor||r.xEJ,blendAlphaOp:t.operation||r.BjA,blendAlphaSrcFactor:void 0!==t.srcFactor?t.srcFactor:r.ryP,blendAlphaDstFactor:t.dstFactor||r.xEJ}}function m(e,t,n,i,s=0,a=!1){let o=!1,u=0,l=0,c=0,p=0;if(u=i.frontFace,(a||n.frontFace!==u)&&e.frontFace(u),u=i.cullMode,(a||n.cullMode!==u)&&((o=u!==r.Hnw)&&e.cullFace(u),S(e,r.DuX,o)),o=i.alphaToCoverage,(a||n.alphaToCoverage!==o)&&S(e,r.fRZ,o),o=!!i.depth,(a||n.depth!==o)&&S(e,r.Elr,o),(a||o)&&(B(e,n.depthWrite,i.depthWrite,a),u=i.depthCompare,(a||n.depthCompare!==u)&&e.depthFunc(u)),u=i.depthBiasSlopeScale,l=i.depthBias,(a||n.depthBiasSlopeScale!==u||n.depthBias!==l)&&(S(e,r.gYZ,!(!u&&!l)),e.polygonOffset(u,l)),o=!!i.stencil,(a||n.stencil!==o)&&S(e,r.nT3,o),(a||o)&&(u=i.stencilReadMask,o=a||n.stencilReadMask!==u,l=i.stencilFrontCompare,(o||n.stencilFrontCompare!==l)&&e.stencilFuncSeparate(r.kpY,l,s,u),l=i.stencilBackCompare,(o||n.stencilBackCompare!==l)&&e.stencilFuncSeparate(r.FoO,l,s,u),u=i.stencilFrontFailOp,l=i.stencilFrontDepthFailOp,c=i.stencilFrontPassOp,(a||n.stencilFrontFailOp!==u||n.stencilFrontDepthFailOp!==l||n.stencilFrontPassOp!==c)&&e.stencilOpSeparate(r.kpY,u,l,c),u=i.stencilBackFailOp,l=i.stencilBackDepthFailOp,c=i.stencilBackPassOp,(a||n.stencilBackFailOp!==u||n.stencilBackDepthFailOp!==l||n.stencilBackPassOp!==c)&&e.stencilOpSeparate(r.FoO,u,l,c),y(e,n.stencilWriteMask,i.stencilWriteMask,a)),o=i.blend,(a||n.blend!==o)&&S(e,r.uvM,o),(a||o)&&(u=i.blendColorSrcFactor,l=i.blendColorDstFactor,c=i.blendAlphaSrcFactor,p=i.blendAlphaDstFactor,(a||n.blendColorSrcFactor!==u||n.blendColorDstFactor!==l||n.blendAlphaSrcFactor!==c||n.blendAlphaDstFactor!==p)&&e.blendFuncSeparate(u,l,c,p),u=i.blendColorOp,l=i.blendAlphaOp,(a||n.blendColorOp!==u||n.blendAlphaOp!==l)&&e.blendEquationSeparate(u,l),b(e,n.blendWriteMask,i.blendWriteMask,a),t))for(let e=0;e<i.drawBuffers.length;++e)x(t,e,i,i.drawBuffers[e])}function x(e,t,n,r,s=!1){let a=0,o=0,u=0,l=0;a=r.blendColorSrcFactor,o=r.blendColorDstFactor,u=r.blendAlphaSrcFactor,l=r.blendAlphaDstFactor,(s||n.blendColorSrcFactor!==a||n.blendColorDstFactor!==o||n.blendAlphaSrcFactor!==u||n.blendAlphaDstFactor!==l)&&e.blendFuncSeparateiOES(t,a,o,u,l),a=r.blendColorOp,o=r.blendAlphaOp,(s||n.blendColorOp!==a||n.blendAlphaOp!==o)&&e.blendEquationSeparateiOES(t,a,o),function(e,t,n,r,s=!1){(s||n!==r)&&e.colorMaskiOES(t,!!(r&i.Yw.Red),!!(r&i.Yw.Green),!!(r&i.Yw.Blue),!!(r&i.Yw.Alpha))}(e,t,n.blendWriteMask,r.blendWriteMask,s)}function b(e,t,n,r=!1){(r||t!==n)&&e.colorMask(!!(n&i.Yw.Red),!!(n&i.Yw.Green),!!(n&i.Yw.Blue),!!(n&i.Yw.Alpha))}function B(e,t,n,r=!1){(r||t!==n)&&e.depthMask(n)}function y(e,t,n,r=!1){(r||t!==n)&&e.stencilMask(n)}function S(e,t,n){n?e.enable(t):e.disable(t)}function w(e,t,{texture:n,slice:i=0,mipLevel:a=0}){if((0,s.cj)(n.type))e.framebufferTextureLayer(r.fjQ,t,n.glt,a,i);else{const s=n.type===r.Ep7?r._fi+i:n.type;e.framebufferTexture2D(r.fjQ,t,s,n.glt,a)}}function F(e,t,n){const i=e.createFramebuffer();return e.bindFramebuffer(r.fjQ,i),w(e,t,n),i}function D(e,t,n,i,s,a=r.Z$E){e.bindFramebuffer(r.xWx,t),e.bindFramebuffer(r.iXE,n),e.readBuffer(a),e.blitFramebuffer(0,0,i.width,i.height,0,0,i.width,i.height,s,r.jX6)}function P(e,t,n){e.bindBuffer(r.qOY,t.glb);for(let r=0;r<t.attributes.length;++r){const{ptr:i,step:s}=t.attributes[r],a=[...i];a[5]+=n,e.vertexAttribPointer(...a),e.vertexAttribDivisor(i[0],s)}}const R=255;function G(e,t={},n=0){const r=e.getContext("webgl2",t);if(r){let t=0;for(const e in p.T)n&+e&&r.getExtension(p.T[+e])&&(t|=+e);const i=t&p.N.DrawBuffersIndexed?r.getExtension(p.T[p.N.DrawBuffersIndexed]):null,s=h(r),a=e=>{e.deleteFramebuffer(s.copyFrameBuffer)};return{canvas:e,gl:r,features:t,extDrawBuffersi:i,pass:null,state:s,destroy(){a(this.gl)}}}return null}function M(e){e.destroy(),Object.assign(e.state,h(e.gl))}function T(e){return e.features}function C(e){e.gl.flush()}function E(e,t){const n=t.usage&i.FB.Uniform?r.MfQ:t.usage&i.FB.Index?r.cXR:r.qOY,s=t.usage&i.FB.Stream?r.F_0:t.usage&i.FB.Dynamic?r.kdr:r.MBW,a=e.gl.createBuffer();return e.gl.bindBuffer(n,a),e.gl.bufferData(n,t.size,s),{gl:e.gl,glb:a,type:n,size:t.size,destroy(){this.gl.deleteBuffer(a)}}}function O(e,t){const n=t.sampleCount||1,a=t.dimension||r.Bxn,o=t.format||r.hw6,u=!(0,s.EC)(o)||(t.usage||0)&i.v2.TextureBinding,[l,c,p]=t.size||[1,1,1],d=a===r.Ep7?6:a===r.Bxn?1:p;let f=null,h=null;return(n>1||!u)&&(h=e.gl.createRenderbuffer(),e.gl.bindRenderbuffer(r.bW,h),n>1?e.gl.renderbufferStorageMultisample(r.bW,n,o,l,c):e.gl.renderbufferStorage(r.bW,o,l,c)),u&&(f=e.gl.createTexture(),e.gl.activeTexture(r.VKS),e.gl.bindTexture(a,f),(0,s.cj)(a)?e.gl.texStorage3D(a,t.mipLevelCount||1,o,l,c,d):e.gl.texStorage2D(a,t.mipLevelCount||1,o,l,c)),{gl:e.gl,glt:f,glrb:h,type:a,format:o,width:l,height:c,depth:d,samples:n,destroy(){var e;(e=this.gl).deleteTexture(f),e.deleteRenderbuffer(h)}}}function V(e,t={}){const n=e.gl.createSampler();let i=t.minFilter||r.jX6;return t.mipmapFilter&&(i=t.mipmapFilter===r.jX6?i===r.jX6?r.wFH:r.LRx:i===r.jX6?r.Oxh:r.q0S),e.gl.samplerParameteri(n,r.$X9,i),e.gl.samplerParameteri(n,r.Xeo,t.magFilter||r.jX6),e.gl.samplerParameteri(n,r.n4e,t.addressModeU||r.mYe),e.gl.samplerParameteri(n,r.nbD,t.addressModeV||r.mYe),e.gl.samplerParameteri(n,r.J51,t.addressModeW||r.mYe),e.gl.samplerParameterf(n,r.HiH,void 0!==t.lodMaxClamp?t.lodMaxClamp:32),e.gl.samplerParameterf(n,r.pge,t.lodMinClamp||0),t.compare&&(e.gl.samplerParameterf(n,r.LOg,r.fqf),e.gl.samplerParameterf(n,r.w0M,t.compare)),(t.maxAnisotropy||1)>1&&e.gl.samplerParameterf(n,r.cMJ,Math.min(t.maxAnisotropy||1,e.gl.getParameter(r.Cip))),{gls:n,gl:e.gl,destroy(){this.gl.deleteSampler(n)}}}function U(e,t){const n=t.usage===i.$X.Vertex?r.HI8:r.YMo,s=e.gl.createShader(n);return e.gl.shaderSource(s,t.code),e.gl.compileShader(s),{gl:e.gl,gls:s,destroy(){this.gl.deleteShader(s)}}}function _(e,t={}){let n=null;const i=[],a=t.depthStencil?t.depthStencil.texture:null,o=a&&(0,s.IO)(a.format)||!1;if(t.colors&&t.colors.length){n=e.gl.createFramebuffer(),e.gl.bindFramebuffer(r.fjQ,n);for(let n=0;n<t.colors.length;++n)t.colors[n].view.texture.samples>1?e.gl.framebufferRenderbuffer(r.fjQ,r.Z$E+n,r.bW,t.colors[n].view.texture.glrb):w(e.gl,r.Z$E+n,t.colors[n].view);t.colors.length>1&&e.gl.drawBuffers(t.colors.map(((e,t)=>r.Z$E+t))),a&&(a.glrb?e.gl.framebufferRenderbuffer(r.fjQ,o?r.TU:r.Ec0,r.bW,a.glrb):w(e.gl,o?r.TU:r.Ec0,t.depthStencil));for(let n=0;n<t.colors.length;++n)i.push(t.colors[n].view.texture.samples>1?F(e.gl,r.Z$E,t.colors[n].view):null);i.push(a&&a.samples>1&&a.glt?F(e.gl,o?r.TU:r.Ec0,t.depthStencil):null)}return{gl:e.gl,glfb:n,glrfb:i,depth:a,color:t.colors?t.colors.map((e=>e.view.texture)):[],clearColors:t.colors?t.colors.map((e=>e.clear)):[],clearColor:t.clearColor,clearDepth:t.clearDepth,clearStencil:t.clearStencil,destroy(){(e=>{e.deleteFramebuffer(n);for(const t of i)e.deleteFramebuffer(t)})(this.gl)}}}function k(e,t){return{entries:t.entries.map(((e,t)=>({binding:t,...e}))),destroy(){}}}function I(e,t){return{entries:t.entries.map(((e,t)=>({binding:t,...e}))),destroy(){}}}function A(e,t){const n=function(e,t,n){const r=e.gl.createProgram();return e.gl.attachShader(r,t),e.gl.attachShader(r,n),e.gl.linkProgram(r),r}(e,t.vertex.gls,t.fragment.gls),s=[],a={};let o=0,u=0;if(t.bindGroups){for(let l=0;l<t.bindGroups.length;++l){const c=t.bindGroups[l].entries;s.push([]);for(let t=0;t<c.length;++t){const p=c[t];let d=null,f=r.EP2;p.type===i.$l.Buffer?(f=e.gl.getUniformBlockIndex(n,p.label),e.gl.uniformBlockBinding(n,f,o++)):p.type===i.$l.Texture&&(d=e.gl.getUniformLocation(n,p.label),a[p.label]=u++),s[l][p.binding]={...p,loc:d,index:f,slot:p.type===i.$l.Buffer?o-1:p.type===i.$l.Texture?u-1:0}}}for(let e=0;e<t.bindGroups.length;++e){const n=t.bindGroups[e].entries;for(let t=0;t<n.length;++t)n[t].type===i.$l.Sampler&&a[n[t].label]&&(s[e][n[t].binding].slot=a[n[t].label])}}return{gl:e.gl,glp:n,buffers:t.buffers,cache:s,state:g(t),destroy(){this.gl.deleteProgram(n)}}}function L(e,t,n,i=0){const s=Math.max(n?.byteLength||0,t.size-i,0);if(s<=0)return{status:a.Q.Error,value:n||new Uint8Array,then:(e,t)=>Promise.reject().then(e,t)};let o=n;const u={status:a.Q.Pending,get value(){return o},then:(e,t)=>l.then(e,t)},l=function(e,t,n,i,s){const a=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),function(e,t,n,i){return new Promise(((n,i)=>{!function s(){const a=e.clientWaitSync(t,0,0);a==r.XjA?i():a==r.iRB?setTimeout(s,10):n()}()}))}(e,a).finally((()=>e.deleteSync(a))).then((()=>{const r=new Uint8Array(s);return e.bindBuffer(t,n),e.getBufferSubData(t,i,r,0,s),r}))}(e.gl,t.type,t.glb,i,s).then((e=>(n?.set(e),u.status=a.Q.Done,o=n||e)),(e=>{throw u.status=a.Q.Error,e}));return u}function $(e,t,n,r=0){e.gl.bindBuffer(t.type,t.glb),e.gl.bufferSubData(t.type,r,n)}function q(e,t,n,i=t.size,s=0,a=0){e.gl.bindBuffer(r.u99,t.glb),e.gl.bindBuffer(r.i_,n.glb),e.gl.copyBufferSubData(r.u99,r.i_,s,a,i)}function X(e,t,n=r.wdg){e.gl.activeTexture(r.VKS),e.gl.bindTexture(t.type,t.glt),e.gl.hint(r.jpO,n),e.gl.generateMipmap(t.type)}function z(e,{texture:t,mipLevel:n=0,origin:[i,a,c]=[0,0,0]},p,{offset:d=0,bytesPerRow:f,rowsPerImage:h=0},[g,v,m]=[t.width-i,t.height-a,t.depth-c]){const x=o(t.format),b=l(t.format),B=t.type===r.Ep7,y=B?r._fi+c:t.type;e.gl.activeTexture(r.VKS),e.gl.bindTexture(t.type,t.glt);const S=u(t.format),w=h||v,F=Math.floor(f/S),D=d-d%f;if(e.gl.pixelStorei(r.AAP,w),e.gl.pixelStorei(r.GNc,F),e.gl.pixelStorei(r.u$q,Math.floor(d%f/S)),e.gl.pixelStorei(r.Sr6,0),e.gl.pixelStorei(r.mku,0),(0,s.cj)(t.type))e.gl.texSubImage3D(y,n,i,a,c,g,v,m,t.format,b,p,D);else if(B)for(let t=c;t<c+m;++t)e.gl.pixelStorei(r.Sr6,t*F*w),e.gl.texSubImage2D(y+t,n,i,a,g,v,x,b,p,D);else e.gl.texSubImage2D(y,n,i,a,g,v,x,b,p,D)}function W(e,{src:t,origin:[n,i]=[0,0]},{texture:a,mipLevel:u=0,origin:[c,p,d]=[0,0,0]},[f,h]=[t.width-n,t.height-i]){const g=l(a.format),v=a.type===r.Ep7?r._fi+d:a.type;e.gl.activeTexture(r.VKS),e.gl.bindTexture(a.type,a.glt),e.gl.pixelStorei(r.u$q,n),e.gl.pixelStorei(r.Sr6,i),e.gl.pixelStorei(r.mku,0),e.gl.pixelStorei(r.AAP,0),(0,s.cj)(a.type)?e.gl.texSubImage3D(v,u,c,p,d,f,h,1,a.format,g,t):e.gl.texSubImage2D(v,u,c,p,f,h,o(a.format),g,t)}function N(e,{texture:t,mipLevel:n=0,origin:[i,a,o]=[0,0,0]},{texture:u,mipLevel:l=0,origin:[c,p,d]=[0,0,0]},[f,h,g]=[t.width-i,t.height-a,t.depth-o]){const v=u.type===r.Ep7,m=v?r._fi+d:u.type;if(e.gl.activeTexture(r.VKS),e.gl.bindTexture(u.type,u.glt),e.gl.readBuffer(r.Z$E),e.gl.bindFramebuffer(r.fjQ,e.state.copyFrameBuffer),(0,s.cj)(t.type)||t.type===r.Ep7)for(let x=o;x<o+g;++x)w(e.gl,r.Z$E,{texture:t,mipLevel:n,slice:x}),(0,s.cj)(u.type)?e.gl.copyTexSubImage3D(m+(v?x:0),l,c,p,d,i,a,f,h):e.gl.copyTexSubImage2D(m+(v?x:0),l,c,p,i,a,f,h);else{const o=0;w(e.gl,r.Z$E,{texture:t,mipLevel:n,slice:o}),(0,s.cj)(u.type)?e.gl.copyTexSubImage3D(m+(v?o:0),l,c,p,d,i,a,f,h):e.gl.copyTexSubImage2D(m+(v?o:0),l,c,p,i,a,f,h)}e.gl.bindFramebuffer(r.fjQ,e.pass?e.pass.glfb:null)}function j(e,{texture:t,mipLevel:n=0,origin:[i,a,c]=[0,0,0]},p,{offset:d=0,bytesPerRow:f,rowsPerImage:h=0},[g,v,m]=[t.width-i,t.height-a,t.depth-c]){e.gl.bindBuffer(r.cJA,p.glb),e.gl.readBuffer(r.Z$E),e.gl.bindFramebuffer(r.fjQ,e.state.copyFrameBuffer);const x=l(t.format),b=o(t.format),B=u(t.format),y=h||v,S=Math.floor(f/B),F=d-d%f;if(e.gl.pixelStorei(r.U02,S),e.gl.pixelStorei(r.$Hb,Math.floor(d%f/B)),e.gl.pixelStorei(r.k5F,0),(0,s.cj)(t.type)||t.type===r.Ep7)for(let s=c;s<c+m;++s)w(e.gl,r.Z$E,{texture:t,mipLevel:n,slice:s}),e.gl.readPixels(i,a,g,v,b,x,F+(s-c)*f*y);else{const s=0;w(e.gl,r.Z$E,{texture:t,mipLevel:n,slice:s}),e.gl.readPixels(i,a,g,v,b,x,F)}e.gl.bindFramebuffer(r.fjQ,e.pass?e.pass.glfb:null)}function H(e,t=_(e)){let n=e.gl.drawingBufferWidth,s=e.gl.drawingBufferHeight;t.color.length&&(n=t.color[0].width,s=t.color[0].height),e.gl.bindFramebuffer(r.fjQ,t.glfb),e.gl.viewport(0,0,n,s),e.gl.depthRange(0,1),e.state.scissor&&(e.state.scissor=!1,S(e.gl,r.yN1,!1));let a=0;if(isNaN(t.clearDepth)||(a|=r.yXb,e.gl.clearDepth(t.clearDepth),B(e.gl,e.state.state.depthWrite,!0),e.state.state.depthWrite=!0),isNaN(t.clearStencil)||(a|=r.ecp,e.gl.clearStencil(t.clearStencil),y(e.gl,e.state.state.stencilWriteMask,R),e.state.state.stencilWriteMask=R),b(e.gl,e.state.state.blendWriteMask,i.Yw.All),e.state.state.blendWriteMask=i.Yw.All,t.color.length){for(let n=0;n<t.color.length;++n)if(t.clearColors[n]){const i=c(t.color[n].format);i===r.bBe?e.gl.clearBufferiv(r.r$7,n,t.clearColors[n]):i===r.r1O?e.gl.clearBufferuiv(r.r$7,n,t.clearColors[n]):e.gl.clearBufferfv(r.r$7,n,t.clearColors[n])}}else t.clearColor&&(a|=r._Hr,e.gl.clearColor(...t.clearColor));a&&e.gl.clear(a),e.pass=t}function Y(e){if(e.pass){for(let t=0;t<e.pass.color.length;++t)e.pass.glrfb[t]&&D(e.gl,e.pass.glfb,e.pass.glrfb[t],e.pass.color[t],r._Hr,r.Z$E+t);const t=e.pass.glrfb[e.pass.glrfb.length-1];e.pass.depth&&t&&D(e.gl,e.pass.glfb,t,e.pass.depth,r.yXb|r.ecp)}e.pass=null}function J(e,t){if(e.state.pipeline===t)return;e.state.pipeline&&e.state.pipeline.glp===t.glp||e.gl.useProgram(t.glp),m(e.gl,e.extDrawBuffersi,e.state.state,t.state,e.state.stencilRef),Object.assign(e.state.state,t.state);const n=[];for(const{attributes:t}of e.state.buffers)for(const{ptr:e}of t)n[e[0]]=1;e.state.buffers=Array(t.buffers.length);for(let r=0;r<t.buffers.length;++r){const{attributes:i,stride:a,stepMode:o=0}=t.buffers[r],u=[];e.state.buffers[r]={glb:null,attributes:u,stride:a,step:o,offset:0,instanceOffset:0};for(const{format:e,offset:t,shaderLocation:l}of i)n[l]=(n[l]||0)+2,u.push({buffer:r,ptr:[l,(0,s.Xm)(e),(0,s.S5)(e),(0,s.bA)(e),a,t],step:o})}for(let t=0;t<n.length;++t)2===n[t]?e.gl.enableVertexAttribArray(t):1===n[t]&&e.gl.disableVertexAttribArray(t);e.state.pipeline=t}function Q(e,t){t.glb!==e.state.index&&e.gl.bindBuffer(r.cXR,e.state.index=t.glb)}function K(e,t,n,r=0){const i=e.state.buffers[t];!i||i.glb===n.glb&&i.offset===r||(i.glb=n.glb,i.offset=r,i.instanceOffset=0,P(e.gl,i,r))}function Z(e,t,n,i=[]){if(e.state.pipeline)for(let s=0,a=0;s<n.entries.length;++s){const o=n.entries[s],u=e.state.pipeline.cache[t]&&e.state.pipeline.cache[t][o.binding];if(u)if(o.buffer){let t=o.bufferOffset||0;u.bufferDynamicOffset&&(t+=i[a]||0,++a),e.gl.bindBufferRange(r.MfQ,u.slot,o.buffer.glb,t,o.bufferSize||o.buffer.size-t)}else o.texture?(e.gl.activeTexture(r.VKS+u.slot),e.gl.bindTexture(o.texture.type,o.texture.glt),e.gl.uniform1i(u.loc,u.slot)):o.sampler&&e.gl.bindSampler(u.slot,o.sampler.gls)}}function ee(e,t,n=1,r=0,i=0){for(const t of e.state.buffers)t.step&&t.instanceOffset!==i&&(t.instanceOffset=i,P(e.gl,t,i*t.stride));e.gl.drawArraysInstanced(e.state.state.topology,r,t,n)}function te(e,t,n=1,r=0,i=0){for(const t of e.state.buffers)t.step&&t.instanceOffset!==i&&(t.instanceOffset=i,P(e.gl,t,i*t.stride));e.gl.drawElementsInstanced(e.state.state.topology,t,e.state.state.indexFormat,r*(0,s.Ij)(e.state.state.indexFormat),n)}function ne(e,t,n,r,i,s=0,a=1){e.gl.viewport(t,n,r,i),e.gl.depthRange(s,a)}function re(e,t,n,i,s){e.state.scissor||(S(e.gl,r.yN1,!0),e.state.scissor=!0),e.gl.scissor(t,n,i,s)}function ie(e,t){e.gl.blendColor(...t)}function se(e,t){if(e.state.stencilRef!==t){const{stencilFrontCompare:n,stencilBackCompare:i,stencilReadMask:s}=e.state.state;e.gl.stencilFuncSeparate(r.kpY,n,t,s),e.gl.stencilFuncSeparate(r.FoO,i,t,s),e.state.stencilRef=t}}},513:(e,t,n)=>{n.d(t,{N:()=>r,T:()=>i});const r={TextureAnisotropic:1,TextureHalfFloatLinear:2,TextureFloatLinear:4,ColorBufferFloat:8,DrawBuffersIndexed:16},i={1:"EXT_texture_filter_anisotropic",2:"OES_texture_half_float_linear",4:"OES_texture_float_linear",8:"EXT_color_buffer_float",16:"OES_draw_buffers_indexed"}},544:(e,t,n)=>{n.d(t,{$Hb:()=>Ze,$X9:()=>Te,$mf:()=>Xt,$oc:()=>Kt,$sD:()=>Ae,AAP:()=>st,ABS:()=>_t,Ae4:()=>K,BIZ:()=>$t,BjA:()=>S,Brs:()=>ge,Bxn:()=>Oe,BzQ:()=>he,C4F:()=>ue,C6Q:()=>Se,CW:()=>$,Cip:()=>mn,DXJ:()=>pe,DuX:()=>V,EP2:()=>fn,EPl:()=>yt,EZf:()=>Vt,Ec0:()=>We,Elr:()=>k,Ep7:()=>Ve,Erx:()=>a,F_0:()=>M,Fcx:()=>oe,FoO:()=>O,GNc:()=>He,GPd:()=>le,HI8:()=>ae,HiH:()=>ct,Hnw:()=>je,If2:()=>Zt,J51:()=>ot,J57:()=>me,Jhs:()=>w,JpA:()=>wt,KTj:()=>F,KXm:()=>pt,Khk:()=>St,LGL:()=>en,LOg:()=>ht,LRx:()=>Pe,LrX:()=>Yt,M$f:()=>ve,MBW:()=>T,MJi:()=>Nt,MfQ:()=>dn,Mgl:()=>ln,Mh0:()=>ne,Msg:()=>Gt,NRq:()=>j,Nug:()=>bt,OAz:()=>v,Oxh:()=>Re,PB6:()=>b,Q0U:()=>D,QPP:()=>l,Qjo:()=>Mt,QoO:()=>Q,R8:()=>qt,RFu:()=>te,RG:()=>Lt,Rb8:()=>y,RcM:()=>xe,Rkd:()=>Ft,SE0:()=>Ct,Sr6:()=>Ye,TMl:()=>m,TU:()=>Ne,T_I:()=>X,Tr1:()=>at,U02:()=>Qe,U0z:()=>Xe,Ukp:()=>o,VGh:()=>ye,VKS:()=>_e,VS8:()=>ie,Vwh:()=>Ot,WsI:()=>zt,Xeo:()=>Me,XjA:()=>gn,YMo:()=>se,Z$E:()=>ze,ZLz:()=>rn,_Hr:()=>s,_fi:()=>Ue,_hT:()=>Bt,aRZ:()=>ke,b0H:()=>c,bBe:()=>Z,bW:()=>$e,blh:()=>rt,brc:()=>f,cJA:()=>vt,cMJ:()=>vn,cXR:()=>G,cgb:()=>u,coM:()=>tn,d8P:()=>z,d93:()=>Y,d_Y:()=>ft,dj5:()=>Et,eXq:()=>re,ecp:()=>i,fRZ:()=>L,fa2:()=>ut,fjQ:()=>Le,fqf:()=>xt,gUF:()=>ce,gYZ:()=>A,gq9:()=>N,gtH:()=>Rt,h2H:()=>Wt,hMC:()=>tt,hw6:()=>nt,hy5:()=>g,i$_:()=>h,iFn:()=>de,iHR:()=>q,iRB:()=>hn,iVF:()=>Qt,iXE:()=>It,i_:()=>pn,jX6:()=>we,jgr:()=>be,jnw:()=>mt,jpO:()=>H,k2X:()=>dt,k5F:()=>Ke,kdr:()=>C,kpY:()=>E,kv5:()=>qe,ldG:()=>P,m89:()=>an,mLJ:()=>Ut,mYe:()=>Ie,miX:()=>B,mku:()=>it,n4e:()=>Ce,nR4:()=>sn,nT3:()=>_,nbD:()=>Ee,njp:()=>x,nl2:()=>Be,pge:()=>lt,q0S:()=>Ge,q6i:()=>Ht,qB9:()=>nn,qOY:()=>R,qed:()=>jt,r$7:()=>et,r1O:()=>ee,r5A:()=>Pt,rxK:()=>Dt,ryP:()=>d,sVf:()=>on,s_k:()=>At,t$R:()=>Fe,u$q:()=>Je,u99:()=>cn,uvM:()=>U,vPF:()=>Tt,vkJ:()=>fe,w0M:()=>gt,wAm:()=>un,wFH:()=>De,wdg:()=>W,wgU:()=>J,xEJ:()=>p,xWx:()=>kt,xiM:()=>Jt,yN1:()=>I,yXb:()=>r});const r=256,i=1024,s=16384,a=0,o=1,u=3,l=4,c=5,p=0,d=1,f=768,h=769,g=770,v=771,m=772,x=773,b=774,B=775,y=776,S=32774,w=32778,F=32779,D=32769,P=32770,R=34962,G=34963,M=35040,T=35044,C=35048,E=1028,O=1029,V=2884,U=3042,_=2960,k=2929,I=3089,A=32823,L=32926,$=2304,q=2305,X=3317,z=3333,W=4352,N=4353,j=4354,H=33170,Y=5120,J=5121,Q=5122,K=5123,Z=5124,ee=5125,te=5126,ne=6402,re=6407,ie=6408,se=35632,ae=35633,oe=34921,ue=512,le=513,ce=514,pe=515,de=516,fe=517,he=518,ge=519,ve=7680,me=7681,xe=7682,be=7683,Be=5386,ye=34055,Se=34056,we=9728,Fe=9729,De=9984,Pe=9985,Re=9986,Ge=9987,Me=10240,Te=10241,Ce=10242,Ee=10243,Oe=3553,Ve=34067,Ue=34069,_e=33984,ke=10497,Ie=33071,Ae=33648,Le=36160,$e=36161,qe=33189,Xe=34041,ze=36064,We=36096,Ne=33306,je=0,He=3314,Ye=3315,Je=3316,Qe=3330,Ke=3331,Ze=3332,et=6144,tt=6403,nt=32856,rt=32857,it=32877,st=32878,at=32879,ot=32882,ut=33640,lt=33082,ct=33083,pt=32775,dt=32776,ft=33190,ht=34892,gt=34893,vt=35051,mt=35907,xt=34894,bt=34836,Bt=34842,yt=35866,St=35898,wt=35899,Ft=36208,Dt=36214,Pt=36220,Rt=36226,Gt=36232,Mt=36238,Tt=36244,Ct=36249,Et=36012,Ot=36013,Vt=36269,Ut=34042,_t=35056,kt=36008,It=36009,At=5131,Lt=33319,$t=33320,qt=33321,Xt=33323,zt=33325,Wt=33326,Nt=33327,jt=33328,Ht=33329,Yt=33330,Jt=33331,Qt=33332,Kt=33333,Zt=33334,en=33335,tn=33336,nn=33337,rn=33338,sn=33339,an=33340,on=36756,un=36757,ln=36759,cn=36662,pn=36663,dn=35345,fn=4294967295,hn=37147,gn=37149,vn=34046,mn=34047},222:(e,t,n)=>{n.d(t,{Q:()=>r});const r={Pending:0,Done:1,Error:2}},720:(e,t,n)=>{n.d(t,{$X:()=>d,$l:()=>S,EV:()=>u,FB:()=>i,Kz:()=>B,OB:()=>l,Wf:()=>v,X9:()=>c,YV:()=>f,Yw:()=>a,dV:()=>w,db:()=>b,gB:()=>y,iD:()=>h,kd:()=>o,oD:()=>F,v2:()=>s,wb:()=>p,xS:()=>m,zX:()=>g,zi:()=>x});var r=n(544);const i={Index:16,Vertex:32,Uniform:64,Dynamic:4096,Stream:8192},s={TextureBinding:4,RenderAttachment:16},a={Red:1,Green:2,Blue:4,Alpha:8,All:15},o={D2:r.Bxn,D2Array:r.EPl,CubeMap:r.Ep7,D3:r.Tr1},u={R8:r.R8,R8SNORM:r.sVf,R8UI:r.LrX,R8I:r.q6i,R16UI:r.iVF,R16I:r.xiM,RG8:r.$mf,RG8SNORM:r.wAm,RG8UI:r.coM,RG8I:r.LGL,R32UI:r.If2,R32I:r.$oc,RG16UI:r.ZLz,RG16I:r.qB9,RGBA8:r.hw6,SRGBA8:r.jnw,RGBA8SNORM:r.Mgl,RGBA8UI:r.r5A,RGBA8I:r.Qjo,RGB10A2:r.blh,RG32UI:r.m89,RG32I:r.nR4,RGBA16UI:r.rxK,RGBA16I:r.Msg,RGBA32UI:r.Rkd,RGBA32I:r.gtH,R16F:r.WsI,RG16F:r.MJi,RG11B10F:r.Khk,RGBA16F:r._hT,R32F:r.h2H,RG32F:r.qed,RGBA32F:r.Nug,Depth16:r.kv5,Depth24:r.d_Y,Depth24Stencil8:r.ABS,Depth32F:r.dj5,Depth32FStencil8:r.Vwh},l={ClampToEdge:r.mYe,Repeat:r.aRZ,MirrorRepeat:r.$sD},c={Nearest:r.jX6,Linear:r.t$R},p={Never:r.C4F,Less:r.GPd,Equal:r.gUF,LessEqual:r.DXJ,Greater:r.iFn,NotEqual:r.vkJ,GreaterEqual:r.BzQ,Always:r.Brs},d={Vertex:1,Fragment:2},f={Points:r.Erx,Lines:r.Ukp,LineStrip:r.cgb,Triangles:r.QPP,TriangleStrip:r.b0H},h={UInt16:r.Ae4,UInt32:r.r1O},g={CCW:r.iHR,CW:r.CW},v={None:r.Hnw,Front:r.kpY,Back:r.FoO},m={Keep:r.M$f,Zero:r.xEJ,Replace:r.J57,Invert:r.nl2,Increment:r.RcM,Decrement:r.jgr,IncrementWrap:r.VGh,DecrementWrap:r.C6Q},x={Zero:r.xEJ,One:r.ryP,Src:r.brc,OneMinusSrc:r.i$_,SrcAlpha:r.hy5,OneMinusSrcAlpha:r.OAz,Dst:r.PB6,OneMinusDst:r.miX,DstAlpha:r.TMl,OneMinusDstAlpha:r.njp,SrcAlphaSaturated:r.Rb8,Constant:r.Q0U,OneMinusConstant:r.ldG},b={Add:r.BjA,Subtract:r.Jhs,ReverseSubtract:r.KTj,Min:r.KXm,Max:r.k2X},B={Vertex:0,Instance:1},y={UI8x2:274,UI8x4:276,I8x2:4370,I8x4:4372,UNORM8x2:8466,UNORM8x4:8468,SNORM8x2:12562,SNORM8x4:12564,UI16x2:290,UI16x4:292,I16x2:4386,I16x4:4388,UNORM16x2:8482,UNORM16x4:8484,SNORM16x2:12578,SNORM16x4:12580,F16x2:546,F16x4:548,F32:577,F32x2:578,F32x3:579,F32x4:580},S={Buffer:0,Sampler:1,Texture:2},w={Filtering:0,NonFiltering:1,Comparison:2},F={Float:0,Depth:1,Int:2,UInt:3,UnfilterableFloat:4};r.gq9,r.NRq},232:(e,t,n)=>{n.d(t,{EC:()=>d,IO:()=>f,Ij:()=>a,O5:()=>p,S5:()=>l,Xm:()=>u,bA:()=>c,cj:()=>s});var r=n(544),i=n(720);function s(e){return e===r.Tr1||e===r.EPl}function a(e){return e===r.Ae4?2:4}function o(e){return(e>>4&15)*u(e)}function u(e){return 15&e}function l(e){switch(e>>4&511){case 36:return r.RFu;case 34:return r.s_k;case 274:return r.QoO;case 273:return r.d93;case 18:return r.Ae4;case 17:return r.wgU}return r.Hnw}function c(e){return!!(e>>13)}function p(e){let t=0;const n=[];for(let r=0;r<e.length;++r){const s=[];let a=0;for(let n=0;n<e[r].attributes.length;++n){const i=e[r].attributes[n];s.push({format:i,offset:a,shaderLocation:t}),a+=o(i),++t}n.push({attributes:s,stride:a,stepMode:e[r].instanced?i.Kz.Instance:i.Kz.Vertex})}return n}function d(e){switch(e){case r.kv5:case r.d_Y:case r.ABS:case r.dj5:case r.Vwh:return!0}return!1}function f(e){switch(e){case r.ABS:case r.Vwh:return!0}return!1}},837:(e,t,n)=>{n.d(t,{PM:()=>N,gK:()=>W,ZM:()=>$,uH:()=>L,AF:()=>_,Ow:()=>X,Me:()=>q,QB:()=>I,wx:()=>A,U3:()=>k,Ko:()=>P,WS:()=>P,EY:()=>P,Fb:()=>U,Dx:()=>E,FL:()=>P,E5:()=>P,hw:()=>P,y9:()=>P,FE:()=>P,ii:()=>K,ci:()=>Z,uq:()=>C,kS:()=>V,Jj:()=>O,IL:()=>Q,GH:()=>G,JE:()=>T,gf:()=>M,BK:()=>Y,EX:()=>H,eu:()=>ee,RS:()=>J,z0:()=>j,bo:()=>z});var r=n(720),i=n(940);const s=2097151,a=2**32;function o(e,t){return(t&s)*a+(e>>>0)}function u(e){return e>>>0}class l{generations=[];freeList=[];get size(){return this.generations.length-this.freeList.length}clear(){this.generations.length=0,this.freeList.length=0}create(){let e,t;return this.freeList.length>0?(e=this.freeList.pop(),t=Math.abs(this.generations[e]),this.generations[e]=t):(e=this.generations.length,t=e?0:1,this.generations.push(t)),o(e,t)}delete(e){if(!this.has(e))return!1;const t=u(e);let n=this.generations[t]+1&s;return n||++n,this.generations[t]=-n,this.freeList.push(t),!0}has(e){return u(e)<this.generations.length&&function(e){return e/a&s}(e)===this.generations[u(e)]}forEach(e,t){for(const n of this.values())e.call(t,n,n,this)}*entries(){for(const e of this.values())yield[e,e]}keys(){return this.values()}*values(){for(let e=0;e<this.generations.length;++e){const t=this.generations[e];this.generations[e]>=0&&(yield o(e,t))}}[Symbol.iterator](){return this.values()}get[Symbol.toStringTag](){return l.name}}class c{ids=new l;data=[];get size(){return this.ids.size}add(e){const t=this.ids.create();return this.data[u(t)]=e,t}clear(){this.ids.clear(),this.data.length=0}delete(e){return!!this.ids.delete(e)&&(delete this.data[u(e)],!0)}get(e){return this.ids.has(e)?this.data[u(e)]:void 0}has(e){return this.ids.has(e)}set(e,t){return this.ids.has(e)&&(this.data[u(e)]=t),this}forEach(e,t){this.ids.forEach((n=>{e.call(t,this.data[u(n)],n,this)}))}*entries(){for(const e of this.ids.values())yield[e,this.data[u(e)]]}keys(){return this.ids.values()}*values(){for(const e of this.ids.values())yield this.data[u(e)]}[Symbol.iterator](){return this.entries()}get[Symbol.toStringTag](){return c.name}}const p=new TextDecoder("utf-8");let d=new DataView(new ArrayBuffer(0));function f(e){return d.buffer!==e.buffer&&(d=new DataView(e.buffer)),d}function h(e,t,n){return p.decode(new Uint8Array(e.buffer,t,n))}const g={},v=(new c,new c),m={},x=new c,b={},B={},y=new c,S={},w={};function F(e){return g[e].memory}function D(e){return F(S[e])}function P(e){const t=y.get(e);t&&(t.destroy(),y.delete(e))}function R(e){return w[e]||i}function G(e,t){(g[e]=g[e]||{}).memory=t}function M(e,t){return m[e]?(v.set(m[e],t),m[e]):m[e]=v.add(t)}function T(e,t,n="canvas",r=i){const s=y.add(t),a=function(e,t){if(x.get(b[t]||0))return b[t];const n=document.getElementById(t);if(!n)return 0;let r=b[t];return r?x.set(r,n):r=x.add(n),B[r]=e,r}(e,n);return S[s]=B[a],w[s]=r,s}function C(e,t,n){const r=h(F(e),t,n);if(m[r])return m[r];const i=document.getElementById(r);return i?m[r]=v.add(i):0}function E(e){v.delete(e)}function O(e){return v.get(e)?.width||0}function V(e){return v.get(e)?.height||0}function U(e){P(e),delete S[e],delete w[e]}function _(e,t,n){const r=R(e).createBuffer(y.get(e),{size:t>>>0,usage:n>>>0});return y.add(r)}function k(e,t,n,r,i,s,a,o,u){const l=R(e).createTexture(y.get(e),{size:[t>>>0,n>>>0,r>>>0],mipLevelCount:i>>>0,sampleCount:s>>>0,dimension:a>>>0,format:o>>>0,usage:u>>>0});return y.add(l)}function I(e,t,n,r,i,s,a,o,u,l,c){const p=R(e).createSampler(y.get(e),{addressModeU:t>>>0,addressModeV:n>>>0,addressModeW:r>>>0,magFilter:i>>>0,minFilter:s>>>0,mipmapFilter:a>>>0,lodMinClamp:o,lodMaxClamp:u,compare:l>>>0,maxAnisotropy:c>>>0});return y.add(p)}function A(e,t,n,r){const i=R(e).createShader(y.get(e),{code:h(D(e),t,n),usage:r>>>0});return y.add(i)}function L(e,t,n){const i=D(e),s=[];for(let e=0;e<n;e++){const n=t+32*e,a=f(i).getUint32(n+0,!0),o=f(i).getUint32(n+4,!0),u=f(i).getUint8(n+16);let l=!1,c=r.dV.Filtering,p=r.oD.Float,d=r.kd.D2,g=!1;switch(u){case r.$l.Buffer:l=!!f(i).getUint8(n+20);break;case r.$l.Sampler:c=f(i).getUint32(n+20,!0)>>>0;break;case r.$l.Texture:p=f(i).getUint32(n+20,!0)>>>0,d=f(i).getUint32(n+24,!0)>>>0,g=!!f(i).getUint8(n+28);break;default:throw new RangeError("invalid variant discriminant for BindingType")}s.push({label:h(i,a,o),binding:f(i).getUint32(n+8,!0)>>>0,visibility:f(i).getUint32(n+12,!0)>>>0,type:u,bufferDynamicOffset:l,samplerType:c,textureSampleType:p,textureDimension:d,textureMultisampled:g})}const a=R(e).createBindGroupLayout(y.get(e),{entries:s});return y.add(a)}function $(e,t,n,i){const s=D(e),a=[];for(let e=0;e<i;e++){const t=n+24*e;let i,o,u,l=0,c=0;switch(f(s).getUint8(t+4)){case r.$l.Buffer:i=y.get(f(s).getFloat64(t+8,!0)),l=f(s).getUint32(t+16,!0),c=f(s).getUint32(t+20,!0);break;case r.$l.Sampler:o=y.get(f(s).getFloat64(t+8,!0));break;case r.$l.Texture:u=y.get(f(s).getFloat64(t+8,!0));break;default:throw new RangeError("invalid variant discriminant for BindingResource")}a.push({binding:f(s).getUint32(t+0,!0),buffer:i,bufferOffset:l,bufferSize:c||void 0,sampler:o,texture:u})}const o=R(e).createBindGroup(y.get(e),{layout:y.get(t),entries:a});return y.add(o)}function q(e,t,n,r,i,s,a,o,u,l,c,p,d,g,v,m,x,b,B,S,w,F,P,G,M,T,C,E,O,V,U,_,k,I,A,L,$,q,X,z,W,N,j,H,Y){const J=D(e),Q=[];for(let e=0;e<i;e++){const t=r+12*e;Q.push({format:f(J).getUint32(t+0,!0),offset:f(J).getUint32(t+4,!0),shaderLocation:f(J).getUint32(t+8,!0)})}const K=[];for(let e=0;e<a;e++){const t=s+16*e,n=f(J).getUint32(t+0,!0),r=f(J).getUint32(t+4,!0);K.push({attributes:Q.slice(n,n+r),stride:f(J).getUint32(t+8,!0),stepMode:f(J).getUint32(t+12,!0)})}const Z=[];for(let e=0;e<u;e++){const t=o+8*e;Z.push(y.get(f(J).getFloat64(t+0,!0)))}const ee=[];for(let e=0;e<I;e++){const t=k+32*e;ee.push({format:f(J).getUint32(t+0,!0)>>>0,writeMask:f(J).getUint32(t+4,!0)>>>0,blendColor:{operation:f(J).getUint32(t+8,!0)>>>0,srcFactor:f(J).getUint32(t+12,!0)>>>0,dstFactor:f(J).getUint32(t+16,!0)>>>0},blendAlpha:{operation:f(J).getUint32(t+20,!0)>>>0,srcFactor:f(J).getUint32(t+24,!0)>>>0,dstFactor:f(J).getUint32(t+28,!0)>>>0}})}const te=h(D(e),N,j),ne=h(D(e),H,Y),re=R(e).createRenderPipeline(y.get(e),{vertex:y.get(t),fragment:y.get(n),vertexEntryPoint:te,fragmentEntryPoint:ne,buffers:K,bindGroups:Z,primitive:{topology:l>>>0,indexFormat:c>>>0,frontFace:p>>>0,cullMode:d>>>0},multisample:{sampleCount:g>>>0,alphaToCoverage:!!v},depthStencil:m?{format:x>>>0,depthWrite:!!b,depthCompare:B>>>0,stencilFront:{compare:S>>>0,failOp:w>>>0,depthFailOp:F>>>0,passOp:P>>>0},stencilBack:{compare:G>>>0,failOp:M>>>0,depthFailOp:T>>>0,passOp:C>>>0},stencilReadMask:E>>>0,stencilWriteMask:O>>>0,depthBias:V,depthBiasSlopeScale:U,depthBiasClamp:_}:void 0,targets:{writeMask:A>>>0,blendColor:{operation:L>>>0,srcFactor:$>>>0,dstFactor:q>>>0},blendAlpha:{operation:X>>>0,srcFactor:z>>>0,dstFactor:W>>>0},targets:ee}});return y.add(re)}function X(e,t,n,r,i,s,a,o,u,l,c,p,d){const h=D(e);let g;switch(o){case 0:g={clearDepth:t,clearStencil:n,clearColor:isNaN(r)?void 0:[r,i,s,a]};break;case 1:{const e=[];for(let t=0;t<d;t++){const n=p+32*t,r=[f(h).getFloat32(n+16,!0),f(h).getFloat32(n+20,!0),f(h).getFloat32(n+24,!0),f(h).getFloat32(n+28,!0)];e.push({view:{texture:y.get(f(h).getFloat64(n+0,!0)),mipLevel:f(h).getUint32(n+8,!0),slice:f(h).getUint32(n+12,!0)},clear:isNaN(r[0])?void 0:r})}g={clearDepth:t,clearStencil:n,colors:e,depthStencil:{texture:y.get(u),mipLevel:l>>>0,slice:c>>>0}};break}default:throw new RangeError("invalid variant discriminant for RenderPassDescriptor")}const v=R(e).createRenderPass(y.get(e),g);return y.add(v)}function z(e,t,n,r,i){R(e).writeBuffer(y.get(e),y.get(t),new Uint8Array(D(e).buffer.slice(n,n+1*r)),i>>>0)}function W(e,t,n,r,i,s,a,o,u,l,c){R(e).copyExternalImageToTexture(y.get(e),{src:v.get(t),origin:[n>>>0,r>>>0]},{texture:y.get(i),mipLevel:s>>>0,origin:[a>>>0,o>>>0,u>>>0]},[l>>>0,c>>>0])}function N(e,t){R(e).beginRenderPass(y.get(e),t&&y.get(t))}function j(e){R(e).submitRenderPass(y.get(e))}function H(e,t){R(e).setRenderPipeline(y.get(e),y.get(t))}function Y(e,t){R(e).setIndex(y.get(e),y.get(t))}function J(e,t,n,r){R(e).setVertex(y.get(e),t>>>0,y.get(n),r>>>0)}function Q(e,t,n,r,i){R(e).setBindGroup(y.get(e),t>>>0,y.get(n),new Uint32Array(D(e).buffer.slice(r,r+4*i)))}function K(e,t,n,r,i){R(e).draw(y.get(e),t>>>0,n>>>0,r>>>0,i>>>0)}function Z(e,t,n,r,i){R(e).drawIndexed(y.get(e),t>>>0,n>>>0,r>>>0,i>>>0)}function ee(e,t){R(e).setStencilRef(y.get(e),t>>>0)}},100:(e,t,n)=>{n.r(t),n.d(t,{beginRenderPass:()=>W,copyBuffer:()=>q,copyExternalImageToTexture:()=>$,copyTexture:()=>X,copyTextureToBuffer:()=>z,createBindGroup:()=>U,createBindGroupLayout:()=>V,createBuffer:()=>G,createRenderPass:()=>_,createRenderPipeline:()=>k,createSampler:()=>E,createShader:()=>O,createSurfaceDepthTexture:()=>C,createSurfaceTexture:()=>T,createTexture:()=>M,draw:()=>Q,drawIndexed:()=>K,flush:()=>R,getDeviceFeatures:()=>D,isDeviceLost:()=>P,readBuffer:()=>I,requestWebGPUDevice:()=>w,resetDevice:()=>F,setBindGroup:()=>J,setBlendConst:()=>te,setIndex:()=>H,setRenderPipeline:()=>j,setScissorRect:()=>ee,setStencilRef:()=>ne,setVertex:()=>Y,setViewport:()=>Z,submitRenderPass:()=>N,writeBuffer:()=>A,writeTexture:()=>L});var r=n(222),i=n(720),s=n(232);const a={1:"depth32float-stencil8",2:"shader-f16",4:"rg11b10ufloat-renderable",8:"float32-filterable"};function o(e){switch(e){case i.OB.Repeat:return"repeat";case i.OB.MirrorRepeat:return"mirror-repeat";default:return"clamp-to-edge"}}function u(e){return e===i.X9.Linear?"linear":"nearest"}function l(e){switch(e){case i.wb.Equal:return"equal";case i.wb.Greater:return"greater";case i.wb.GreaterEqual:return"greater-equal";case i.wb.Less:return"less";case i.wb.LessEqual:return"less-equal";case i.wb.Never:return"never";case i.wb.NotEqual:return"not-equal";default:return"always"}}function c(e){switch(e){case i.kd.D3:return"3d";case i.kd.CubeMap:return"cube";case i.kd.D2Array:return"2d-array";default:return"2d"}}function p(e){switch(e){case i.EV.R8:return"r8unorm";case i.EV.R8SNORM:return"r8snorm";case i.EV.R8UI:return"r8uint";case i.EV.R8I:return"r8sint";case i.EV.R16UI:return"r16uint";case i.EV.R16I:return"r16sint";case i.EV.RG8:return"rg8unorm";case i.EV.RG8SNORM:return"rg8snorm";case i.EV.RG8UI:return"rg8uint";case i.EV.RG8I:return"rg8sint";case i.EV.R32UI:return"r32uint";case i.EV.R32I:return"r32sint";case i.EV.RG16UI:return"rg16uint";case i.EV.RG16I:return"rg16sint";case i.EV.RGBA8:return"rgba8unorm";case i.EV.SRGBA8:return"rgba8unorm-srgb";case i.EV.RGBA8SNORM:return"rgba8snorm";case i.EV.RGBA8UI:return"rgba8uint";case i.EV.RGBA8I:return"rgba8sint";case i.EV.RGB10A2:return"rgb10a2unorm";case i.EV.RG32UI:return"rg32uint";case i.EV.RG32I:return"rg32sint";case i.EV.RGBA16UI:return"rgba16uint";case i.EV.RGBA16I:return"rgba16sint";case i.EV.R16F:return"r16float";case i.EV.RG16F:return"rg16float";case i.EV.RG11B10F:return"rg11b10ufloat";case i.EV.RGBA16F:return"rgba16float";case i.EV.R32F:return"r32float";case i.EV.RG32F:return"rg32float";case i.EV.RGBA32F:return"rgba32float";case i.EV.Depth16:return"depth16unorm";case i.EV.Depth24:return"depth24plus";case i.EV.Depth24Stencil8:return"depth24plus-stencil8";case i.EV.Depth32F:return"depth32float";case i.EV.Depth32FStencil8:return"depth32float-stencil8";default:return"rgba8unorm"}}function d(e){switch(e){case i.oD.UnfilterableFloat:return"unfilterable-float";case i.oD.Depth:return"depth";case i.oD.UInt:return"uint";case i.oD.Int:return"sint";default:return"float"}}function f(e=0){return(e&i.$X.Fragment?GPUShaderStage.FRAGMENT:0)|(e&i.$X.Vertex?GPUShaderStage.VERTEX:0)}function h(e){switch(e){case i.YV.Points:return"point-list";case i.YV.Lines:return"line-list";case i.YV.LineStrip:return"line-strip";case i.YV.TriangleStrip:return"triangle-strip";default:return"triangle-list"}}function g(e){switch(e){case i.xS.Zero:return"zero";case i.xS.Replace:return"replace";case i.xS.Invert:return"invert";case i.xS.Increment:return"increment-clamp";case i.xS.Decrement:return"decrement-clamp";case i.xS.IncrementWrap:return"increment-wrap";case i.xS.DecrementWrap:return"decrement-wrap";default:return"keep"}}function v(e){return{compare:l(e?.compare),failOp:g(e?.failOp),depthFailOp:g(e?.depthFailOp),passOp:g(e?.passOp)}}function m(e){return{srcFactor:x(e?.srcFactor),dstFactor:x(e?.dstFactor),operation:b(e?.operation)}}function x(e){switch(e){case i.zi.Zero:return"zero";case i.zi.One:return"one";case i.zi.Src:return"src";case i.zi.OneMinusSrc:return"one-minus-src";case i.zi.Dst:return"dst";case i.zi.OneMinusDst:return"one-minus-dst";case i.zi.SrcAlpha:return"src-alpha";case i.zi.OneMinusSrcAlpha:return"one-minus-src-alpha";case i.zi.DstAlpha:return"dst-alpha";case i.zi.OneMinusDstAlpha:return"one-minus-dst-alpha";case i.zi.Constant:return"constant";case i.zi.OneMinusConstant:return"one-minus-constant";case i.zi.SrcAlphaSaturated:return"src-alpha-saturated"}}function b(e){switch(e){case i.db.Subtract:return"subtract";case i.db.ReverseSubtract:return"reverse-subtract";case i.db.Min:return"min";case i.db.Max:return"max";default:return"add"}}function B(e){switch(e){case i.gB.UI8x2:return"uint8x2";case i.gB.UI8x4:return"uint8x4";case i.gB.I8x2:return"sint8x2";case i.gB.I8x4:return"sint8x4";case i.gB.UNORM8x2:return"unorm8x2";case i.gB.UNORM8x4:return"unorm8x4";case i.gB.SNORM8x2:return"snorm8x2";case i.gB.SNORM8x4:return"snorm8x4";case i.gB.UI16x2:return"uint16x2";case i.gB.UI16x4:return"uint16x4";case i.gB.I16x2:return"sint16x2";case i.gB.I16x4:return"sint16x4";case i.gB.UNORM16x2:return"unorm16x2";case i.gB.UNORM16x4:return"unorm16x4";case i.gB.SNORM16x2:return"snorm16x2";case i.gB.SNORM16x4:return"snorm16x4";case i.gB.F16x2:return"float16x2";case i.gB.F16x4:return"float16x4";case i.gB.F32:return"float32";case i.gB.F32x2:return"float32x2";case i.gB.F32x3:return"float32x3";case i.gB.F32x4:return"float32x4"}}function y(e){return{clearValue:e,loadOp:void 0===e?"load":"clear",storeOp:"store"}}function S(e,t=!1){const n=e?.texture;return(t&&n?.msaa||n?.tex)?.createView({dimension:"2d",baseMipLevel:e?.mipLevel,baseArrayLayer:e?.slice,mipLevelCount:1,arrayLayerCount:1})}function w(e,t={},n=0){const i={status:r.Q.Pending,value:null,then:(e,t)=>s.then(e,t)},s=async function(e,t,n){let r=0;const i=[];for(const e in a)n&+e&&(r|=+e,i.push(a[+e]));const s=await((await(navigator.gpu?.requestAdapter(t)))?.requestDevice({requiredFeatures:i})),o=[];if(!s)return null;const u={...t,features:r,canvas:e,device:s,readBuffers:o,get encoder(){return this._encoder||(this._encoder=this.device?.createCommandEncoder())},get surface(){return this._surface||(this._surface=T(this))},get depth(){return this._depth||(this._depth=C(this))},get lost(){return!this.device},reset(){this._encoder=void 0,this.renderPass=void 0},submit(){this._encoder&&this.device?.queue.submit([this._encoder.finish()]),this.reset()},destroy(){(()=>{s.destroy();for(const e of o)e.destroy();o.length=0})(),this.reset()}};return s.lost.then((()=>{u.device=void 0})),u}(e,t,n).then((e=>(i.status=r.Q.Done,e)),(e=>{throw i.status=r.Q.Error,e}));return i}function F(e){e.reset()}function D(e){return e.features}function P(e){return e.lost}function R(e){e.submit()}function G(e,t){const n=GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|(t.usage&i.FB.Uniform?GPUBufferUsage.UNIFORM:t.usage&i.FB.Index?GPUBufferUsage.INDEX:t.usage&i.FB.Vertex?GPUBufferUsage.VERTEX:0),r=e.device?.createBuffer({usage:n,size:t.size});return{buffer:r,destroy:()=>r?.destroy()}}function M(e,t){const n=t.sampleCount||1,r=t.dimension||i.kd.D2,a=t.format||i.EV.RGBA8,o=t.mipLevelCount,[u,l,d]=t.size||[1,1,1],f=r===i.kd.CubeMap?6:r===i.kd.D2?1:d,h=r===i.kd.CubeMap?6:r===i.kd.D2Array?d:1,g=!(0,s.EC)(a)&&n>1&&!!((t.usage||0)&i.v2.RenderAttachment),v=c(t.dimension),m=p(t.format),x=function(e=0){return GPUTextureUsage.COPY_SRC|GPUTextureUsage.COPY_DST|(e&i.v2.TextureBinding?GPUTextureUsage.TEXTURE_BINDING:0)|(e&i.v2.RenderAttachment?GPUTextureUsage.RENDER_ATTACHMENT:0)}(t.usage),b=e.device?.createTexture({size:[u,l,f],mipLevelCount:o,sampleCount:g?1:n,dimension:(B=t.dimension,B===i.kd.D3?"3d":"2d"),format:m,usage:x});var B;const y=g?e.device?.createTexture({size:[u,l,1],mipLevelCount:1,sampleCount:n,dimension:"2d",format:m,usage:GPUTextureUsage.RENDER_ATTACHMENT}):null;return{tex:b,msaa:y,get view(){return!this._view&&x&GPUTextureUsage.TEXTURE_BINDING&&(this._view=this.tex?.createView({format:m,dimension:v,mipLevelCount:o,arrayLayerCount:h})),this._view},destroy:()=>{b?.destroy(),y?.destroy()}}}function T(e,t,n){const r=e.device,i=t||e.canvas,s=n?.sampleCount||e.sampleCount||1,a=n?.premultipliedAlpha||e.premultipliedAlpha?"premultiplied":"opaque",o=navigator.gpu.getPreferredCanvasFormat(),u=i?.getContext("webgpu");return r&&u?.configure({device:r,format:o,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC|GPUTextureUsage.TEXTURE_BINDING,alphaMode:a}),{get tex(){return u?.getCurrentTexture()},get msaa(){return s>1&&(this._msaa?.width!==i.width||this._msaa.height!==i.height)&&(this._msaa?.destroy(),this._msaa=r?.createTexture({dimension:"2d",size:[i.width,i.height],sampleCount:s,format:o,usage:GPUTextureUsage.RENDER_ATTACHMENT})),this._msaa},get view(){return this.tex?.createView()},destroy(){this._msaa?.destroy()}}}function C(e,t,n){const r=e.device,i=t||e.canvas,a=n?.sampleCount||e.sampleCount||1,o=n?.depthStencilFormat||e.depthStencilFormat,u=o&&(0,s.EC)(o)?p(o):void 0;return{get tex(){return!u||this._tex?.width===i.width&&this._tex.height===i.height||(this._tex?.destroy(),this._tex=r?.createTexture({dimension:"2d",size:[i.width,i.height],sampleCount:a,format:u,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC})),this._tex},get view(){return this.tex?.createView()},destroy(){this._tex?.destroy()}}}function E(e,t={}){return{sampler:e.device?.createSampler({addressModeU:o(t.addressModeU),addressModeV:o(t.addressModeV),addressModeW:o(t.addressModeW),magFilter:u(t.magFilter),minFilter:u(t.minFilter),mipmapFilter:u(t.mipmapFilter),lodMinClamp:t.lodMinClamp,lodMaxClamp:t.lodMaxClamp,compare:t.compare?l(t.compare):void 0,maxAnisotropy:t.maxAnisotropy}),destroy(){}}}function O(e,t){return{shader:e.device?.createShaderModule({code:t.code}),destroy(){}}}function V(e,t){return{layout:e.device?.createBindGroupLayout({entries:t.entries.map(((e,t)=>({binding:e.binding??t,visibility:f(e.visibility||i.$X.Vertex|i.$X.Fragment),buffer:e.type===i.$l.Buffer?{type:"uniform",hasDynamicOffset:e.bufferDynamicOffset,minBindingSize:0}:void 0,sampler:e.type===i.$l.Sampler?{type:e.samplerType===i.dV.Comparison?"comparison":e.samplerType===i.dV.NonFiltering?"non-filtering":"filtering"}:void 0,texture:e.type===i.$l.Texture?{sampleType:d(e.textureSampleType),viewDimension:c(e.textureDimension),multisampled:e.textureMultisampled}:void 0})))}),destroy(){}}}function U(e,t){const n=t.layout.layout;return{group:n&&e.device?.createBindGroup({layout:n,entries:t.entries.map(((e,t)=>{const n=e.sampler?.sampler??e.texture?.view??(e.buffer?.buffer&&{buffer:e.buffer.buffer,offset:e.bufferOffset,size:e.bufferSize});return n&&{binding:e.binding??t,resource:n}})).filter((e=>!!e))}),destroy(){}}}function _(e,t={}){const n=t.colors||[{view:{texture:e.surface},clear:t.clearColor}];let r=t.depthStencil;return!t.colors?.length&&!r&&(r={texture:e.depth}),{colors:n.map((e=>e.view)),colorTargets:n.map((e=>e.view.texture.msaa?e.view:void 0)),colorOps:n.map((e=>y(e.clear))),depth:r,depthOps:y(isNaN(t.clearDepth)?void 0:t.clearDepth),stencilOps:y(isNaN(t.clearStencil)?void 0:t.clearStencil),destroy(){}}}function k(e,t){const n=e.device,r=[];for(const e of t.buffers)for(const t of e.attributes)r.push({format:B(t.format),offset:t.offset,shaderLocation:t.shaderLocation});const s=[];{let e=0;for(const n of t.buffers)s.push({stepMode:n.stepMode===i.Kz.Instance?"instance":"vertex",arrayStride:n.stride,attributes:r.slice(e,e+n.attributes.length)}),e+=n.attributes.length}const a=t.primitive?.indexFormat===i.iD.UInt32?"uint32":"uint16";return{indexFormat:a,pipeline:n?.createRenderPipeline({layout:n.createPipelineLayout({bindGroupLayouts:t.bindGroups?.map((e=>e.layout)).filter((e=>!!e))||[]}),vertex:{module:t.vertex.shader,entryPoint:t.vertexEntryPoint||"vs_main",buffers:s},fragment:{module:t.fragment.shader,entryPoint:t.fragmentEntryPoint||"fs_main",targets:t.targets?.targets?.length?t.targets.targets.map((e=>({format:p(e.format),writeMask:e.writeMask,blend:{color:m(e.blendColor),alpha:m(e.blendAlpha)}}))):[{format:navigator.gpu.getPreferredCanvasFormat(),writeMask:t.targets?.writeMask,blend:{color:m(t.targets?.blendColor),alpha:m(t.targets?.blendAlpha)}}]},primitive:{topology:h(t.primitive?.topology),stripIndexFormat:t.primitive?.topology===i.YV.TriangleStrip||t.primitive?.topology===i.YV.LineStrip?a:void 0,frontFace:t.primitive?.frontFace===i.zX.CW?"cw":"ccw",cullMode:t.primitive?.cullMode===i.Wf.Back?"back":t.primitive?.cullMode===i.Wf.Front?"front":"none"},depthStencil:t.depthStencil?{format:p(t.depthStencil?.format||i.EV.Depth16),depthWriteEnabled:!!t.depthStencil.depthWrite,depthCompare:l(t.depthStencil.depthCompare),stencilFront:v(t.depthStencil.stencilFront),stencilBack:v(t.depthStencil.stencilBack),stencilReadMask:t.depthStencil.stencilReadMask,stencilWriteMask:t.depthStencil.stencilWriteMask,depthBias:t.depthStencil.depthBias,depthBiasSlopeScale:t.depthStencil.depthBiasSlopeScale,depthBiasClamp:t.depthStencil.depthBiasClamp}:void 0,multisample:{count:t.multisample?.sampleCount,alphaToCoverageEnabled:t.multisample?.alphaToCoverage}}),destroy(){}}}function I(e,t,n,i=0){const s=e.device,a=t.buffer,o=(a?.size||0)-i,u=n||new Uint8Array(Math.max(0,o));if(!s||!a||o<=0)return{status:r.Q.Error,value:u,then:(e,t)=>Promise.reject().then(e,t)};let l;{let t;for(t=e.readBuffers.pop();t&&t.size<o;t=e.readBuffers.pop())t.destroy();l=t||s.createBuffer({usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ,size:256*Math.ceil(o/256)})}e.encoder?.copyBufferToBuffer(a,i,l,0,o),R(e);const c={status:r.Q.Pending,value:u,then:(e,t)=>p.then(e,t)},p=s.queue.onSubmittedWorkDone().then((()=>l.mapAsync(GPUMapMode.READ,0,o))).then((()=>(u.set(new Uint8Array(l.getMappedRange())),l.unmap(),e.readBuffers.unshift(l),c.status=r.Q.Done,u)),(e=>{throw c.status=r.Q.Error,e}));return c}function A(e,t,n,r=0){const i=t.buffer;i&&e.device?.queue.writeBuffer(i,r,n)}function L(e,{texture:t,mipLevel:n,origin:[r,i,s]=[0,0,0]},a,{offset:o,bytesPerRow:u,rowsPerImage:l},[c,p,d]=[(t.tex?.width||0)-r,(t.tex?.height||0)-i,(t.tex?.depthOrArrayLayers||0)-s]){const f=t.tex;f&&e.device?.queue.writeTexture({texture:f,mipLevel:n,origin:[r,i,s]},a,{offset:o,bytesPerRow:u,rowsPerImage:l},[c,p,d])}function $(e,{src:t,origin:[n,r]=[0,0]},{texture:i,mipLevel:s=0,origin:[a,o,u]=[0,0,0]},[l,c]=[t.width-n,t.height-r]){const p=i.tex;p&&e.device?.queue.copyExternalImageToTexture({source:t,origin:[n,r]},{texture:p,mipLevel:s,origin:[a,o,u]},[l,c])}function q(e,t,n,r=t.buffer?.size||0,i=0,s=0){const a=t.buffer,o=n.buffer;a&&o&&e.encoder?.copyBufferToBuffer(a,i,o,s,r)}function X(e,{texture:t,mipLevel:n,origin:[r,i,s]=[0,0,0]},{texture:a,mipLevel:o,origin:[u,l,c]=[0,0,0]},[p,d,f]=[(t.tex?.width||0)-r,(t.tex?.height||0)-i,(t.tex?.depthOrArrayLayers||0)-s]){const h=t.tex,g=a.tex;h&&g&&e.encoder?.copyTextureToTexture({texture:h,mipLevel:n,origin:[r,i,s]},{texture:g,mipLevel:o,origin:[u,l,c]},[p,d,f])}function z(e,{texture:t,mipLevel:n,origin:[r,i,s]=[0,0,0]},a,{offset:o,bytesPerRow:u,rowsPerImage:l},[c,p,d]=[(t.tex?.width||0)-r,(t.tex?.height||0)-i,(t.tex?.depthOrArrayLayers||0)-s]){const f=t.tex,h=a.buffer;f&&h&&e.encoder?.copyTextureToBuffer({texture:f,mipLevel:n,origin:[r,i,s]},{buffer:h,offset:o,bytesPerRow:u,rowsPerImage:l},[c,p,d])}function W(e,t=_(e)){e.submit();const n=e.encoder,r=S(t.depth),i=t.depth?.texture?.tex?.format,s="depth24plus-stencil8"===i||"depth32float-stencil8"===i,a=t.colors,o=t.colorTargets;e.renderPass=n?.beginRenderPass({colorAttachments:a.map(((e,n)=>{const r=S(e,!0);return r?{view:r,resolveTarget:S(o[n]),clearValue:t.colorOps[n].clearValue,loadOp:t.colorOps[n].loadOp,storeOp:t.colorOps[n].storeOp}:null})),depthStencilAttachment:r&&{view:r,depthClearValue:t.depthOps.clearValue,depthLoadOp:t.depthOps.loadOp,depthStoreOp:t.depthOps.storeOp,stencilClearValue:s?t.stencilOps.clearValue:void 0,stencilLoadOp:s?t.stencilOps.loadOp:void 0,stencilStoreOp:s?t.stencilOps.storeOp:void 0}})}function N(e,t=!0){e.renderPass?.end(),e.renderPass=void 0,e.indexFormat=void 0,t&&e.submit()}function j(e,t){const n=t.pipeline;n&&e.renderPass?.setPipeline(n),e.indexFormat=t.indexFormat}function H(e,t){const n=t.buffer;n&&e.renderPass?.setIndexBuffer(n,e.indexFormat||"uint16")}function Y(e,t,n,r=0){const i=n.buffer;i&&e.renderPass?.setVertexBuffer(t,i,r)}function J(e,t,n,r=[]){const i=n.group;i&&e.renderPass?.setBindGroup(t,i,r)}function Q(e,t,n=1,r=0,i=0){e.renderPass?.draw(t,n,r,i)}function K(e,t,n=1,r=0,i=0,s=0){e.renderPass?.drawIndexed(t,n,r,s,i)}function Z(e,t,n,r,i,s=0,a=1){e.renderPass?.setViewport(t,n,r,i,s,a)}function ee(e,t,n,r,i){e.renderPass?.setScissorRect(t,n,r,i)}function te(e,t){e.renderPass?.setBlendConstant(t)}function ne(e,t){e.renderPass?.setStencilReference(t)}},811:(e,t,n)=>{n.d(t,{PM:()=>r.PM,gK:()=>r.gK,ZM:()=>r.ZM,uH:()=>r.uH,AF:()=>r.AF,Ow:()=>r.Ow,Me:()=>r.Me,QB:()=>r.QB,wx:()=>r.wx,U3:()=>r.U3,Ko:()=>r.Ko,WS:()=>r.WS,EY:()=>r.EY,Fb:()=>r.Fb,Dx:()=>r.Dx,FL:()=>r.FL,E5:()=>r.E5,hw:()=>r.hw,y9:()=>r.y9,FE:()=>r.FE,ii:()=>r.ii,ci:()=>r.ci,uq:()=>r.uq,kS:()=>r.kS,Jj:()=>r.Jj,IL:()=>r.IL,BK:()=>r.BK,EX:()=>r.EX,eu:()=>r.eu,RS:()=>r.RS,z0:()=>r.z0,bo:()=>r.bo});var r=n(837)},132:(e,t,n)=>{n.a(e,(async(r,i)=>{try{var s=n(497),a=n(811),o=r([s]),[s]=o.then?(await o)():o;await n.v(t,e.id,"1b11d1a4e3f84b71000d",{env:{abort:s.J,seed:s.D},"mugl/wasm":{create_shader:a.wx,create_render_pipeline:a.Me,create_render_pass:a.Ow,create_buffer:a.AF,write_buffer:a.bo,create_bind_group_layout:a.uH,create_bind_group:a.ZM,create_texture:a.U3,create_sampler:a.QB,get_image_by_id:a.uq,copy_external_image_to_texture:a.gK,get_image_width:a.Jj,get_image_height:a.kS,delete_bind_group_layout:a.WS,begin_render_pass:a.PM,set_render_pipeline:a.EX,set_vertex:a.RS,draw:a.ii,submit_render_pass:a.z0,set_index:a.BK,set_bind_group:a.IL,draw_indexed:a.ci,set_stencil_ref:a.eu,delete_render_pipeline:a.E5,delete_bind_group:a.Ko,delete_texture:a.FE,delete_sampler:a.hw,delete_buffer:a.EY,delete_image:a.Dx,delete_device:a.Fb,delete_shader:a.y9,delete_render_pass:a.FL}}),i()}catch(e){i(e)}}),1)}},s={};function a(e){var t=s[e];if(void 0!==t)return t.exports;var n=s[e]={id:e,exports:{}};return i[e](n,n.exports,a),n.exports}e="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",t="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",n="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",r=e=>{e&&!e.d&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},a.a=(i,s,a)=>{var o;a&&((o=[]).d=1);var u,l,c,p=new Set,d=i.exports,f=new Promise(((e,t)=>{c=t,l=e}));f[t]=d,f[e]=e=>(o&&e(o),p.forEach(e),f.catch((e=>{}))),i.exports=f,s((i=>{var s;u=(i=>i.map((i=>{if(null!==i&&"object"==typeof i){if(i[e])return i;if(i.then){var s=[];s.d=0,i.then((e=>{a[t]=e,r(s)}),(e=>{a[n]=e,r(s)}));var a={};return a[e]=e=>e(s),a}}var o={};return o[e]=e=>{},o[t]=i,o})))(i);var a=()=>u.map((e=>{if(e[n])throw e[n];return e[t]})),l=new Promise((t=>{(s=()=>t(a)).r=0;var n=e=>e!==o&&!p.has(e)&&(p.add(e),e&&!e.d&&(s.r++,e.push(s)));u.map((t=>t[e](n)))}));return s.r?l:a()}),(e=>(e?c(f[n]=e):l(d),r(o)))),o&&(o.d=0)},a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.v=(e,t,n,r)=>{var i=fetch(a.p+""+n+".module.wasm");return"function"==typeof WebAssembly.instantiateStreaming?WebAssembly.instantiateStreaming(i,r).then((t=>Object.assign(e,t.instance.exports))):i.then((e=>e.arrayBuffer())).then((e=>WebAssembly.instantiate(e,r))).then((t=>Object.assign(e,t.instance.exports)))},(()=>{var e;a.g.importScripts&&(e=a.g.location+"");var t=a.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var r=n.length-1;r>-1&&!e;)e=n[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=e})(),a(440)})();