(()=>{var e="undefined"!=typeof Float32Array?Float32Array:Array;function t(){var t=new e(3);return e!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t}function n(t,n,r){var o=new e(3);return o[0]=t,o[1]=n,o[2]=r,o}function r(e,t,n){return e[0]=t[0]+n[0],e[1]=t[1]+n[1],e[2]=t[2]+n[2],e}function o(e,t,n){return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e}function i(e,t,n){var r=t[0],o=t[1],i=t[2],a=n[3]*r+n[7]*o+n[11]*i+n[15];return a=a||1,e[0]=(n[0]*r+n[4]*o+n[8]*i+n[12])/a,e[1]=(n[1]*r+n[5]*o+n[9]*i+n[13])/a,e[2]=(n[2]*r+n[6]*o+n[10]*i+n[14])/a,e}function a(){var t=new e(16);return e!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}function s(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function l(e,t){var n=t[0],r=t[1],o=t[2],i=t[3],a=t[4],s=t[5],l=t[6],f=t[7],c=t[8],u=t[9],h=t[10],m=t[11],d=t[12],g=t[13],v=t[14],p=t[15],x=n*s-r*a,b=n*l-o*a,T=n*f-i*a,y=r*l-o*s,w=r*f-i*s,O=o*f-i*l,C=c*g-u*d,S=c*v-h*d,E=c*p-m*d,_=u*v-h*g,N=u*p-m*g,F=h*p-m*v,M=x*F-b*N+T*_+y*E-w*S+O*C;return M?(M=1/M,e[0]=(s*F-l*N+f*_)*M,e[1]=(o*N-r*F-i*_)*M,e[2]=(g*O-v*w+p*y)*M,e[3]=(h*w-u*O-m*y)*M,e[4]=(l*E-a*F-f*S)*M,e[5]=(n*F-o*E+i*S)*M,e[6]=(v*T-d*O-p*b)*M,e[7]=(c*O-h*T+m*b)*M,e[8]=(a*N-s*E+f*C)*M,e[9]=(r*E-n*N-i*C)*M,e[10]=(d*w-g*T+p*x)*M,e[11]=(u*T-c*w-m*x)*M,e[12]=(s*S-a*_-l*C)*M,e[13]=(n*_-r*S+o*C)*M,e[14]=(g*b-d*y-v*x)*M,e[15]=(c*y-u*b+h*x)*M,e):null}function f(e,t,n,r,o){var i,a=1/Math.tan(t/2);return e[0]=a/n,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,null!=o&&o!==1/0?(i=1/(r-o),e[10]=(o+r)*i,e[14]=2*o*r*i):(e[10]=-1,e[14]=-2*r),e}function c(e,t,n,r){var o=t[0],i=t[1],a=t[2],s=r[0],l=r[1],f=r[2],c=o-n[0],u=i-n[1],h=a-n[2],m=c*c+u*u+h*h;m>0&&(c*=m=1/Math.sqrt(m),u*=m,h*=m);var d=l*h-f*u,g=f*c-s*h,v=s*u-l*c;return(m=d*d+g*g+v*v)>0&&(d*=m=1/Math.sqrt(m),g*=m,v*=m),e[0]=d,e[1]=g,e[2]=v,e[3]=0,e[4]=u*v-h*g,e[5]=h*d-c*v,e[6]=c*g-u*d,e[7]=0,e[8]=c,e[9]=u,e[10]=h,e[11]=0,e[12]=o,e[13]=i,e[14]=a,e[15]=1,e}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)}),t();var u=function(e,t,n){var r=t[0],o=t[1],i=t[2],a=t[3],s=t[4],l=t[5],f=t[6],c=t[7],u=t[8],h=t[9],m=t[10],d=t[11],g=t[12],v=t[13],p=t[14],x=t[15],b=n[0],T=n[1],y=n[2],w=n[3];return e[0]=b*r+T*s+y*u+w*g,e[1]=b*o+T*l+y*h+w*v,e[2]=b*i+T*f+y*m+w*p,e[3]=b*a+T*c+y*d+w*x,b=n[4],T=n[5],y=n[6],w=n[7],e[4]=b*r+T*s+y*u+w*g,e[5]=b*o+T*l+y*h+w*v,e[6]=b*i+T*f+y*m+w*p,e[7]=b*a+T*c+y*d+w*x,b=n[8],T=n[9],y=n[10],w=n[11],e[8]=b*r+T*s+y*u+w*g,e[9]=b*o+T*l+y*h+w*v,e[10]=b*i+T*f+y*m+w*p,e[11]=b*a+T*c+y*d+w*x,b=n[12],T=n[13],y=n[14],w=n[15],e[12]=b*r+T*s+y*u+w*g,e[13]=b*o+T*l+y*h+w*v,e[14]=b*i+T*f+y*m+w*p,e[15]=b*a+T*c+y*d+w*x,e};const h=5121,m=5123,d=5126,g=6408,v=9729,p=36160,x={Nearest:9728,Linear:v},b={...x,NearestMipmapNearest:9984,NearestMipmapLinear:9986,LinearMipmapNearest:9985,LinearMipmapLinear:9987},T=3553,y=d,w=35676,O=e=>e>>8&255,C="ANGLE_instanced_arrays",S={},E=[];class _{constructor(e,t){this.gl=e,this.type=34962,this.usage=35044,this.size=0,Object.assign(this,t),e.bindBuffer(this.type,this.glb=e.createBuffer()),e.bufferData(this.type,this.size,this.usage)}data(e,t=0){return this.gl.bindBuffer(this.type,this.glb),this.gl.bufferSubData(this.type,t,e),this}destroy(){this.gl.deleteBuffer(this.glb)}}class N{constructor(e,t,n=S){this.gl=e,this.type=3553,this.format=263169,this.wrapU=33071,this.wrapV=33071,this.magFilter=v,this.minFilter=v,Object.assign(this,t,n),this.glt=this.glrb=null;const[r,o]=this.size;this.format<=197381||(e.bindTexture(this.type,this.glt=e.createTexture()),e.texParameteri(this.type,10241,this.minFilter),e.texParameteri(this.type,10240,this.magFilter),e.texParameteri(this.type,10242,this.wrapU),e.texParameteri(this.type,10243,this.wrapV),e.texImage2D(this.type,0,g,r,o,0,g,h,null))}data(e,[t=0,n=0]=E,[r=this.size[0]-t,o=this.size[1]-n]=E){return this.gl.bindTexture(this.type,this.glt),ArrayBuffer.isView(e)?this.gl.texSubImage2D(this.type,0,t,n,r,o,g,h,e):this.gl.texSubImage2D(this.type,0,t,n,g,h,e),this}mipmap(){return this.gl.bindTexture(this.type,this.glt),this.gl.generateMipmap(this.type),this}destroy(){this.gl.deleteTexture(this.glt),this.gl.deleteRenderbuffer(this.glrb)}}class F{constructor(e,t=S){this.gl=e,this.color=[],this.depth=null,this.clearColor=!1,this.clearDepth=!1,this.clearStencil=!1,Object.assign(this,t),this.glfb=null,this.color[0]&&(e.bindFramebuffer(p,this.glfb=e.createFramebuffer()),e.framebufferTexture2D(p,36064,this.color[0].tex.type,this.color[0].tex.glt,0),this.depth&&e.framebufferRenderbuffer(p,36096,36161,this.depth.tex.glrb))}destroy(){this.gl.deleteFramebuffer(this.glfb)}resolve(){}}class M{constructor(e,t){this.gl=e,this.mode=4,this.indexFormat=m,Object.assign(this,t);let n=0;this.glp=function(e,t,n,r){const o=R(e,35633,t),i=R(e,35632,n),a=e.createProgram();e.attachShader(a,o),e.attachShader(a,i);for(const{attrs:t}of r)for(const n of t)e.bindAttribLocation(a,n.shaderLoc,n.name);return e.linkProgram(a),e.deleteShader(o),e.deleteShader(i),a}(e,t.vert,t.frag,this.buffers=t.buffers.map((({attrs:e,stride:t,instanced:r=!1})=>{const o=Array(e.length);let i=0;for(let t=0;t<e.length;++t,++n){const{name:r,format:a,offset:s=i,shaderLoc:l=n}=e[t];o[t]={name:r,format:a,offset:s,shaderLoc:l},i=Math.max(i,s)+4*O(a)}return{attrs:o,stride:t||i,instanced:r}})))}destroy(){this.gl.deleteProgram(this.glp)}}function I(e,t,n){n?e.enable(t):e.disable(t)}function R(e,t,n){const r=e.createShader(t);return e.shaderSource(r,n),e.compileShader(r),r}class A{constructor(e){this.gl=e,this.webgl2=!1,this.canvas=e.canvas,(this.exts={})[C]=e.getExtension(C),this.rctx=new D(e,this.feature(C))}buffer(e){return new _(this.gl,e)}texture(e,t){return new N(this.gl,e,t)}pipeline(e){return new M(this.gl,e)}pass(e){return new F(this.gl,e)}render(e){let{width:t,height:n}=this.gl.canvas;this.gl.viewport(0,0,t,n);let r=0;return e.clearColor&&(r|=16384,this.gl.clearColor(...e.clearColor)),!1!==e.clearDepth&&(r|=256,this.gl.clearDepth(e.clearDepth),this.gl.depthMask(!0)),r&&this.gl.clear(r),this.rctx}feature(e){return this.exts[e]}reset(){this.rctx.reset()}}class D{constructor(e,t){this.gl=e,this.inst=t,this.reset()}reset(){this.state={pipeObj:null,stencilRef:0}}pipeline(e){if(this.state.pipeObj!==e){this.state.pipeObj=e,this.gl.useProgram(e.glp),function(e,t,n=0){const{blend:r,depth:o,stencil:i,raster:a}=t;a&&(I(e,32926,!!a.alphaToCoverage),I(e,2884,!!a.cullMode),I(e,32823,!(!a.depthBiasSlopeScale&&!a.depthBias)),e.polygonOffset(a.depthBiasSlopeScale||0,a.depthBias||0),a.cullMode&&e.cullFace(a.cullMode),e.frontFace(a.frontFace||2305)),I(e,2929,!!o),o&&(e.depthMask(!!o.writeEnabled),e.depthFunc(o.compare||519))}(this.gl,e,this.state.stencilRef);for(let e=0;e<8;++e)this.gl.disableVertexAttribArray(e);for(const{attrs:t}of e.buffers)for(const{shaderLoc:e}of t)this.gl.enableVertexAttribArray(e)}return this}index({glb:e}){return this.gl.bindBuffer(34963,e),this}vertex(e,{glb:t}){const{attrs:n,stride:r,instanced:o}=this.state.pipeObj.buffers[e];this.gl.bindBuffer(34962,t);for(const{format:e,offset:t,shaderLoc:i}of n)this.gl.vertexAttribPointer(i,O(e),d,!1,r,t),this.inst?.vertexAttribDivisorANGLE(i,o?1:0);return this}uniforms(e){let t=0;for(const n in e){const r=e[n],o=this.state.pipeObj.uniforms[n].format,i=this.gl.getUniformLocation(this.state.pipeObj.glp,n);if(o&&i)if(r.length)switch(o){case 35676:this.gl.uniformMatrix4fv(i,!1,r);break;case 35675:this.gl.uniformMatrix3fv(i,!1,r);break;case 35666:this.gl.uniform4fv(i,r);break;case 35665:this.gl.uniform3fv(i,r);break;case 35664:this.gl.uniform2fv(i,r);break;default:this.gl.uniform1fv(i,r)}else"number"==typeof r?this.gl.uniform1f(i,r):(this.gl.activeTexture(33984+t),this.gl.bindTexture(r.type,r.glt),this.gl.uniform1i(i,t++))}return this}draw(e,t=1,n=0){const{mode:r}=this.state.pipeObj;return t>1?this.inst?.drawArraysInstancedANGLE(r,n,e,t):this.gl.drawArrays(r,n,e),this}drawIndexed(e,t=1,n=0){const{mode:r}=this.state.pipeObj;return t>1?this.inst?.drawElementsInstancedANGLE(r,e,m,2*n,t):this.gl.drawElements(r,e,m,2*n),this}viewport(e,t,n,r){return this.gl.viewport(e,t,n,r),this}scissor(e,t,n,r){return this}blendColor(e){return this}stencilRef(e){return this}end(){}}function L(){var t=new e(9);return e!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[5]=0,t[6]=0,t[7]=0),t[0]=1,t[4]=1,t[8]=1,t}var U;function V(){var t=new e(4);return e!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t[3]=1,t}U=new e(4),e!=Float32Array&&(U[0]=0,U[1]=0,U[2]=0,U[3]=0),t(),n(1,0,0),n(0,1,0),V(),V(),L();const G=a(),P=V(),B=n(1,1,1),j=t();function z(e){return e.extras||(e.extras={}),e.extras}function H(e,t=e.scene||0){let n=[];const r=e.scenes?.[t]?.nodes;if(r)for(let t=0;t<r.length;++t)$(e,r[t],G,n);n=n.sort().filter(((e,t,n)=>t===n.indexOf(e)));const o=[];for(const t of n){const n=e.nodes[t];e.skins?.[n.skin]&&o.push(n)}for(const t of o){const n=e.skins[t.skin],r=n.joints.length,o=z(t).jointMatrix=z(t).jointMatrix||new Float32Array(16*r),i=k(e,n);for(let a=0;a<r;++a){const r=e.nodes[n.joints[a]],s=r&&z(r).model||G,f=new Float32Array(o.buffer,o.byteOffset+64*a,16);l(f,z(t).model||G),u(f,f,s),u(f,f,new Float32Array(i.buffer,i.byteOffset+64*a,16))}}return n}function $(e,n,r,o=null){const i=e.nodes?.[n];if(!i)return;o?.push(n);const f=z(i).matrix=z(i).matrix||a();var c,h,m,d,g,v,p,x,b,T,y,w,O,C,S,E,_,N,F,M,I,R,A;i.matrix?s(f,i.matrix):(i.rotation||i.scale||i.translation)&&(c=f,h=i.rotation||P,m=i.translation||j,d=i.scale||B,w=(g=h[0])*(b=g+g),O=g*(T=(v=h[1])+v),C=g*(y=(p=h[2])+p),S=v*T,E=v*y,_=p*y,N=(x=h[3])*b,F=x*T,M=x*y,I=d[0],R=d[1],A=d[2],c[0]=(1-(S+_))*I,c[1]=(O+M)*I,c[2]=(C-F)*I,c[3]=0,c[4]=(O-M)*R,c[5]=(1-(w+_))*R,c[6]=(E+N)*R,c[7]=0,c[8]=(C+F)*A,c[9]=(E-N)*A,c[10]=(1-(w+S))*A,c[11]=0,c[12]=m[0],c[13]=m[1],c[14]=m[2],c[15]=1);const D=z(i).model=z(i).model||a();u(D,r,f);const L=e.cameras?.[i.camera];if(L&&(l(z(L).view=z(L).view||a(),D),function(e,t,n,r){e[0]=t,e[1]=n,e[2]=r}(z(L).translation=z(L).translation||t(),D[12],D[13],D[14])),i.children)for(const t of i.children)$(e,t,D,o)}function k(e,t){let n=z(t).inverseBindMatrices;if(!n){const r=e.accessors?.[t.inverseBindMatrices];if(r){const t=e.bufferViews?.[r.bufferView];if(t){const e=z(t).bufferView;n=new Float32Array(e.buffer,e.byteOffset+(r.byteOffset||0),16*r.count)}}n||(n=new Float32Array(16*t.joints.length)),z(t).inverseBindMatrices=n}return n}function W(e,n,a,s){const l=t();i(l,a.min,s);const f=t();i(f,a.max,s);const c=t();r(c,f,l),o(c,c,.5);const u=t();!function(e,t,n){e[0]=t[0]-n[0],e[1]=t[1]-n[1],e[2]=t[2]-n[2]}(u,f,c);const h=(d=(m=u)[0],g=m[1],v=m[2],Math.hypot(d,g,v));var m,d,g,v;for(const t of[0,1,2])e[t]=c[t]-h,n[t]=c[t]+h}function q(e,t){let n="";for(let r=0;r<8;++r)n+=`\n#ifdef USE_TARGET_${t}_${r}\n  ${e} += targetWeights[${r}] * TARGET_${t}_${r};\n#endif\n`;return n}const J=`\nprecision highp float;\n\nuniform mat4 model;\nuniform mat4 viewProj;\nuniform mat3 normalMatrix;\n\n#if defined(USE_COLOR_VEC4)\nattribute vec4 COLOR_0;\nvarying vec4 vColor0;\n#elif defined(USE_COLOR_VEC3)\nattribute vec3 COLOR_0;\nvarying vec4 vColor0;\n#endif\n\n#ifdef USE_TEXCOORD_0\nattribute vec2 TEXCOORD_0;\n#endif\n#ifdef USE_TEXCOORD_1\nattribute vec2 TEXCOORD_1;\n#endif\n\nvarying vec2 vTexCoord0;\nvarying vec2 vTexCoord1;\n\n\n#ifdef USE_JOINTS_0\nattribute vec4 JOINTS_0;\n#endif\n\n#ifdef USE_WEIGHTS_0\nattribute vec4 WEIGHTS_0;\n#endif\n\n#if defined(USE_WEIGHTS_0) && defined(USE_JOINTS_0)\n#define USE_SKINNING\n\n#ifndef NUM_JOINTS\n#define NUM_JOINTS 24\n#endif\n\nuniform mat4 jointMatrix[NUM_JOINTS];\n\nmat4 getSkinMatrix() {\n  mat4 skin =\n    WEIGHTS_0.x * jointMatrix[int(JOINTS_0.x)] +\n    WEIGHTS_0.y * jointMatrix[int(JOINTS_0.y)] +\n    WEIGHTS_0.z * jointMatrix[int(JOINTS_0.z)] +\n    WEIGHTS_0.w * jointMatrix[int(JOINTS_0.w)];\n\n  return skin;\n}\n#endif\n\n${["POSITION","NORMAL","TANGENT"].map((e=>{let t="";for(let n=0;n<8;++n)t+=`\n#ifdef USE_TARGET_${e}_${n}\n  attribute vec3 TARGET_${e}_${n};\n#endif\n`;return t})).join("\n")}\n\n#if defined(USE_TARGET_POSITION_0) || defined(USE_TARGET_NORMAL_0) || defined(USE_TARGET_TANGENT_0)\n#define USE_MORPHING\n#ifndef NUM_MORPHS\n#define NUM_MORPHS 8\n#endif\n\nuniform float targetWeights[NUM_MORPHS];\n\nvec4 getTargetPosition() {\n  vec4 pos = vec4(0);\n  ${q("pos.xyz","POSITION")}\n  return pos;\n}\n\nvec3 getTargetNormal() {\n  vec3 normal = vec3(0);\n  ${q("normal","NORMAL")}\n  return normal;\n}\n\nvec3 getTargetTangent() {\n  vec3 tangent = vec3(0);\n  ${q("tangent","TANGENT")}\n  return tangent;\n}\n\n#endif\n\n\nattribute vec3 POSITION;\nvarying vec3 vPosition;\n\nvec4 getPosition(void) {\n  vec4 pos = vec4(POSITION, 1.0);\n\n#ifdef USE_MORPHING\n  pos += getTargetPosition();\n#endif\n#ifdef USE_SKINNING\n  pos = getSkinMatrix() * pos;\n#endif\n\n  return pos;\n}\n\n#ifdef USE_NORMAL\nattribute vec3 NORMAL;\n\n#ifdef USE_TANGENT\nattribute vec4 TANGENT;\nvarying mat3 vTBN;\n\nvec3 getTangent() {\n  vec3 tan = TANGENT.xyz;\n\n#ifdef USE_MORPHING\n  tan += getTargetTangent();\n#endif\n#ifdef USE_SKINNING\n  tan = mat3(getSkinMatrix()) * tan;\n#endif\n\n  return normalize(tan);\n}\n#else\nvarying vec3 vNormal;\n#endif\n\nvec3 getNormal() {\n  vec3 norm = NORMAL;\n\n#ifdef USE_MORPHING\n  norm += getTargetNormal();\n#endif\n#ifdef USE_SKINNING\n  norm = mat3(getSkinMatrix()) * norm;\n#endif\n\n  return normalize(norm);\n}\n\n#endif\n\nvoid main(void) {\n  vec4 pos = model * getPosition();\n  vPosition = pos.xyz / pos.w;\n\n#ifdef USE_NORMAL\n#ifdef USE_TANGENT\n  vec3 tan = getTangent();\n  vec3 normW = normalize(normalMatrix * getNormal());\n  vec3 tanW = normalize(normalMatrix * tan);\n  vec3 bitanW = cross(normW, tanW) * TANGENT.w;\n  vTBN = mat3(tanW, bitanW, normW);\n#else\n  vNormal = normalize(normalMatrix * NORMAL);\n#endif\n#endif\n\n#if defined(USE_COLOR_VEC4)\n  vColor0 = COLOR_0;\n#elif defined(USE_COLOR_VEC3)\n  vColor0 = vec4(COLOR_0, 1.0);\n#endif\n\n  vTexCoord0 = vec2(0.0, 0.0);\n  vTexCoord1 = vec2(0.0, 0.0);\n#ifdef USE_TEXCOORD_0\n  vTexCoord0 = TEXCOORD_0;\n#endif\n#ifdef USE_TEXCOORD_1\n  vTexCoord1 = TEXCOORD_1;\n#endif\n\n  gl_Position = viewProj * pos;\n  gl_PointSize = 1.0;\n}\n`,X=a(),K=t(),Q=a();function Y(e,t,n,r,o){const i=n.meshes?.[r.mesh];if(i){var l,f,c,u,h,m,d,g,v,p,x,b,T,y,w,O,C,S,E,_,N,F,M,I,R,A,D,U,V,G,P,B;o.model=s(o.model||a(),z(r).model||X),o.normalMatrix=(l=o.normalMatrix||L(),c=(f=o.model)[0],u=f[1],h=f[2],m=f[3],d=f[4],g=f[5],v=f[6],p=f[7],x=f[8],b=f[9],T=f[10],y=f[11],w=f[12],O=f[13],C=f[14],(P=(E=c*g-u*d)*(G=T*(S=f[15])-y*C)-(_=c*v-h*d)*(V=b*S-y*O)+(N=c*p-m*d)*(U=b*C-T*O)+(F=u*v-h*g)*(D=x*S-y*w)-(M=u*p-m*g)*(A=x*C-T*w)+(I=h*p-m*v)*(R=x*O-b*w))?(P=1/P,l[0]=(g*G-v*V+p*U)*P,l[1]=(v*D-d*G-p*A)*P,l[2]=(d*V-g*D+p*R)*P,l[3]=(h*V-u*G-m*U)*P,l[4]=(c*G-h*D+m*A)*P,l[5]=(u*D-c*V-m*R)*P,l[6]=(O*I-C*M+S*F)*P,l[7]=(C*N-w*I-S*_)*P,l[8]=(w*M-O*N+S*E)*P,l):null);for(let a=0;a<i.primitives.length;++a){const s=i.primitives[a];let l=!1,f=0,c=0;const u=n.accessors?.[s.attributes.POSITION];if(!u)continue;f=u.count;const h={...o,...ee(e,n,s.material)};s.targets?.length&&(h.targetWeights=r.weights||i.weights||[0,0,0,0,0,0,0,0]);let m=0;const d=n.skins?.[r.skin];if(s.attributes.JOINTS_0&&s.attributes.WEIGHTS_0&&d){m=d.joints.length;const e=z(r).jointMatrix=z(r).jointMatrix||new Float32Array(16*m);h.jointMatrix=e}const g=Z(e,n,r.mesh,a,m);t.pipeline(g).uniforms(h);for(let r=0;r<g.buffers.length;++r){const o=g.buffers[r].attrs[0].name,i=o.match(/TARGET_(.+)_(\d+)/),a=te(e,n,i?s.targets[i[2]][i[1]]:s.attributes[o],34962);a&&t.vertex(r,a)}{const r=n.accessors?.[s.indices];if(r){const o=te(e,n,s.indices,34963);o&&(t.index(o),f=r.count,c=(r.byteOffset||0)/((B=g.indexFormat)?B-5123+2:0),l=!0)}}l?t.drawIndexed(f,1,c):t.draw(f)}}}function Z(e,t,n,r,o=0){const i=t.meshes[n].primitives[r];let a=z(i).pipeline;if(a)return a;const s=i.mode||4,l=t.materials?.[i.material];let f="OPAQUE",c=!1;l&&(c=l.doubleSided||!1,f=l.alphaMode||f);const u=function(e,t){const n=[];function r(e,t,r,o,i,a=0){const s=(a||0)%(i||4);n.push({attrs:[{name:e,format:o,offset:s,shaderLoc:t}],stride:i})}let o=0;const i=["POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","JOINTS_0","WEIGHTS_0"];for(const n of i){const i=e.accessors?.[t.attributes[n]];if(!i)continue;const a=e.bufferViews?.[i.bufferView];if(!a)continue;const s=re(i.type,i.componentType,i.normalized);s&&r(n,o++,i.bufferView,s,a.byteStride,i.byteOffset)}if(t.targets){const n=["POSITION","NORMAL","TANGENT"];for(let i=0;i<t.targets.length;++i)for(const a of n){const n=e.accessors?.[t.targets[i][a]];if(!n)continue;const s=e.bufferViews?.[n.bufferView];s&&r(`TARGET_${a}_${i}`,o++,n.bufferView,768,s.byteStride,n.byteOffset)}}return n}(t,i);let h=5123;const m=t.accessors?.[i.indices];m&&5125===m.componentType&&(h=5125);const d=i.attributes.JOINTS_0&&i.attributes.WEIGHTS_0?12*Math.ceil(o/12):0,g=JSON.stringify([u,h,d,s,c,f]),v=z(t).pipelines=z(t).pipelines||{};if(a=v[g],a)return a;const p=[`ALPHAMODE_${f}`];for(const e of u)for(const t of e.attrs)p.push(`USE_${t.name}`);d>0&&p.push(`NUM_JOINTS ${d}`);const x=p.map((e=>`#define ${e}`)).join("\n"),b={};return d>0&&(b.jointMatrix={type:1,format:w}),i.targets?.length&&(b.targetWeights={type:1,format:y}),a=z(i).pipeline=v[g]=e.pipeline({vert:x+J,frag:x+"\n#ifdef GL_OES_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n#endif\n\nprecision highp float;\n\nuniform float alphaCutoff;\nuniform vec3 cameraPosition;\n\nvarying vec3 vPosition;\n\n\nconst float GAMMA = 2.2;\n\nvec3 linearTosRGB(vec3 color) {\n  return pow(color, vec3(1.0/GAMMA));\n}\n\nvec3 sRGBToLinear(vec3 srgbIn) {\n  return vec3(pow(srgbIn.xyz, vec3(GAMMA)));\n}\n\nvec4 sRGBToLinear(vec4 srgbIn) {\n  return vec4(sRGBToLinear(srgbIn.xyz), srgbIn.w);\n}\n\n\nconst float PI = 3.141592653589793;\n\nvec3 specularF(vec3 r0, vec3 r90, float vDotH) {\n  return r0 + (r90 - r0) * pow(clamp(1.0 - vDotH, 0.0, 1.0), 5.0);\n}\n\nfloat specularD(float aSqr, float nDotH) {\n  float f = (nDotH * nDotH) * (aSqr - 1.0) + 1.0;\n  return aSqr / (PI * f * f);\n}\n\nfloat specularV(float aSqr, float nDotL, float nDotV) {\n  float gl = 1.0 / (nDotL + sqrt(aSqr + (1.0 - aSqr) * (nDotL * nDotL)));\n  float gv = 1.0 / (nDotV + sqrt(aSqr + (1.0 - aSqr) * (nDotV * nDotV)));\n  return gl * gv;\n}\n\nfloat specularBRDF(float aSqr, float nDotL, float nDotV, float nDotH) {\n  return specularV(aSqr, nDotL, nDotV) * specularD(aSqr, nDotH);\n}\n\nvec3 diffuseBRDF(vec3 color) {\n  return color / PI;\n}\n\n\nvarying vec2 vTexCoord0;\nvarying vec2 vTexCoord1;\n\nstruct TextureInfo {\n  sampler2D tex;\n  float texCoord;\n  float scale;\n};\n\nvec2 getTexCoord(TextureInfo tex) {\n  return mix(vTexCoord0, vTexCoord1, step(1.0, tex.texCoord));\n}\n\nvec4 texture(TextureInfo tex) {\n  return texture2D(tex.tex, getTexCoord(tex));\n}\n\nvec4 texture(TextureInfo tex, vec4 defaultValue) {\n  return mix(defaultValue, texture2D(tex.tex, getTexCoord(tex)), step(0.0, tex.texCoord));\n}\n\n\nuniform TextureInfo normalTexture;\n\n#ifdef USE_NORMAL\n#ifdef USE_TANGENT\nvarying mat3 vTBN;\n#else\nvarying vec3 vNormal;\n#endif\n#endif\n\nstruct NormalInfo {\n  vec3 ng;\n  vec3 n;\n  vec3 t;\n  vec3 b;\n};\n\nNormalInfo getNormalInfo(vec3 v) {\n  vec2 UV = getTexCoord(normalTexture);\n  vec3 uvDx = dFdx(vec3(UV, 0.0));\n  vec3 uvDy = dFdy(vec3(UV, 0.0));\n\n  vec3 t_ = (uvDy.t * dFdx(v) - uvDx.t * dFdy(v)) / (uvDx.s * uvDy.t - uvDy.s * uvDx.t);\n\n  vec3 n, t, b, ng;\n\n#ifdef USE_TANGENT\n  t = normalize(vTBN[0]);\n  b = normalize(vTBN[1]);\n  ng = normalize(vTBN[2]);\n#else\n#ifdef USE_NORMAL\n  ng = normalize(vNormal);\n#else\n  ng = normalize(cross(dFdx(v), dFdy(v)));\n#endif\n  t = normalize(t_ - ng * dot(ng, t_));\n  b = cross(ng, t);\n#endif\n\n  if (gl_FrontFacing == false) {\n    t *= -1.0;\n    b *= -1.0;\n    ng *= -1.0;\n  }\n\n  n = ng;\n  if (normalTexture.texCoord >= 0.0) {\n    n = texture(normalTexture).rgb * 2.0 - vec3(1.0);\n    n *= vec3(normalTexture.scale, normalTexture.scale, 1.0);\n    n = mat3(t, b, ng) * normalize(n);\n  }\n\n  NormalInfo info;\n  info.ng = ng;\n  info.t = t;\n  info.b = b;\n  info.n = n;\n  return info;\n}\n\n\nconst float MIN_ROUGHNESS = 0.04;\n\n#if defined(USE_COLOR_VEC4) || defined(USE_COLOR_VEC3)\nvarying vec4 vColor0;\n#endif\n\nuniform vec4 baseColorFactor;\nuniform TextureInfo baseColorTexture;\n\nuniform float metallicFactor;\nuniform float roughnessFactor;\nuniform TextureInfo metallicRoughnessTexture;\n\nuniform TextureInfo occlusionTexture;\n\nuniform vec3 emissiveFactor;\nuniform TextureInfo emissiveTexture;\n\nvec4 getVertexColor() {\n  vec4 color = vec4(1.0);\n#if defined(USE_COLOR_VEC4) || defined(USE_COLOR_VEC3)\n  color = vColor0;\n#endif\n  return color;\n}\n\nvec4 getBaseColor() {\n  vec4 baseColor = vec4(1.0);\n\n  baseColor *= baseColorFactor;\n  baseColor *= sRGBToLinear(texture(baseColorTexture, vec4(1.0)));\n\n  return baseColor * getVertexColor();\n}\n\nvec2 getMetallicRoughness() {\n  vec4 mrTex = texture(metallicRoughnessTexture, vec4(1.0));\n  return vec2(\n    clamp(metallicFactor * mrTex.b, 0.0, 1.0),\n    clamp(roughnessFactor * mrTex.g, MIN_ROUGHNESS, 1.0)\n  );\n}\n\nfloat getOcculsion() {\n  return texture(occlusionTexture, vec4(1.0)).r;\n}\n\nvec3 getEmissiveFactor() {\n  return emissiveFactor * texture(emissiveTexture, vec4(0.0)).rgb;\n}\n\n\n\nvoid main () {\n  vec4 baseColor = getBaseColor();\n#ifdef ALPHAMODE_OPAQUE\n  baseColor.a = 1.0;\n#endif\n\n  vec3 v = normalize(cameraPosition - vPosition);\n  NormalInfo normalInfo = getNormalInfo(vPosition);\n  vec3 n = normalInfo.n;\n\n  vec3 reflection = -normalize(reflect(v, n));\n  float nDotV = clamp(abs(dot(n, v)), 0.001, 1.0);\n\n  vec2 metallicRoughness = getMetallicRoughness();\n  float metallic = metallicRoughness[0];\n  float roughness = metallicRoughness[1];\n  float alphaRoughness = roughness * roughness;\n  float aSqr = alphaRoughness * alphaRoughness;\n\n  vec3 f0 = vec3(0.04);\n  vec3 diffuseColor = baseColor.rgb * (vec3(1.0) - f0) * (1.0 - metallic);\n  vec3 specularColor = mix(f0, baseColor.rgb, metallic);\n\n  float r0 = max(max(specularColor.r, specularColor.g), specularColor.b);\n  float r90 = clamp(r0 * 25.0, 0.0, 1.0);\n  vec3 specularEnvR0 = specularColor.rgb;\n  vec3 specularEnvR90 = vec3(1.0, 1.0, 1.0) * r90;\n\n  vec3 diffuseFinal = vec3(0.0);\n  vec3 specularFinal = vec3(0.0);\n\n  vec3 lightDirs[2];\n  lightDirs[0] = vec3(0.5, -0.707107, -0.5);\n  lightDirs[1] = vec3(-0.5, 0.707107, 0.5);\n  vec4 lightColors[2];\n  lightColors[0] = vec4(1.0, 1.0, 1.0, 1.0);\n  lightColors[1] = vec4(1.0, 1.0, 1.0, 0.5);\n\n  for (int i = 0; i < 2; ++i) {\n    vec3 intensity = lightColors[i].rgb * lightColors[i].a;\n    vec3 l = normalize(-lightDirs[i]);\n    vec3 h = normalize(l + v);\n    float nDotL = clamp(dot(n, l), 0.001, 1.0);\n    float nDotH = clamp(dot(n, h), 0.0, 1.0);\n    float vDotH = clamp(dot(v, h), 0.0, 1.0);\n  \n    vec3 F = specularF(specularEnvR0, specularEnvR90, vDotH);\n    vec3 diffuse = (1.0 - F) * diffuseBRDF(diffuseColor);\n    vec3 specular = max(vec3(0.0), F * specularBRDF(aSqr, nDotL, nDotV, nDotH));\n  \n    diffuseFinal += intensity * nDotL * diffuse;\n    specularFinal += intensity * nDotL * specular;\n  }\n\n  vec4 ambient = vec4(0.1);\n\n  vec3 ambientDiffuse = ambient.rgb * diffuseBRDF(diffuseColor);\n  diffuseFinal += ambientDiffuse;\n\n  vec3 colorFinal = diffuseFinal + specularFinal;\n\n  float ao = getOcculsion();\n  colorFinal = mix(colorFinal, colorFinal * ao, occlusionTexture.scale);\n\n  vec3 emissive = getEmissiveFactor();\n  colorFinal += emissive;\n\n#ifdef ALPHAMODE_MASK\n  if (baseColor.a < alphaCutoff) {\n    discard;\n  }\n  baseColor.a = 1.0;\n#else\n  alphaCutoff;\n#endif\n\n  gl_FragColor = vec4(linearTosRGB(colorFinal), baseColor.a);\n}\n",buffers:u,indexFormat:h,mode:s,depth:{compare:515,writeEnabled:!0},raster:{cullMode:c?0:1029},uniforms:{model:{type:1,format:w},viewProj:{type:1,format:w},normalMatrix:{type:1,format:35675},cameraPosition:{type:1,format:35665},alphaCutoff:{type:1,format:y},baseColorFactor:{type:1,format:35666},"baseColorTexture.tex":{type:2,format:T},"baseColorTexture.texCoord":{type:1,format:y},metallicFactor:{type:1,format:y},roughnessFactor:{type:1,format:y},"metallicRoughnessTexture.tex":{type:2,format:T},"metallicRoughnessTexture.texCoord":{type:1,format:y},"normalTexture.tex":{type:2,format:T},"normalTexture.texCoord":{type:1,format:y},"normalTexture.scale":{type:1,format:y},emissiveFactor:{type:1,format:35665},"emissiveTexture.tex":{type:2,format:T},"emissiveTexture.texCoord":{type:1,format:y},"occlusionTexture.tex":{type:2,format:T},"occlusionTexture.texCoord":{type:1,format:y},"occlusionTexture.scale":{type:1,format:y},...b}}),a}function ee(e,t,n){const r={alphaCutoff:0,baseColorFactor:[1,1,1,1],"baseColorTexture.tex":ne(e,t),"baseColorTexture.texCoord":-1,metallicFactor:1,roughnessFactor:1,"metallicRoughnessTexture.tex":ne(e,t),"metallicRoughnessTexture.texCoord":-1,"normalTexture.tex":ne(e,t),"normalTexture.texCoord":-1,"normalTexture.scale":1,emissiveFactor:[0,0,0],"emissiveTexture.tex":ne(e,t),"emissiveTexture.texCoord":-1,"occlusionTexture.tex":ne(e,t),"occlusionTexture.texCoord":-1,"occlusionTexture.scale":0};function o(n,o,i=null){n[o]&&(r[`${o}.tex`]=function(e,t,n){const r=t.textures?.[n];if(!r)return ne(e,t);let o=z(r).texture;if(o)return o;let i=null;const a={wrapU:10497,wrapV:10497,magFilter:x.Linear,minFilter:x.Linear},s=t.images?.[r.source];s&&(i=z(s).image);const l=t.samplers?.[r.sampler];if(l){if(l.magFilter&&(a.magFilter=l.magFilter),l.minFilter)switch(l.minFilter){case b.Nearest:case b.NearestMipmapNearest:case b.NearestMipmapLinear:a.minFilter=b.Nearest;break;default:a.minFilter=b.Linear}l.wrapS&&(a.wrapU=l.wrapS),l.wrapT&&(a.wrapV=l.wrapT)}return o=z(r).texture=e.texture({size:i?[i.naturalWidth,i.naturalHeight]:[1,1]},a),o.data(i||new Uint8Array([1,1,1,1])),o}(e,t,n[o].index),r[`${o}.texCoord`]=n[o].texCoord||0,i&&(r[`${o}.scale`]=n[o][i]||0))}const i=t.materials?.[n];if(i){if(i.pbrMetallicRoughness){const e=i.pbrMetallicRoughness;e.baseColorFactor&&(r.baseColorFactor=e.baseColorFactor),(e.metallicFactor||0===e.metallicFactor)&&(r.metallicFactor=e.metallicFactor),(e.roughnessFactor||0===e.roughnessFactor)&&(r.roughnessFactor=e.roughnessFactor),o(e,"baseColorTexture"),o(e,"metallicRoughnessTexture")}r.alphaCutoff=i.alphaCutoff||0,i.emissiveFactor&&(r.emissiveFactor=i.emissiveFactor),o(i,"emissiveTexture"),o(i,"occlusionTexture","strength"),o(i,"normalTexture","scale")}return r}function te(e,t,n,r){const o=t.accessors?.[n];if(!o)return null;const i=t.bufferViews?.[o.bufferView];if(!i)return null;const a=z(i).bufferView;if(34963===r){let t=z(i).gpuBuffer;return t||(t=z(i).gpuBuffer=e.buffer({type:i.target||r,size:i.byteLength}).data(a),t)}const s=z(i).gpuBuffers=z(i).gpuBuffers||{},l=i.byteStride||4,f=(o.byteOffset||0)%l,c=(o.byteOffset||0)-f,u=o.count*(("VEC2"===(g=o.type)?2:"VEC3"===g?3:"VEC4"===g?4:0)*((v=o.componentType)===d?4:v===m?2:v===h?1:0));var g,v;const p=`${c},${u}`;if(s[p])return s[p];const x=new Uint8Array(a.buffer,(a.byteOffset||0)+c,u);return s[p]=e.buffer({type:i.target||r,size:u}).data(x)}function ne(e,t){let n=z(t).blankTexture;return n||(n=z(t).blankTexture=e.texture({size:[1,1]}).data(new Uint8Array([255,255,255,255])),n)}function re(e,t,n=!1){switch(e){case"VEC2":if(t===d)return 512;if(t===m)return n?66052:516;break;case"VEC3":if(t===d)return 768;break;case"VEC4":if(t===d)return 1024;if(t===h)return n?66562:1026;if(t===m)return n?66564:1028}return null}function oe(e){return(new TextDecoder).decode(e)}function ie(e){return/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)}function ae(e,t){return""===e?"":/^(https?:)?\/\//i.test(e)||ie(e)?e:t+e}async function se(e,t=le){const n=e.uri?function(e){if(ie(e))return"";const t=e.split("/");return t.pop(),t.length?t.join("/")+"/":""}(e.uri):"";let r=e.glTF,o=e.binaryChunk;if(!r&&e.uri)if(e.uri.match(/\.glb$/)){const n=function(e){let t,n,r,o=0;ArrayBuffer.isView(e)?(r=e.buffer,o=e.byteOffset):r=e;const i=new DataView(r,o,12);if(1179937895!==i.getUint32(0,!0))throw new Error("Invalid GLB format");const a=i.getUint32(4,!0);if(2!==a)throw new Error("Unsupported GLB version: "+a);const s=new DataView(r,o+12);let l=0;for(;l<s.byteLength;){const e=s.getUint32(l,!0),i=s.getUint32(l+4,!0);if(l+=8,1313821514===i){const n=new Uint8Array(r,o+12+l,e);t=JSON.parse(oe(n))}else 5130562===i&&(n=new Uint8Array(r,o+12+l,e));l+=e}if(!t)throw new Error("Invalid GLB format: missing JSON content");if(!t.asset||"2.0"!==t.asset.minVersion&&"2.0"!==t.asset.version)throw new Error("Unsupported glTF version: 2.0 required");return{glTF:t,binaryChunk:n}}(await t(e.uri,"bin"));r=n.glTF,o=n.binaryChunk}else r=JSON.parse(await t(e.uri,"str"));if(!r)throw new Error("Failed to load glTF JSON");const i=await async function(e,t,n,r){if(e.buffers)for(let o=0;o<e.buffers?.length;++o){const i=e.buffers[o];if(z(i).buffer)continue;let a;const s=i.uri;if(s)a=await n(ae(s,r),"bin");else{if(0!==o||!t)throw new Error("Invalid glTF: missing uri for buffer "+o);a=t}z(i).buffer=a}if(e.bufferViews)for(let t=0;t<e.bufferViews?.length;++t){const n=e.bufferViews[t];if(z(n).bufferView)continue;const r=e.buffers?.[n.buffer];if(!r)throw new Error("Invalid glTF: invalid buffer for bufferView "+t);const o=z(r).buffer,i=new Uint8Array(o.buffer,(o.byteOffset||0)+(n.byteOffset||0),n.byteLength);z(n).bufferView=i}return e}(r,o,t,n);return await async function(e,t,n){if(e.images)for(let r=0;r<e.images.length;++r){const o=e.images[r];if(z(o).image)continue;const i=o.bufferView;let a,s=!1,l=o.uri;if(i){const t=e.bufferViews?.[i];if(!t)throw new Error("Invalid glTF: invalid bufferView for image "+r);const n=new Blob([z(t).bufferView],{type:o.mimeType});l=URL.createObjectURL(n),s=!0}if(!l)throw new Error("Invalid glTF: missing uri or bufferView for image "+r);try{a=await t(ae(l,n),"img")}finally{s&&URL.revokeObjectURL(l)}z(o).image=a}return e}(i,t,n)}function le(e,t){return"bin"===t?fetch(e).then((e=>e.arrayBuffer())).then((e=>new Uint8Array(e))):"img"===t?new Promise(((t,n)=>{const r=new Image;r.crossOrigin="anonymous",r.onerror=()=>n(new Error("Failed to load: "+e)),r.onload=()=>t(r),r.src=e})):fetch(e).then((e=>e.text()))}const fe=new URLSearchParams(window.location.search),ce=document.querySelector("canvas"),ue=ce.parentElement;let he=null;const me=((e,t)=>{const n=e.getContext("webgl",{powerPreference:"low-power"});return n?new A(n):null})(ce);if(me.gl.getExtension("OES_standard_derivatives"),!me)throw new Error("WebGL is unsupported");const de="https://raw.githubusercontent.com/KhronosGroup/glTF-Sample-Models/63f026b2aa957d3e8207f6dd798608993e33fb0d/2.0";function ge(){if(!he)return;const e=fe.get("camera"),t=fe.get("scene"),r=((null!==t&&parseInt(t))??he.scene)||0;!function(e,t,r={}){const o=t.nodes,i=t.scenes?.[(r.scene??t.scene)||0]?.nodes;if(!o||!i)return;const s=H(t);let c=X,h=X,m=K;if(r.camera){const o=t.cameras?.[r.camera.index||0];o&&(c=o.extras?.view||X,d=Q,g=o,v=e.canvas.width/e.canvas.height,g?.orthographic?function(e,t,n,r,o,i,a){var s=1/(t-n),l=1/(r-o),f=1/(i-a);e[0]=-2*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*l,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*f,e[11]=0,e[12]=(t+n)*s,e[13]=(o+r)*l,e[14]=(a+i)*f,e[15]=1}(d,-g.orthographic.xmag,g.orthographic.xmag,-g.orthographic.xmag/(v||1),g.orthographic.xmag/(v||1),g.orthographic.znear,g.orthographic.zfar):g?.perspective?f(d,g.perspective.yfov,v||g.perspective.aspectRatio||1,g.perspective.znear,g.perspective.zfar||1/0):function(e){e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(d),h=d,m=o.extras?.translation||K),r.camera.model&&(m=n(r.camera.model[12],r.camera.model[13],r.camera.model[14]),c=l(a(),r.camera.model)),h=r.camera.proj||h}var d,g,v;const p={cameraPosition:m,viewProj:u(Q,h,c)},x=e.pass(),b=e.render(x);for(let n=0;n<s.length;++n)Y(e,b,t,o[s[n]],p);b.end(),x.destroy()}(me,he,{scene:r,camera:null!==e&&he.cameras?{index:parseInt(e)}:ve(he,r,me.canvas.width/me.canvas.height)})}function ve(e,i,s){const l=n(1,2,2);(function(e,t){var n=t[0],r=t[1],o=t[2],i=n*n+r*r+o*o;i>0&&(i=1/Math.sqrt(i)),e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i})(l,l),H(e,i);const[u,h]=function(e,n,r,o){for(let t=0;t<3;++t)e[t]=1/0,n[t]=-1/0;const i=r.scenes?.[o];if(!i)return[e,n];let a=(i.nodes||[]).slice();for(;a.length>0;){const o=r.nodes?.[a.pop()];if(!o)continue;a=a.concat(o.children||[]);const i=r.meshes?.[o.mesh];if(i&&i.primitives)for(const a of i.primitives){const i=r.accessors?.[a.attributes.POSITION];if(!i)continue;const s=t(),l=t();W(s,l,i,z(o).model||G);for(const t of[0,1,2])e[t]=Math.min(e[t],s[t]),n[t]=Math.max(n[t],l[t])}}return[e,n]}(t(),t(),e,i),m=Math.max(h[0]-u[0],h[1]-u[1]),d=Math.PI/4,g=d*s,v=m/2/Math.tan(d/2),p=m/2/Math.tan(g/2),x=Math.max(p,v);o(l,l,1.2*x);const b=(T=u,w=(y=h)[0]-T[0],O=y[1]-T[1],C=y[2]-T[2],Math.hypot(w,O,C));var T,y,w,O,C;let S=x+6*b,E=x-6*b;E=Math.max(E,S/1e4);const _=t();return r(_,u,h),o(_,_,.5),{model:c(a(),l,_,n(0,1,0)),proj:f(a(),d,s,E,S)}}function pe(){const e=window.devicePixelRatio||1,t=ue.clientWidth,n=ue.clientHeight;ce.width=t*e,ce.height=n*e,ce.style.width=`${t}px`,ce.style.height=`${n}px`,ge()}window.addEventListener("resize",pe,!1),pe(),async function(){let e=fe.get("url");if(!e){const t=await(await fetch(`${de}/model-index.json`)).json(),n=fe.get("model")||"DamagedHelmet",r=fe.get("variant")||"glTF",o=t.find((e=>e.name===n));e=`${de}/${n}/${r}/${o.variants[r]}`}const t=await se({uri:e});he=t,ge()}()})();