{"version":3,"sources":["../../js/gpu/primitive.ts"],"names":["FutureStatus","Pending","Done","Error"],"mappings":"AAoEA,YAAYA,CAAAA,YAAZ,EAEIC,OAFJ,CAEc,CAFd,CAIIC,IAJJ,CAIW,CAJX,CAMIC,KANJ,CAMY,CANZ","sourcesContent":["/**\n * Texture image source type.\n */\nexport type ImageSource = TexImageSource;\n\n/**\n * JS number type.\n */\nexport type Num = number;\n\n/**\n * Float type.\n */\nexport type Float = number;\n\n/**\n * Int type.\n */\nexport type Int = number;\n\n/**\n * Unsigned int type.\n */\nexport type UInt = number;\n\n/**\n * Unsigned int array type.\n */\nexport type UIntArray = UInt[];\n\n/**\n * RGBA color type.\n */\nexport type Color = [r: number, g: number, b: number, a: number];\n\n/**\n * An (width, height) 2D extent.\n */\nexport type Extent2D = [width: number, height: number];\n\n/**\n * An (width, height, depth) 3D extent.\n */\nexport type Extent3D = [width: number, height: number, depth: number];\n\n/**\n * A (x, y) 2D point.\n */\nexport type Origin2D = [x: number, y: number];\n\n/**\n * A (x, y, z) 3D point.\n */\nexport type Origin3D = [x: number, y: number, z: number];\n\n/**\n * A future indicates the completeness of an async task.\n * This is used as an alternative to Promise for compatibility with non-event-driven environments,\n * i.e. AssemblyScript / WebAssembly.\n */\nexport interface Future {\n    /** Returns current status of the future. */\n    get status(): FutureStatus;\n}\n\n/**\n * Status of a future.\n */\nexport enum FutureStatus {\n    /** The future is still pending. */\n    Pending = 0,\n    /** The future is resolved. */\n    Done = 1,\n    /** An error occurred while resolving the future. */\n    Error = 2,\n}\n"],"file":"primitive.js"}