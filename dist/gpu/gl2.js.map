{"version":3,"sources":["../../js/gpu/gl2.ts"],"names":["MUGL_DEBUG","GLenum","BindingType","BufferUsage","ColorWrite","ShaderStage","TextureUsage","WebGL2FeatureNames","glClearType","glTexelFormat","glTexelSize","glTexelType","hasStencil","indexByteSize","is3DTexture","isDepthStencil","vertexSize","vertexType","vertexNormalized","BYTE_MASK","STENCIL_MASK","MAX_VERTEX_ATTRIBS","requestWebGL2Device","canvas","options","features","gl","getContext","enabledFeatures","feature","getExtension","pass","state","initWebGL2State","destroy","deleteFramebuffer","copyFrameBuffer","resetDevice","device","isDeviceLost","isContextLost","getDeviceFeatures","createBuffer","desc","type","usage","Uniform","UNIFORM_BUFFER","Index","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","Stream","STREAM_DRAW","Dynamic","DYNAMIC_DRAW","STATIC_DRAW","glb","bindBuffer","bufferData","size","deleteBuffer","createTexture","samples","sampleCount","dimension","TEXTURE_2D","format","RGBA8","needTexture","TextureBinding","width","height","_depth","depth","TEXTURE_CUBE_MAP","glt","glrb","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","renderbufferStorage","activeTexture","TEXTURE0","bindTexture","texStorage3D","mipLevelCount","texStorage2D","deleteTexture","deleteRenderbuffer","createSampler","gls","minFilter","NEAREST","mipmapFilter","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","samplerParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","magFilter","TEXTURE_WRAP_S","addressModeU","CLAMP_TO_EDGE","TEXTURE_WRAP_T","addressModeV","TEXTURE_WRAP_R","addressModeW","samplerParameterf","TEXTURE_MAX_LOD","lodMaxClamp","TEXTURE_MIN_LOD","lodMinClamp","compare","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","maxAnisotropy","TEXTURE_MAX_ANISOTROPY_EXT","Math","min","getParameter","MAX_TEXTURE_MAX_ANISOTROPY_EXT","deleteSampler","createShader","Vertex","VERTEX_SHADER","FRAGMENT_SHADER","shaderSource","code","compileShader","console","assert","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","createRenderPass","glfb","glrfb","depthStencil","texture","withStencil","colors","length","createFramebuffer","bindFramebuffer","FRAMEBUFFER","i","view","framebufferRenderbuffer","COLOR_ATTACHMENT0","framebufferTexture","drawBuffers","map","_","DEPTH_STENCIL_ATTACHMENT","DEPTH_ATTACHMENT","error","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","push","createResolveFrameBuffer","color","c","clearColors","clear","clearColor","clearDepth","clearStencil","createBindGroupLayout","entries","entry","binding","createBindGroup","createRenderPipeline","glp","compileShaderProgram","vertex","fragment","cache","textureSlots","bufCount","texCount","bindGroups","j","loc","index","INVALID_INDEX","Buffer","getUniformBlockIndex","label","uniformBlockBinding","Texture","getUniformLocation","slot","Sampler","buffers","createPipelineState","deleteProgram","readBuffer","buffer","out","offset","future","done","getBufferSubData","byteLength","then","data","set","finally","writeBuffer","bufferSubData","copyBuffer","src","dst","srcOffset","dstOffset","COPY_READ_BUFFER","COPY_WRITE_BUFFER","copyBufferSubData","generateMipmap","hint","DONT_CARE","GENERATE_MIPMAP_HINT","writeTexture","mipLevel","origin","x","y","z","bytesPerRow","rowsPerImage","glFormat","glType","isCube","target","TEXTURE_CUBE_MAP_POSITIVE_X","pixelSize","imageHeight","pixelsPerRow","floor","offsetAligned","pixelStorei","UNPACK_IMAGE_HEIGHT","UNPACK_ROW_LENGTH","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","UNPACK_SKIP_IMAGES","texSubImage3D","slice","texSubImage2D","copyExternalImageToTexture","srcX","srcY","copyTexture","dstTexture","dstMipLevel","dstX","dstY","dstZ","copyTexSubImage3D","copyTexSubImage2D","copyTextureToBuffer","PIXEL_PACK_BUFFER","PACK_ROW_LENGTH","PACK_SKIP_PIXELS","PACK_SKIP_ROWS","readPixels","beginRenderPass","drawingBufferWidth","drawingBufferHeight","viewport","depthRange","scissor","glToggle","SCISSOR_TEST","clearMask","isNaN","DEPTH_BUFFER_BIT","applyDepthMask","depthWrite","STENCIL_BUFFER_BIT","applyStencilMask","stencilWriteMask","applyColorMask","blendWriteMask","All","INT","clearBufferiv","COLOR","UNSIGNED_INT","clearBufferuiv","clearBufferfv","COLOR_BUFFER_BIT","beginDefaultPass","submitRenderPass","blitFramebuffer","depthFb","setRenderPipeline","pipeline","useProgram","applyPipelineState","stencilRef","Object","assign","attribEnabled","attributes","ptr","Array","stride","stepMode","bufAttrs","step","instanceOffset","shaderLocation","enableVertexAttribArray","disableVertexAttribArray","setIndex","setVertex","buf","vertexAttribs","setBindGroup","bindGroup","offsets","offsetIdx","uniform","uniformInfo","warn","dataSize","getActiveUniformBlockParameter","UNIFORM_BLOCK_DATA_SIZE","alignment","UNIFORM_BUFFER_OFFSET_ALIGNMENT","sampler","bufferOffset","bufferDynamicOffset","bindBufferRange","bufferSize","uniform1i","bindSampler","draw","vertexCount","instanceCount","firstVertex","firstInstance","drawArraysInstanced","topology","drawIndexed","indexCount","firstIndex","drawElementsInstanced","indexFormat","setViewport","minDepth","maxDepth","setScissorRect","setBlendConst","blendColor","setStencilRef","ref","stencilFrontCompare","stencilBackCompare","stencilReadMask","stencilFuncSeparate","FRONT","BACK","PACK_ALIGNMENT","UNPACK_ALIGNMENT","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attachment","framebufferTextureLayer","texTarget","framebufferTexture2D","fb","from","to","tex","mask","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","primitive","stencilFront","stencilBack","alphaToCoverage","multisample","targets","writeMask","blendAlpha","TRIANGLES","UNSIGNED_SHORT","frontFace","CCW","cullMode","NONE","depthFormat","DEPTH_COMPONENT16","depthCompare","ALWAYS","depthBias","depthBiasSlopeScale","stencil","stencilFrontFailOp","failOp","KEEP","stencilFrontDepthFailOp","depthFailOp","stencilFrontPassOp","passOp","stencilBackFailOp","stencilBackDepthFailOp","stencilBackPassOp","blend","blendColorOp","operation","FUNC_ADD","blendColorSrcFactor","srcFactor","ONE","blendColorDstFactor","dstFactor","ZERO","blendAlphaOp","blendAlphaSrcFactor","blendAlphaDstFactor","prevState","force","b","n","n2","n3","n4","cullFace","CULL_FACE","SAMPLE_ALPHA_TO_COVERAGE","DEPTH_TEST","depthFunc","POLYGON_OFFSET_FILL","polygonOffset","STENCIL_TEST","stencilOpSeparate","BLEND","blendFuncSeparate","blendEquationSeparate","prevMask","colorMask","Red","Green","Blue","Alpha","depthMask","stencilMask","flag","enable","disable","params","vertexAttribPointer","vertexAttribDivisor","clientWaitAsync","sync","flags","interval","Promise","resolve","reject","test","res","clientWaitSync","WAIT_FAILED","TIMEOUT_EXPIRED","setTimeout","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","deleteSync","Uint8Array"],"mappings":"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","sourcesContent":["import { MUGL_DEBUG } from '../config';\nimport * as GLenum from './gl-const';\nimport { Color, Extent2D, Extent3D, Float, Future, UInt, UIntArray } from './primitive';\nimport {\n  BindingType, BufferUsage, ColorWrite, MipmapHint, ShaderStage, TextureUsage\n} from './type';\nimport {\n  BindGroupDescriptor, BindGroupEntry, BindGroupLayoutDescriptor, BindGroupLayoutEntry, BufferDescriptor,\n  DefaultRenderPassDescriptor, ImageCopyExternalImage, ImageCopyTexture, ImageDataLayout, RenderPassDescriptor,\n  RenderPipelineDescriptor, RenderPipelineState, SamplerDescriptor, ShaderDescriptor, TextureDescriptor, TextureView,\n  VertexBufferLayout\n} from './descriptor';\nimport {\n  BindGroup, BindGroupLayout, Buffer, Device, RenderPass, RenderPipeline, Sampler, Shader, Texture\n} from './resource';\nimport { Canvas, WebGL2Feature, WebGL2FeatureNames } from './gl2-type';\nimport {\n  glClearType, glTexelFormat, glTexelSize, glTexelType, hasStencil, indexByteSize, is3DTexture, isDepthStencil,\n  vertexSize, vertexType, vertexNormalized,\n} from './gl-util';\n\n//#region Constants\n\nconst BYTE_MASK = 0xFF;\nconst STENCIL_MASK = 0xFFFFFFFF;\nconst MAX_VERTEX_ATTRIBS = 16;  // TODO: query the actual limit\n\n//#endregion Constants\n\n//#region Types\n\ninterface WebGL2Device extends Device {\n  readonly canvas: Canvas;\n  readonly gl: WebGL2RenderingContext;\n  readonly features: WebGL2Feature;\n\n  pass: WebGL2RenderPass | null;\n  state: WebGL2State;\n}\n\ninterface WebGL2Buffer extends Buffer {\n  readonly gl: WebGL2RenderingContext;\n  readonly glb: WebGLBuffer | null;\n  readonly type: UInt;\n  readonly size: UInt;\n}\n\ninterface WebGL2Texture extends Texture {\n  readonly gl: WebGL2RenderingContext;\n  readonly glt: WebGLTexture | null;\n  readonly glrb: WebGLRenderbuffer | null;\n  readonly type: UInt;\n  readonly width: UInt;\n  readonly height: UInt;\n  readonly depth: UInt;\n  readonly format: UInt;\n  readonly samples: UInt;\n}\n\ninterface WebGL2Sampler extends Sampler {\n  readonly gl: WebGL2RenderingContext;\n  readonly gls: WebGLSampler | null;\n}\n\ninterface WebGL2Shader extends Shader {\n  readonly gl: WebGL2RenderingContext;\n  readonly gls: WebGLShader | null;\n}\n\ninterface WebGL2RenderPass extends RenderPass {\n  readonly gl: WebGL2RenderingContext;\n  readonly glfb: WebGLFramebuffer | null;\n  readonly glrfb: (WebGLFramebuffer | null)[];\n  readonly color: WebGL2Texture[];\n  readonly clearColors: (Color | null | undefined)[];\n  readonly clearColor?: Color | null;\n  readonly clearDepth?: Float;\n  readonly clearStencil?: Float;\n  readonly depth: WebGL2Texture | null;\n}\n\ninterface WebGL2BindGroupLayout extends BindGroupLayout {\n  readonly entries: (BindGroupLayoutEntry & { binding: UInt })[];\n}\n\ninterface WebGL2BindGroup extends BindGroup {\n  readonly entries: (BindGroupEntry & { binding: UInt })[];\n}\n\ninterface WebGL2RenderPipeline extends RenderPipeline {\n  readonly gl: WebGL2RenderingContext;\n  readonly glp: WebGLProgram | null;\n  readonly cache: UniformCache[][];\n  readonly buffers: VertexBufferLayout[];\n  readonly state: WebGL2PipelineState;\n}\n\n//#endregion Types\n\n//#region Device\n\n/**\n * Requests a WebGL2 {@link Device}.\n * @param canvas the canvas to be used\n * @param options WebGL context initialization options\n * @param features WebGL features to enable\n * @returns WebGL2 GPU device instance, or null if WebGL2 is not supported\n */\nexport function requestWebGL2Device(\n  canvas: Canvas, options: WebGLContextAttributes = {}, features: WebGL2Feature = 0\n): Device | null {\n  const gl: WebGL2RenderingContext | null = canvas.getContext('webgl2', options);\n  if (gl) {\n    let enabledFeatures = 0;\n    for (const feature in WebGL2FeatureNames) {\n      if ((features & +feature) && gl.getExtension(WebGL2FeatureNames[+feature])) {\n        enabledFeatures = enabledFeatures | +feature;\n      }\n    }\n    return {\n      canvas, gl, features: enabledFeatures,\n      pass: null,\n      state: initWebGL2State(gl),\n      destroy() {\n        this.gl.deleteFramebuffer(this.state.copyFrameBuffer);\n      }\n    } as WebGL2Device;\n  }\n  return null;\n}\n\n/**\n * Resets the device state.\n * @param device the GPU device\n */\nexport function resetDevice(device: Device): void {\n  (device as WebGL2Device).destroy();\n  (device as WebGL2Device).state = initWebGL2State((device as WebGL2Device).gl);\n}\n\n/**\n * Returns if device context is lost.\n * @param device the GPU device\n * @returns true if device context is lost\n */\nexport function isDeviceLost(device: Device): boolean {\n  return (device as WebGL2Device).gl.isContextLost();\n}\n\n/**\n * Gets the enabled features of the device.\n * @param device the GPU device\n * @returns enabled features bitflag\n */\nexport function getDeviceFeatures(device: Device): WebGL2Feature {\n  return (device as WebGL2Device).features;\n}\n\n//#endregion Device\n\n//#region Buffer\n\n/**\n * Creates a new buffer object.\n * @param device the GPU device\n * @param desc the buffer descriptor\n * @returns new buffer object\n */\nexport function createBuffer(device: Device, desc: BufferDescriptor): Buffer {\n  const type = (desc.usage & BufferUsage.Uniform) ? GLenum.UNIFORM_BUFFER :\n    (desc.usage & BufferUsage.Index) ? GLenum.ELEMENT_ARRAY_BUFFER : GLenum.ARRAY_BUFFER;\n  const usage = (desc.usage & BufferUsage.Stream) ? GLenum.STREAM_DRAW :\n    (desc.usage & BufferUsage.Dynamic) ? GLenum.DYNAMIC_DRAW : GLenum.STATIC_DRAW;\n\n  const glb = (device as WebGL2Device).gl.createBuffer();\n  (device as WebGL2Device).gl.bindBuffer(type, glb);\n  (device as WebGL2Device).gl.bufferData(type, desc.size, usage);\n\n  return {\n    gl: (device as WebGL2Device).gl, glb, type, size: desc.size,\n    destroy(): void {\n      this.gl.deleteBuffer(this.glb);\n    }\n  } as WebGL2Buffer;\n}\n\n//#endregion Buffer\n\n//#region Texture\n\n/**\n * Creates a new texture object.\n * @param device the GPU device\n * @param desc the texture descriptor\n * @returns new texture object\n */\nexport function createTexture(device: Device, desc: TextureDescriptor): Texture {\n  const samples = desc.sampleCount || 1;\n  const type = desc.dimension || GLenum.TEXTURE_2D;\n  const format = desc.format || GLenum.RGBA8;\n  const needTexture = !isDepthStencil(format) || ((desc.usage || 0) & TextureUsage.TextureBinding);\n  const [width, height, _depth] = desc.size || [1, 1, 1];\n  const depth = type === GLenum.TEXTURE_CUBE_MAP ? 6 :\n    type === GLenum.TEXTURE_2D ? 1 : _depth;\n\n  let glt = null;\n  let glrb = null;\n\n  if (samples > 1 || !needTexture) { // MSAA / Depth-stencil renderbuffer\n    // WebGL does not have multisample texture, so renderbuffer is needed to resolve MSAA\n    glrb = (device as WebGL2Device).gl.createRenderbuffer();\n    (device as WebGL2Device).gl.bindRenderbuffer(GLenum.RENDERBUFFER, glrb);\n    if (samples > 1) {\n      (device as WebGL2Device).gl.renderbufferStorageMultisample(GLenum.RENDERBUFFER, samples, format, width, height);\n    } else {\n      (device as WebGL2Device).gl.renderbufferStorage(GLenum.RENDERBUFFER, format, width, height);\n    }\n  }\n\n  if (needTexture) {\n    glt = (device as WebGL2Device).gl.createTexture();\n    (device as WebGL2Device).gl.activeTexture(GLenum.TEXTURE0);\n    (device as WebGL2Device).gl.bindTexture(type, glt);\n\n    if (is3DTexture(type)) {\n      (device as WebGL2Device).gl.texStorage3D(type, desc.mipLevelCount || 1, format, width, height, depth);\n    } else {\n      (device as WebGL2Device).gl.texStorage2D(type, desc.mipLevelCount || 1, format, width, height);\n    }\n  }\n\n  return {\n    gl: (device as WebGL2Device).gl, glt, glrb, type, format, width, height, depth, samples,\n    destroy(): void {\n      this.gl.deleteTexture(this.glt);\n      this.gl.deleteRenderbuffer(this.glrb);\n    }\n  } as WebGL2Texture;\n}\n\n//#endregion Texture\n\n//#region Sampler\n\n/**\n * Creates a new sampler object.\n * @param device the GPU device\n * @param desc the sampler descriptor\n * @returns new sampler object\n */\nexport function createSampler(device: Device, desc: SamplerDescriptor = {}): Sampler {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const gls = (device as WebGL2Device).gl.createSampler()!;\n  let minFilter = desc.minFilter || GLenum.NEAREST;\n  if (desc.mipmapFilter) {\n    if (desc.mipmapFilter === GLenum.NEAREST) {\n      minFilter = minFilter === GLenum.NEAREST ? GLenum.NEAREST_MIPMAP_NEAREST : GLenum.LINEAR_MIPMAP_NEAREST;\n    } else {\n      minFilter = minFilter === GLenum.NEAREST ? GLenum.NEAREST_MIPMAP_LINEAR : GLenum.LINEAR_MIPMAP_LINEAR;\n    }\n  }\n\n  (device as WebGL2Device).gl.samplerParameteri(gls, GLenum.TEXTURE_MIN_FILTER, minFilter);\n  (device as WebGL2Device).gl.samplerParameteri(gls, GLenum.TEXTURE_MAG_FILTER, desc.magFilter || GLenum.NEAREST);\n  (device as WebGL2Device).gl.samplerParameteri(gls, GLenum.TEXTURE_WRAP_S, desc.addressModeU || GLenum.CLAMP_TO_EDGE);\n  (device as WebGL2Device).gl.samplerParameteri(gls, GLenum.TEXTURE_WRAP_T, desc.addressModeV || GLenum.CLAMP_TO_EDGE);\n  (device as WebGL2Device).gl.samplerParameteri(gls, GLenum.TEXTURE_WRAP_R, desc.addressModeW || GLenum.CLAMP_TO_EDGE);\n  (device as WebGL2Device).gl.samplerParameterf(gls, GLenum.TEXTURE_MAX_LOD, desc.lodMaxClamp || 32);\n  (device as WebGL2Device).gl.samplerParameterf(gls, GLenum.TEXTURE_MIN_LOD, desc.lodMinClamp || 0);\n  if (desc.compare) {\n    (device as WebGL2Device).gl.samplerParameterf(gls, GLenum.TEXTURE_COMPARE_MODE, GLenum.COMPARE_REF_TO_TEXTURE);\n    (device as WebGL2Device).gl.samplerParameterf(gls, GLenum.TEXTURE_COMPARE_FUNC, desc.compare);\n  }\n  if ((desc.maxAnisotropy || 1) > 1) {\n    (device as WebGL2Device).gl.samplerParameterf(\n      gls,\n      GLenum.TEXTURE_MAX_ANISOTROPY_EXT,\n      Math.min(desc.maxAnisotropy || 1, (device as WebGL2Device).gl.getParameter(GLenum.MAX_TEXTURE_MAX_ANISOTROPY_EXT))\n    );\n  }\n\n  return {\n    gls,\n    gl: (device as WebGL2Device).gl,\n    destroy(): void {\n      this.gl.deleteSampler(this.gls);\n    }\n  } as WebGL2Sampler;\n}\n\n//#endregion Sampler\n\n//#region Shader\n\n/**\n * Creates a new shader module object.\n * @param device the GPU device\n * @param desc the shader descriptor\n * @returns new shader object\n */\nexport function createShader(device: Device, desc: ShaderDescriptor): Shader {\n  const type = desc.usage === ShaderStage.Vertex ? GLenum.VERTEX_SHADER : GLenum.FRAGMENT_SHADER\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const gls = (device as WebGL2Device).gl.createShader(type)!;\n  (device as WebGL2Device).gl.shaderSource(gls, desc.code);\n  (device as WebGL2Device).gl.compileShader(gls);\n\n  if (MUGL_DEBUG) {\n    console.assert(\n      (device as WebGL2Device).gl.getShaderParameter(gls, GLenum.COMPILE_STATUS) || isDeviceLost(device),\n      `Failed to compile shader: ${(device as WebGL2Device).gl.getShaderInfoLog(gls)}`\n    );\n  }\n\n  return {\n    gl: (device as WebGL2Device).gl,\n    gls,\n    destroy(): void {\n      this.gl.deleteShader(this.gls);\n    }\n  } as WebGL2Shader;\n}\n\n//#endregion Buffer\n\n//#region RenderPass\n\n/**\n * Creates a new render pass object.\n * @param device the GPU device\n * @param desc the render pass descriptor.\n * @returns new render pass\n */\nexport function createRenderPass(device: Device, desc: RenderPassDescriptor = {}): RenderPass {\n  let glfb: WebGLFramebuffer | null = null;\n  const glrfb: (WebGLFramebuffer | null)[] = [];\n  const depth = desc.depthStencil ? (desc.depthStencil.texture as WebGL2Texture) : null;\n  const withStencil = (depth && hasStencil(depth.format)) || false;\n\n  if (desc.colors && desc.colors.length) {\n    // An offscreen pass, need to create a framebuffer with color- and depth attachments\n    glfb = (device as WebGL2Device).gl.createFramebuffer();\n    (device as WebGL2Device).gl.bindFramebuffer(GLenum.FRAMEBUFFER, glfb);\n\n    for (let i = 0; i < desc.colors.length; ++i) {\n      if ((desc.colors[i].view.texture as WebGL2Texture).samples > 1) {\n        // Attach multisample renderbuffer for MSAA offscreen rendering\n        (device as WebGL2Device).gl.framebufferRenderbuffer(GLenum.FRAMEBUFFER, GLenum.COLOR_ATTACHMENT0 + i, GLenum.RENDERBUFFER,\n          (desc.colors[i].view.texture as WebGL2Texture).glrb);\n      } else {\n        framebufferTexture((device as WebGL2Device).gl, GLenum.COLOR_ATTACHMENT0 + i, desc.colors[i].view);\n      }\n    }\n\n    // TODO: [Feature] implement multiview\n    if (desc.colors.length > 1) {\n      (device as WebGL2Device).gl.drawBuffers(desc.colors.map((_, i) => GLenum.COLOR_ATTACHMENT0 + i));\n    }\n\n    // Attach optional depth-stencil buffer to framebuffer\n    if (depth) {\n      if (depth.glrb) { // Use renderbuffer if exist\n        (device as WebGL2Device).gl.framebufferRenderbuffer(GLenum.FRAMEBUFFER, withStencil ? GLenum.DEPTH_STENCIL_ATTACHMENT : GLenum.DEPTH_ATTACHMENT,\n          GLenum.RENDERBUFFER, depth.glrb);\n      } else { // Use depth texture\n        if (MUGL_DEBUG && !isDepthStencil(depth.format)) {\n          console.error('Invalid depth texture format', depth);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        framebufferTexture((device as WebGL2Device).gl, withStencil ? GLenum.DEPTH_STENCIL_ATTACHMENT : GLenum.DEPTH_ATTACHMENT, desc.depthStencil!);\n      }\n    }\n\n    if (MUGL_DEBUG) {\n      console.assert(\n        (device as WebGL2Device).gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || isDeviceLost(device),\n        'Framebuffer completeness check failed'\n      );\n    }\n\n    // WebGL has no support for multisample textures. We will render to MSAA renderbuffers\n    // and blit to the resolve renderbuffers which have textures attached.\n    for (let i = 0; i < desc.colors.length; ++i) {\n      glrfb.push((desc.colors[i].view.texture as WebGL2Texture).samples > 1 ?\n        createResolveFrameBuffer((device as WebGL2Device).gl, GLenum.COLOR_ATTACHMENT0, desc.colors[i].view) : null);\n    }\n    glrfb.push(depth && depth.samples > 1 && depth.glt ?\n      createResolveFrameBuffer((device as WebGL2Device).gl, withStencil ?\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        GLenum.DEPTH_STENCIL_ATTACHMENT : GLenum.DEPTH_ATTACHMENT, desc.depthStencil!) : null);\n  }\n\n  return {\n    gl: (device as WebGL2Device).gl,\n    glfb, glrfb, depth,\n    color: desc.colors ? desc.colors.map((c) => c.view.texture as WebGL2Texture) : [],\n    clearColors: desc.colors ? desc.colors.map((c) => c.clear) : [],\n    clearColor: desc.clearColor,\n    clearDepth: desc.clearDepth,\n    clearStencil: desc.clearStencil,\n    destroy(): void {\n      this.gl.deleteFramebuffer(this.glfb);\n      for (const glrfb of this.glrfb) {\n        this.gl.deleteFramebuffer(glrfb);\n      }\n    }\n  } as WebGL2RenderPass;\n}\n\n//#endregion RenderPass\n\n//#region BindGroup\n\n/**\n * Creates a new pipeline bind group layout object.\n * @param device the GPU device\n * @param desc the bind group layout descriptor\n * @returns new bind group layout object\n */\nexport function createBindGroupLayout(device: Device, desc: BindGroupLayoutDescriptor): BindGroupLayout {\n  return {\n    entries: desc.entries.map((entry, binding) => ({ binding, ...entry })),\n    destroy(): void {\n      // noop\n    }\n  } as WebGL2BindGroupLayout;\n}\n\n/**\n * Creates a new pipeline bind group object.\n * @param device the GPU device\n * @param desc the bind group descriptor\n * @returns new bind group object\n */\nexport function createBindGroup(device: Device, desc: BindGroupDescriptor): BindGroup {\n  return {\n    entries: desc.entries.map((entry, binding) => ({ binding, ...entry })),\n    destroy(): void {\n      // noop\n    }\n  } as WebGL2BindGroup;\n}\n\n//#endregion BindGroup\n\n//#region RenderPipeline\n\n/**\n * Creates a new render pipeline state object.\n * @param device the GPU device\n * @param desc the pipeline descriptor\n * @returns new render pipeline object\n */\nexport function createRenderPipeline(device: Device, desc: RenderPipelineDescriptor): RenderPipeline {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const glp = compileShaderProgram(device, (desc.vertex as WebGL2Shader).gls!, (desc.fragment as WebGL2Shader).gls!);\n  const cache: UniformCache[][] = [];\n  const textureSlots: Record<string, number> = {};\n\n  // Populate uniform cache\n  let bufCount = 0;\n  let texCount = 0;\n  if (desc.bindGroups) {\n    for (let i = 0; i < desc.bindGroups.length; ++i) {\n      const entries = (desc.bindGroups[i] as WebGL2BindGroupLayout).entries;\n      cache.push([]);\n\n      for (let j = 0; j < entries.length; ++j) {\n        const entry = entries[j];\n        let loc = null;\n        let index = GLenum.INVALID_INDEX;\n\n        if (entry.type === BindingType.Buffer) {\n          index = (device as WebGL2Device).gl.getUniformBlockIndex(glp, entry.label);\n          (device as WebGL2Device).gl.uniformBlockBinding(glp, index, bufCount++);\n        } else if (entry.type === BindingType.Texture) {\n          loc = (device as WebGL2Device).gl.getUniformLocation(glp, entry.label);\n          textureSlots[entry.label] = texCount++;\n        }\n\n        cache[i][entry.binding] = {\n          ...entry,\n          loc,\n          index,\n          slot: entry.type === BindingType.Buffer ? bufCount - 1 :\n            entry.type === BindingType.Texture ? texCount - 1 : 0,\n        };\n      }\n    }\n\n    // Sampler needs to use the matching texture slot\n    for (let i = 0; i < desc.bindGroups.length; ++i) {\n      const entries = (desc.bindGroups[i] as WebGL2BindGroupLayout).entries;\n      for (let j = 0; j < entries.length; ++j) {\n        if (entries[j].type === BindingType.Sampler) {\n          if (textureSlots[entries[j].label]) {\n            cache[i][entries[j].binding].slot = textureSlots[entries[j].label];\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    gl: (device as WebGL2Device).gl,\n    glp,\n    buffers: desc.buffers,\n    cache,\n    state: createPipelineState(desc),\n    destroy(): void {\n      this.gl.deleteProgram(this.glp);\n    }\n  } as WebGL2RenderPipeline;\n}\n\n//#endregion RenderPipeline\n\n//#region Read/Write\n\n/**\n * Reads data from a buffer.\n * @param device the GPU device\n * @param buffer the GPU buffer to read from\n * @param out the output CPU buffer\n * @param offset othe byte offset into GPU buffer to begin reading from. Defaults to 0\n * @returns a future\n */\nexport function readBuffer(device: Device, buffer: Buffer, out: Uint8Array, offset: UInt = 0): Future {\n  const future = { done: false };\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  getBufferSubData((device as WebGL2Device).gl, (buffer as WebGL2Buffer).type, (buffer as WebGL2Buffer).glb!, offset, out.byteLength)\n    .then(data => out.set(data))\n    .finally(() => future.done = true);\n  return future;\n}\n\n/**\n * Writes data to a buffer.\n * @param device the GPU device\n * @param buffer the buffer to write to\n * @param data the buffer data\n * @param offset the byte offset into GPU buffer to begin writing to. Defaults to 0\n */\nexport function writeBuffer(device: Device, buffer: Buffer, data: ArrayBufferView, offset: UInt = 0): void {\n  (device as WebGL2Device).gl.bindBuffer((buffer as WebGL2Buffer).type, (buffer as WebGL2Buffer).glb);\n  (device as WebGL2Device).gl.bufferSubData((buffer as WebGL2Buffer).type, offset, data);\n}\n\n/**\n * Copies data from a buffer to another buffer.\n * @param device the GPU device\n * @param src the buffer to read from\n * @param dst the buffer to write to\n * @param size the byte size of the GPU buffer to read. Defaults to the whole buffer\n * @param srcOffset the byte offset into src buffer to begin reading from. Defaults to 0\n * @param dstOffset the byte offset into dst buffer to begin writing to. Defaults to 0\n */\nexport function copyBuffer(\n  device: Device, src: Buffer, dst: Buffer, size: UInt = (src as WebGL2Buffer).size, srcOffset: UInt = 0, dstOffset: UInt = 0\n): void {\n  (device as WebGL2Device).gl.bindBuffer(GLenum.COPY_READ_BUFFER, (src as WebGL2Buffer).glb);\n  (device as WebGL2Device).gl.bindBuffer(GLenum.COPY_WRITE_BUFFER, (dst as WebGL2Buffer).glb);\n  (device as WebGL2Device).gl.copyBufferSubData(GLenum.COPY_READ_BUFFER, GLenum.COPY_WRITE_BUFFER, srcOffset, dstOffset, size);\n}\n\n/**\n * Generates mipmap for a texture.\n * @param device the GPU device\n * @param texture the texture\n * @param hint mipmap quality hint\n */\nexport function generateMipmap(device: Device, texture: Texture, hint: MipmapHint = GLenum.DONT_CARE): void {\n  (device as WebGL2Device).gl.activeTexture(GLenum.TEXTURE0);\n  (device as WebGL2Device).gl.bindTexture((texture as WebGL2Texture).type, (texture as WebGL2Texture).glt);\n  (device as WebGL2Device).gl.hint(GLenum.GENERATE_MIPMAP_HINT, hint);\n  (device as WebGL2Device).gl.generateMipmap((texture as WebGL2Texture).type);\n}\n\n/**\n * Writes subregion of data array to a texture.\n * @param device the GPU device\n * @param texture the texture subregion to write to.\n * @param data the texture data\n * @param layout the data layout\n * @param size the size of the data subregion to write\n */\nexport function writeTexture(\n  device: Device,\n  { texture, mipLevel = 0, origin: [x, y, z] = [0, 0, 0] }: ImageCopyTexture,\n  data: ArrayBufferView,\n  { offset = 0, bytesPerRow, rowsPerImage = 0 }: ImageDataLayout,\n  [width, height, depth]: Extent3D = [(texture as WebGL2Texture).width - x, (texture as WebGL2Texture).height - y, (texture as WebGL2Texture).depth - z]\n): void {\n  const glFormat = glTexelFormat((texture as WebGL2Texture).format);\n  const glType = glTexelType((texture as WebGL2Texture).format);\n  const isCube = (texture as WebGL2Texture).type === GLenum.TEXTURE_CUBE_MAP;\n  const target = isCube ? GLenum.TEXTURE_CUBE_MAP_POSITIVE_X + z : (texture as WebGL2Texture).type;\n\n  (device as WebGL2Device).gl.activeTexture(GLenum.TEXTURE0);\n  (device as WebGL2Device).gl.bindTexture((texture as WebGL2Texture).type, (texture as WebGL2Texture).glt);\n\n  const pixelSize = glTexelSize((texture as WebGL2Texture).format);\n  const imageHeight = rowsPerImage || height;\n  const pixelsPerRow = Math.floor(bytesPerRow / pixelSize);\n  const offsetAligned = offset - offset % bytesPerRow;\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_IMAGE_HEIGHT, imageHeight);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_ROW_LENGTH, pixelsPerRow);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_PIXELS, Math.floor((offset % bytesPerRow) / pixelSize));\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_ROWS, 0);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_IMAGES, 0);\n\n  if (is3DTexture((texture as WebGL2Texture).type)) {\n    (device as WebGL2Device).gl.texSubImage3D(target, mipLevel, x, y, z, width, height, depth, (texture as WebGL2Texture).format, glType, data, offsetAligned);\n  } else if (isCube) {\n    for (let slice = z; slice < z + depth; ++slice) {\n      (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_ROWS, slice * pixelsPerRow * imageHeight);\n      (device as WebGL2Device).gl.texSubImage2D(target + slice, mipLevel, x, y, width, height, glFormat, glType, data, offsetAligned);\n    }\n  } else { // 2D texture\n    (device as WebGL2Device).gl.texSubImage2D(target, mipLevel, x, y, width, height, glFormat, glType, data, offsetAligned);\n  }\n}\n\n/**\n * Uploads an image subregion to a texture.\n * @param device the GPU device\n * @param src the image subregion to write\n * @param dst the texture subregion to write to.\n * @param size the size of image subregion to write\n */\nexport function copyExternalImageToTexture(\n  device: Device,\n  { src, origin: [srcX, srcY] = [0, 0] }: ImageCopyExternalImage,\n  { texture, mipLevel = 0, origin: [x, y, z] = [0, 0, 0] }: ImageCopyTexture,\n  [width, height]: Extent2D = [src.width - srcX, src.height - srcY]\n): void {\n  const glType = glTexelType((texture as WebGL2Texture).format);\n  const isCube = (texture as WebGL2Texture).type === GLenum.TEXTURE_CUBE_MAP;\n  const target = isCube ? GLenum.TEXTURE_CUBE_MAP_POSITIVE_X + z : (texture as WebGL2Texture).type;\n\n  (device as WebGL2Device).gl.activeTexture(GLenum.TEXTURE0);\n  (device as WebGL2Device).gl.bindTexture((texture as WebGL2Texture).type, (texture as WebGL2Texture).glt);\n\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_PIXELS, srcX);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_ROWS, srcY);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_IMAGES, 0);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_IMAGE_HEIGHT, 0);\n\n  if (is3DTexture((texture as WebGL2Texture).type)) {\n    (device as WebGL2Device).gl.texSubImage3D(target, mipLevel, x, y, z, width, height, 1, (texture as WebGL2Texture).format, glType, src);\n  } else {\n    (device as WebGL2Device).gl.texSubImage2D(target, mipLevel, x, y, width, height, glTexelFormat((texture as WebGL2Texture).format), glType, src);\n  }\n}\n\n/**\n * Copies subregion of a texture to another texture.\n * @param device the GPU device\n * @param src the texture subregion to read from.\n * @param dst the texture subregion to write to.\n * @param size the size of the texture subregion to copy\n */\nexport function copyTexture(\n  device: Device,\n  { texture, mipLevel = 0, origin: [x, y, z] = [0, 0, 0] }: ImageCopyTexture,\n  { texture: dstTexture, mipLevel: dstMipLevel = 0, origin: [dstX, dstY, dstZ] = [0, 0, 0] }: ImageCopyTexture,\n  [width, height, depth]: Extent3D = [(texture as WebGL2Texture).width - x, (texture as WebGL2Texture).height - y, (texture as WebGL2Texture).depth - z]\n): void {\n  // Bind dst\n  const isCube = (dstTexture as WebGL2Texture).type === GLenum.TEXTURE_CUBE_MAP;\n  const target = isCube ? GLenum.TEXTURE_CUBE_MAP_POSITIVE_X + dstZ : (dstTexture as WebGL2Texture).type;\n  (device as WebGL2Device).gl.activeTexture(GLenum.TEXTURE0);\n  (device as WebGL2Device).gl.bindTexture((dstTexture as WebGL2Texture).type, (dstTexture as WebGL2Texture).glt);\n\n  // Bind src to framebuffer then copy to dst\n  (device as WebGL2Device).gl.readBuffer(GLenum.COLOR_ATTACHMENT0);\n  (device as WebGL2Device).gl.bindFramebuffer(GLenum.FRAMEBUFFER, (device as WebGL2Device).state.copyFrameBuffer);\n\n  if (is3DTexture((texture as WebGL2Texture).type) || (texture as WebGL2Texture).type === GLenum.TEXTURE_CUBE_MAP) {\n    for (let slice = z; slice < z + depth; ++slice) {  // Copy each slice. TODO: Can be expensive for large 3D textures!\n      framebufferTexture((device as WebGL2Device).gl, GLenum.COLOR_ATTACHMENT0, { texture, mipLevel, slice });\n      if (MUGL_DEBUG) {\n        console.assert(\n          (device as WebGL2Device).gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || (device as WebGL2Device).gl.isContextLost(),\n          'Framebuffer completeness check failed for copyTexture'\n        );\n      }\n      if (is3DTexture((dstTexture as WebGL2Texture).type)) {\n        (device as WebGL2Device).gl.copyTexSubImage3D(target + (isCube ? slice : 0), dstMipLevel, dstX, dstY, dstZ, x, y, width, height);\n      } else {\n        (device as WebGL2Device).gl.copyTexSubImage2D(target + (isCube ? slice : 0), dstMipLevel, dstX, dstY, x, y, width, height);\n      }\n    }\n  } else { // src is 2D texture\n    const slice = 0;\n    framebufferTexture((device as WebGL2Device).gl, GLenum.COLOR_ATTACHMENT0, { texture, mipLevel, slice });\n    if (MUGL_DEBUG) {\n      console.assert(\n        (device as WebGL2Device).gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || (device as WebGL2Device).gl.isContextLost(),\n        'Framebuffer completeness check failed for copyTexture'\n      );\n    }\n    if (is3DTexture((dstTexture as WebGL2Texture).type)) {\n      (device as WebGL2Device).gl.copyTexSubImage3D(target + (isCube ? slice : 0), dstMipLevel, dstX, dstY, dstZ, x, y, width, height);\n    } else {\n      (device as WebGL2Device).gl.copyTexSubImage2D(target + (isCube ? slice : 0), dstMipLevel, dstX, dstY, x, y, width, height);\n    }\n  }\n\n  // Reset to original framebuffer\n  (device as WebGL2Device).gl.bindFramebuffer(\n    GLenum.FRAMEBUFFER,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    (device as WebGL2Device).pass ? (device as WebGL2Device).pass!.glfb : null\n  );\n}\n\n/**\n * Copies subregion of a texture to a buffer.\n * @param device the GPU device\n * @param src the texture subregion to read from.\n * @param dst the buffer to write to\n * @param layout the buffer data layout to use for storing the texture\n * @param size the size of the texture subregion to copy\n */\nexport function copyTextureToBuffer(\n  device: Device,\n  { texture, mipLevel = 0, origin: [x, y, z] = [0, 0, 0] }: ImageCopyTexture,\n  dst: Buffer,\n  { offset = 0, bytesPerRow, rowsPerImage = 0 }: ImageDataLayout,\n  [width, height, depth]: Extent3D = [(texture as WebGL2Texture).width - x, (texture as WebGL2Texture).height - y, (texture as WebGL2Texture).depth - z]\n): void {\n  (device as WebGL2Device).gl.bindBuffer(GLenum.PIXEL_PACK_BUFFER, dst);\n  (device as WebGL2Device).gl.readBuffer(GLenum.COLOR_ATTACHMENT0);\n  (device as WebGL2Device).gl.bindFramebuffer(GLenum.FRAMEBUFFER, (device as WebGL2Device).state.copyFrameBuffer);\n\n  // TODO: validate formats. Not all formats can be read.\n  // See: https://webgl2fundamentals.org/webgl/lessons/webgl-readpixels.html\n  const type = glTexelType((texture as WebGL2Texture).format);\n  const format = glTexelFormat((texture as WebGL2Texture).format);\n  const pixelSize = glTexelSize((texture as WebGL2Texture).format);\n  const imageHeight = rowsPerImage || height;\n  const pixelsPerRow = Math.floor(bytesPerRow / pixelSize);\n  const offsetAligned = offset - offset % bytesPerRow;\n  (device as WebGL2Device).gl.pixelStorei(GLenum.PACK_ROW_LENGTH, pixelsPerRow);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.PACK_SKIP_PIXELS, Math.floor((offset % bytesPerRow) / pixelSize));\n  (device as WebGL2Device).gl.pixelStorei(GLenum.PACK_SKIP_ROWS, 0);\n\n  if (is3DTexture((texture as WebGL2Texture).type) || (texture as WebGL2Texture).type === GLenum.TEXTURE_CUBE_MAP) {\n    for (let slice = z; slice < z + depth; ++slice) {  // Copy each slice. TODO: Can be expensive for large 3D textures!\n      framebufferTexture((device as WebGL2Device).gl, GLenum.COLOR_ATTACHMENT0, { texture, mipLevel, slice });\n      if (MUGL_DEBUG) {\n        console.assert(\n          (device as WebGL2Device).gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || (device as WebGL2Device).gl.isContextLost(),\n          'Framebuffer completeness check failed for copyTexture'\n        );\n      }\n      (device as WebGL2Device).gl.readPixels(x, y, width, height, format, type, offsetAligned + (slice - z) * bytesPerRow * imageHeight);\n    }\n  } else { // src is 2D texture\n    const slice = 0;\n    framebufferTexture((device as WebGL2Device).gl, GLenum.COLOR_ATTACHMENT0, { texture, mipLevel, slice });\n    if (MUGL_DEBUG) {\n      console.assert(\n        (device as WebGL2Device).gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || (device as WebGL2Device).gl.isContextLost(),\n        'Framebuffer completeness check failed for copyTexture'\n      );\n    }\n    (device as WebGL2Device).gl.readPixels(x, y, width, height, format, type, offsetAligned);\n  }\n\n  // Reset to original framebuffer\n  (device as WebGL2Device).gl.bindFramebuffer(\n    GLenum.FRAMEBUFFER,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    (device as WebGL2Device).pass ? (device as WebGL2Device).pass!.glfb : null\n  );\n}\n\n//#endregion Read/Write\n\n//#region Render\n\n/**\n * Starts a render pass.\n * @param device the GPU device\n * @param pass the render pass\n */\nexport function beginRenderPass(device: Device, pass: RenderPass): void {\n  let width = (device as WebGL2Device).gl.drawingBufferWidth;\n  let height = (device as WebGL2Device).gl.drawingBufferHeight;\n  if ((pass as WebGL2RenderPass).color.length) { // Offscreen pass\n    width = (pass as WebGL2RenderPass).color[0].width;\n    height = (pass as WebGL2RenderPass).color[0].height;\n  }\n\n  // Bind the pass framebuffer\n  (device as WebGL2Device).gl.bindFramebuffer(GLenum.FRAMEBUFFER, (pass as WebGL2RenderPass).glfb);\n\n  // Reset viewport and scissor. Necessary for buffer clearing\n  (device as WebGL2Device).gl.viewport(0, 0, width, height);\n  (device as WebGL2Device).gl.depthRange(0, 1);\n  if ((device as WebGL2Device).state.scissor) {\n    (device as WebGL2Device).state.scissor = false;\n    glToggle((device as WebGL2Device).gl, GLenum.SCISSOR_TEST, false);\n  }\n\n  // Clear color/depth/stencil, override masks as necessary to allow clearing\n  /* eslint-disable @typescript-eslint/no-non-null-assertion */\n  let clearMask = 0;\n  if (!isNaN((pass as WebGL2RenderPass).clearDepth!)) {\n    clearMask |= GLenum.DEPTH_BUFFER_BIT;\n    (device as WebGL2Device).gl.clearDepth((pass as WebGL2RenderPass).clearDepth!);\n    applyDepthMask((device as WebGL2Device).gl, (device as WebGL2Device).state.state.depthWrite, true);\n    (device as WebGL2Device).state.state.depthWrite = true;\n  }\n  if (!isNaN((pass as WebGL2RenderPass).clearStencil!)) {\n    clearMask |= GLenum.STENCIL_BUFFER_BIT;\n    (device as WebGL2Device).gl.clearStencil((pass as WebGL2RenderPass).clearStencil!);\n    applyStencilMask((device as WebGL2Device).gl, (device as WebGL2Device).state.state.stencilWriteMask, BYTE_MASK);\n    (device as WebGL2Device).state.state.stencilWriteMask = BYTE_MASK;\n  }\n  applyColorMask((device as WebGL2Device).gl, (device as WebGL2Device).state.state.blendWriteMask, ColorWrite.All);\n  (device as WebGL2Device).state.state.blendWriteMask = ColorWrite.All;\n\n  if ((pass as WebGL2RenderPass).color.length) { // Offscreen pass\n    for (let i = 0; i < (pass as WebGL2RenderPass).color.length; ++i) {\n      if ((pass as WebGL2RenderPass).clearColors[i]) {\n        const type = glClearType((pass as WebGL2RenderPass).color[i].format);\n        if (type === GLenum.INT) {\n          (device as WebGL2Device).gl.clearBufferiv(GLenum.COLOR, i, (pass as WebGL2RenderPass).clearColors[i]!);\n        } else if (type === GLenum.UNSIGNED_INT) {\n          (device as WebGL2Device).gl.clearBufferuiv(GLenum.COLOR, i, (pass as WebGL2RenderPass).clearColors[i]!);\n        } else { // type === GLenum.FLOAT\n          (device as WebGL2Device).gl.clearBufferfv(GLenum.COLOR, i, (pass as WebGL2RenderPass).clearColors[i]!);\n        }\n      }\n    }\n  } else if ((pass as WebGL2RenderPass).clearColor) { // for default pass\n    clearMask |= GLenum.COLOR_BUFFER_BIT;\n    (device as WebGL2Device).gl.clearColor(...(pass as WebGL2RenderPass).clearColor!);\n  }\n  /* eslint-enable @typescript-eslint/no-non-null-assertion */\n\n  if (clearMask) {\n    (device as WebGL2Device).gl.clear(clearMask);\n  }\n\n  (device as WebGL2Device).pass = pass as WebGL2RenderPass;\n}\n\n/**\n * Convenient method to start a default render pass.\n * @param device the GPU device\n * @param desc the render pass descriptor\n */\nexport function beginDefaultPass(device: Device, desc: DefaultRenderPassDescriptor = {}): void {\n  // Unbind any framebuffer\n  (device as WebGL2Device).gl.bindFramebuffer(GLenum.FRAMEBUFFER, null);\n\n  // Reset viewport and scissor. Necessary for buffer clearing\n  (device as WebGL2Device).gl.viewport(0, 0, (device as WebGL2Device).gl.drawingBufferWidth, (device as WebGL2Device).gl.drawingBufferHeight);\n  (device as WebGL2Device).gl.depthRange(0, 1);\n  if ((device as WebGL2Device).state.scissor) {\n    (device as WebGL2Device).state.scissor = false;\n    glToggle((device as WebGL2Device).gl, GLenum.SCISSOR_TEST, false);\n  }\n\n  // Clear color/depth/stencil, override masks as necessary to allow clearing\n  /* eslint-disable @typescript-eslint/no-non-null-assertion */\n  let clearMask = 0;\n  if (!isNaN(desc.clearDepth!)) {\n    clearMask |= GLenum.DEPTH_BUFFER_BIT;\n    (device as WebGL2Device).gl.clearDepth(desc.clearDepth!);\n    applyDepthMask((device as WebGL2Device).gl, (device as WebGL2Device).state.state.depthWrite, true);\n    (device as WebGL2Device).state.state.depthWrite = true;\n  }\n  if (!isNaN(desc.clearStencil!)) {\n    clearMask |= GLenum.STENCIL_BUFFER_BIT;\n    (device as WebGL2Device).gl.clearStencil(desc.clearStencil!);\n    applyStencilMask((device as WebGL2Device).gl, (device as WebGL2Device).state.state.stencilWriteMask, BYTE_MASK);\n    (device as WebGL2Device).state.state.stencilWriteMask = BYTE_MASK;\n  }\n  if (desc.clearColor) {\n    clearMask |= GLenum.COLOR_BUFFER_BIT;\n    (device as WebGL2Device).gl.clearColor(...desc.clearColor!);\n    applyColorMask((device as WebGL2Device).gl, (device as WebGL2Device).state.state.blendWriteMask, ColorWrite.All);\n    (device as WebGL2Device).state.state.blendWriteMask = ColorWrite.All;\n  }\n  /* eslint-enable @typescript-eslint/no-non-null-assertion */\n\n  if (clearMask) {\n    (device as WebGL2Device).gl.clear(clearMask);\n  }\n\n  (device as WebGL2Device).pass = null;\n}\n\n/**\n * Submits the current render pass.\n * @param device the GPU device\n */\nexport function submitRenderPass(device: Device): void {\n  if ((device as WebGL2Device).pass) {\n    // Blit main framebuffer content to MSAA resolve framebuffers so that texture contents are updated\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    for (let i = 0; i < (device as WebGL2Device).pass!.color.length; ++i) {\n      if ((device as WebGL2Device).pass!.glrfb[i]) {\n        blitFramebuffer((device as WebGL2Device).gl, (device as WebGL2Device).pass!.glfb, (device as WebGL2Device).pass!.glrfb[i],\n          (device as WebGL2Device).pass!.color[i], GLenum.COLOR_BUFFER_BIT, GLenum.COLOR_ATTACHMENT0 + i);\n      }\n    }\n    const depthFb = (device as WebGL2Device).pass!.glrfb[(device as WebGL2Device).pass!.glrfb.length - 1];\n    if ((device as WebGL2Device).pass!.depth && depthFb) {\n      blitFramebuffer((device as WebGL2Device).gl, (device as WebGL2Device).pass!.glfb, depthFb,\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        (device as WebGL2Device).pass!.depth!, GLenum.DEPTH_BUFFER_BIT | GLenum.STENCIL_BUFFER_BIT);\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n  (device as WebGL2Device).pass = null;\n}\n\n/**\n * Binds a RenderPipeline to the current render pass.\n * @param device the GPU device\n * @param pipeline the pipeline to bind\n */\nexport function setRenderPipeline(device: Device, pipeline: RenderPipeline): void {\n  // Optimization: pipeline unchanged, skip other updates\n  if ((device as WebGL2Device).state.pipeline === pipeline) {\n    return;\n  }\n\n  // Update shader program\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  if (!(device as WebGL2Device).state.pipeline || (device as WebGL2Device).state.pipeline!.glp !== (pipeline as WebGL2RenderPipeline).glp) {\n    (device as WebGL2Device).gl.useProgram((pipeline as WebGL2RenderPipeline).glp);\n  }\n\n  // Update pipeline state cache\n  applyPipelineState((device as WebGL2Device).gl, (device as WebGL2Device).state.state, (pipeline as WebGL2RenderPipeline).state, (device as WebGL2Device).state.stencilRef);\n  Object.assign((device as WebGL2Device).state.state, (pipeline as WebGL2RenderPipeline).state);\n\n  // Update buffer attributes cache\n  const attribEnabled: UInt[] = []; // Attribute enabled state bit flags (1 = originally enabled, 2 = should be enabled)\n  for (const { attributes } of (device as WebGL2Device).state.buffers) {\n    for (const { ptr } of attributes) {\n      attribEnabled[ptr[0]] = 1; // 1 = originally enabled, should disable if not used\n    }\n  }\n  (device as WebGL2Device).state.buffers = Array((pipeline as WebGL2RenderPipeline).buffers.length);\n  for (let slot = 0; slot < (pipeline as WebGL2RenderPipeline).buffers.length; ++slot) {\n    const { attributes, stride, stepMode = 0 } = (pipeline as WebGL2RenderPipeline).buffers[slot];\n    const bufAttrs: WebGL2Attribute[] = [];\n    (device as WebGL2Device).state.buffers[slot] = {\n      glb: null, attributes: bufAttrs, stride, step: stepMode, offset: 0, instanceOffset: 0\n    };\n    for (const { format, offset, shaderLocation } of attributes) {\n      attribEnabled[shaderLocation] = (attribEnabled[shaderLocation] || 0) + 2; // 2 = should be enabled\n      bufAttrs.push({\n        buffer: slot,\n        ptr: [\n          shaderLocation,\n          vertexSize(format),\n          vertexType(format),\n          vertexNormalized(format),\n          stride,\n          offset\n        ],\n        step: stepMode\n      });\n    }\n  }\n\n  // Enable / disable vertex attributes\n  // attribEnabled: 0 = unused, 1 = originally enabled, now should disable, 2 = originally disabled, should enable, 3 = keep enabled\n  for (let i = 0; i < attribEnabled.length; ++i) {\n    if (attribEnabled[i] === 2) {\n      (device as WebGL2Device).gl.enableVertexAttribArray(i);\n    } else if (attribEnabled[i] === 1) {\n      (device as WebGL2Device).gl.disableVertexAttribArray(i);\n    }\n  }\n\n  // Set pipeline as current\n  (device as WebGL2Device).state.pipeline = pipeline as WebGL2RenderPipeline;\n}\n\n/**\n * Binds an index buffer to the current render pass.\n * @param device the GPU device\n * @param buffer the buffer to bind\n */\nexport function setIndex(device: Device, buffer: Buffer): void {\n  if ((buffer as WebGL2Buffer).glb !== (device as WebGL2Device).state.index) {\n    (device as WebGL2Device).gl.bindBuffer(GLenum.ELEMENT_ARRAY_BUFFER, ((device as WebGL2Device).state.index = (buffer as WebGL2Buffer).glb));\n  }\n}\n\n/**\n * Binds a vertex buffer to a slot in the current render pass.\n * @param device the GPU device\n * @param slot the vertex slot to bind to\n * @param buffer the buffer to bind\n */\nexport function setVertex(device: Device, slot: number, buffer: Buffer, offset: UInt = 0): void {\n  const buf = (device as WebGL2Device).state.buffers[slot];\n  if (buf && (buf.glb !== (buffer as WebGL2Buffer).glb || buf.offset !== offset)) {\n    buf.glb = (buffer as WebGL2Buffer).glb;\n    buf.offset = offset;\n    buf.instanceOffset = 0;\n    vertexAttribs((device as WebGL2Device).gl, buf, offset);\n  }\n}\n\n/**\n * Binds a bind group to the current render pass.\n * @param device the GPU device\n * @param slot the bind group slot to bind to\n * @param bindGorup the bind group to use\n * @param offsets the dynamic offsets for dynamic buffers in this bind group\n */\nexport function setBindGroup(device: Device, slot: UInt, bindGroup: BindGroup, offsets: UIntArray = []): void {\n  if (!(device as WebGL2Device).state.pipeline) {\n    return; // Skipping updates. No effect if pipeline not bound\n  }\n\n  for (let i = 0, offsetIdx = 0; i < (bindGroup as WebGL2BindGroup).entries.length; ++i) {\n    const uniform = (bindGroup as WebGL2BindGroup).entries[i];\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const uniformInfo = (device as WebGL2Device).state.pipeline!.cache[slot] && (device as WebGL2Device).state.pipeline!.cache[slot][uniform.binding];\n    if (!uniformInfo) { // No such uniform\n      if (MUGL_DEBUG) {\n        console.warn(`Undefined uniform binding: ${uniform.binding}, slot: ${slot}`);\n      }\n      continue;\n    }\n\n    if (MUGL_DEBUG) {\n      if (uniform.buffer) {\n        console.assert(uniformInfo.type === BindingType.Buffer,\n          `Cannot bind buffer to uniform: ${uniformInfo.label}, binding: ${uniformInfo.binding}, slot: ${slot}`);\n\n        console.assert((uniform.buffer as WebGL2Buffer).type === GLenum.UNIFORM_BUFFER,\n          `Invalid buffer type bound to uniform buffer: ${uniformInfo.label}, binding: ${uniformInfo.binding}, slot: ${slot}`);\n\n        const dataSize = (device as WebGL2Device).gl.getActiveUniformBlockParameter(\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          (device as WebGL2Device).state.pipeline!.glp!,\n          uniformInfo.index,\n          GLenum.UNIFORM_BLOCK_DATA_SIZE\n        );\n        const alignment = (device as WebGL2Device).gl.getParameter(GLenum.UNIFORM_BUFFER_OFFSET_ALIGNMENT);\n        console.assert((uniform.buffer as WebGL2Buffer).size >= dataSize,\n          `Uniform buffer not large enough: ${uniformInfo.label}, binding: ${uniformInfo.binding}, slot: ${slot}, UNIFORM_BLOCK_DATA_SIZE: ${dataSize}, UNIFORM_BUFFER_OFFSET_ALIGNMENT: ${alignment}, size: ${(uniform.buffer as WebGL2Buffer).size}`);\n      } else if (uniform.texture) {\n        console.assert(uniformInfo.type === BindingType.Texture,\n          `Cannot bind texture to uniform: ${uniformInfo.label}, binding: ${uniformInfo.binding}, slot: ${slot}`);\n      } else if (uniform.sampler) {\n        console.assert(uniformInfo.type === BindingType.Sampler,\n          `Cannot bind sampler to uniform: ${uniformInfo.label}, binding: ${uniformInfo.binding}, slot: ${slot}`);\n      } else {\n        console.assert(false, `Either a buffer, texture, or sampler must be specified: ${uniformInfo.label}, binding: ${uniformInfo.binding}, slot: ${slot}`);\n      }\n    }\n\n    if (uniform.buffer) {\n      let offset = uniform.bufferOffset || 0;\n      if (uniformInfo.bufferDynamicOffset) {\n        offset += offsets[offsetIdx] || 0;\n        ++offsetIdx;\n      }\n\n      (device as WebGL2Device).gl.bindBufferRange(\n        GLenum.UNIFORM_BUFFER,\n        uniformInfo.slot,\n        (uniform.buffer as WebGL2Buffer).glb,\n        offset,\n        uniform.bufferSize || ((uniform.buffer as WebGL2Buffer).size - offset)\n      );\n    } else if (uniform.texture) {\n      (device as WebGL2Device).gl.activeTexture(GLenum.TEXTURE0 + uniformInfo.slot);\n      (device as WebGL2Device).gl.bindTexture((uniform.texture as WebGL2Texture).type, (uniform.texture as WebGL2Texture).glt);\n      (device as WebGL2Device).gl.uniform1i(uniformInfo.loc, uniformInfo.slot);\n    } else if (uniform.sampler) {\n      (device as WebGL2Device).gl.bindSampler(uniformInfo.slot, (uniform.sampler as WebGL2Sampler).gls);\n    }\n  }\n}\n\n/**\n * Submits a draw call in the current render pass.\n * @param device the GPU device\n * @param vertexCount the number of vertices to draw\n * @param instanceCount the number of instances to draw. Defaults to 1\n * @param firstVertex the offset to the first vertex to draw. Defaults to 0\n * @param firstInstance the offset to the first instance to draw. Defaults to 0\n */\nexport function draw(device: Device, vertexCount: number, instanceCount = 1, firstVertex = 0, firstInstance: UInt = 0): void {\n  for (const buf of (device as WebGL2Device).state.buffers) {\n    if (buf.step && buf.instanceOffset !== firstInstance) {\n      buf.instanceOffset = firstInstance;\n      vertexAttribs((device as WebGL2Device).gl, buf, firstInstance * buf.stride);\n    }\n  }\n  (device as WebGL2Device).gl.drawArraysInstanced((device as WebGL2Device).state.state.topology, firstVertex, vertexCount, instanceCount);\n}\n\n/**\n * Submits an indexed draw call in the current render pass.\n * @param device the GPU device\n * @param indexCount the number of vertices to draw\n * @param instanceCount the number of instances to draw. Defaults to 1\n * @param firstVertex the offset to the first vertex to draw. Defaults to 0\n * @param firstInstance the offset to the first instance to draw. Defaults to 0\n */\nexport function drawIndexed(device: Device, indexCount: number, instanceCount = 1, firstIndex = 0, firstInstance: UInt = 0): void {\n  for (const buf of (device as WebGL2Device).state.buffers) {\n    if (buf.step && buf.instanceOffset !== firstInstance) {\n      buf.instanceOffset = firstInstance;\n      vertexAttribs((device as WebGL2Device).gl, buf, firstInstance * buf.stride);\n    }\n  }\n  (device as WebGL2Device).gl.drawElementsInstanced(\n    (device as WebGL2Device).state.state.topology, indexCount, (device as WebGL2Device).state.state.indexFormat,\n    firstIndex * indexByteSize((device as WebGL2Device).state.state.indexFormat), instanceCount\n  );\n}\n\n/**\n * Sets the 3D viewport area for the current render pass.\n * @param device the GPU device\n * @param x x offset\n * @param y y offset\n * @param width width\n * @param height height\n * @param minDepth min depth. Defaults to 0\n * @param maxDepth max depth. Defaults to 1\n */\nexport function setViewport(device: Device, x: number, y: number, width: number, height: number, minDepth = 0, maxDepth = 1): void {\n  (device as WebGL2Device).gl.viewport(x, y, width, height);\n  (device as WebGL2Device).gl.depthRange(minDepth, maxDepth);\n}\n\n/**\n * Sets the scissor rectangle for the current render pass.\n * @param device the GPU device\n * @param x x offset\n * @param y y offset\n * @param width width\n * @param height height\n */\nexport function setScissorRect(device: Device, x: number, y: number, width: number, height: number): void {\n  if (!(device as WebGL2Device).state.scissor) {\n    glToggle((device as WebGL2Device).gl, GLenum.SCISSOR_TEST, true);\n    (device as WebGL2Device).state.scissor = true;\n  }\n  (device as WebGL2Device).gl.scissor(x, y, width, height);\n}\n\n/**\n * Sets the blend-constant color for the current render pass.\n * @param device the GPU device\n * @param color the blend color\n */\nexport function setBlendConst(device: Device, color: Color): void {\n  (device as WebGL2Device).gl.blendColor(...color);\n}\n\n/**\n * Sets the stencil reference value for the current render pass.\n * @param device the GPU device\n * @param ref the stencil reference value.\n */\nexport function setStencilRef(device: Device, ref: UInt): void {\n  if ((device as WebGL2Device).state.stencilRef !== ref) {\n    const { stencilFrontCompare, stencilBackCompare, stencilReadMask } = (device as WebGL2Device).state.state;\n    (device as WebGL2Device).gl.stencilFuncSeparate(GLenum.FRONT, stencilFrontCompare, ref, stencilReadMask);\n    (device as WebGL2Device).gl.stencilFuncSeparate(GLenum.BACK, stencilBackCompare, ref, stencilReadMask);\n    (device as WebGL2Device).state.stencilRef = ref;\n  }\n}\n\n//#endregion Render\n\n//#region Internal Types\n\ninterface WebGL2State {\n  copyFrameBuffer: WebGLFramebuffer | null,\n  buffers: WebGL2BufferAttributes[],\n  state: WebGL2PipelineState;\n  pipeline: WebGL2RenderPipeline | null;\n  index: WebGLBuffer | null;\n  stencilRef: UInt;\n  scissor: boolean;\n}\n\ninterface WebGL2Attribute {\n  buffer: UInt;\n  ptr: [\n    loc: UInt,\n    size: UInt,\n    type: UInt,\n    normalized: boolean,\n    stride: UInt,\n    offset: UInt\n  ];\n  step: UInt;\n}\n\ninterface WebGL2BufferAttributes {\n  glb: WebGLBuffer | null;\n  attributes: WebGL2Attribute[];\n  stride: UInt;\n  step: UInt;\n  offset: UInt;\n  instanceOffset: UInt;\n}\n\ninterface WebGL2PipelineState {\n  topology: UInt;\n  indexFormat: UInt;\n  frontFace: UInt;\n  cullMode: UInt;\n\n  sampleCount: UInt;\n  alphaToCoverage: boolean;\n\n  depth: boolean;\n  depthWrite: boolean;\n  depthFormat: UInt;\n  depthCompare: UInt;\n  depthBias: Float;\n  depthBiasSlopeScale: Float;\n\n  stencil: boolean;\n  stencilFrontCompare: UInt;\n  stencilFrontFailOp: UInt;\n  stencilFrontDepthFailOp: UInt;\n  stencilFrontPassOp: UInt;\n  stencilBackCompare: UInt;\n  stencilBackFailOp: UInt;\n  stencilBackDepthFailOp: UInt;\n  stencilBackPassOp: UInt;\n  stencilReadMask: UInt;\n  stencilWriteMask: UInt;\n\n  blend: boolean;\n  blendWriteMask: UInt;\n  blendColorOp: UInt;\n  blendColorSrcFactor: UInt;\n  blendColorDstFactor: UInt;\n  blendAlphaOp: UInt;\n  blendAlphaSrcFactor: UInt;\n  blendAlphaDstFactor: UInt;\n}\n\n/** An entry of uniform info cache */\ninterface UniformCache {\n  /** Bind group entry name. */\n  label: string;\n  /** Binding location. */\n  binding: UInt;\n  /** The type of binding. */\n  type: BindingType;\n  /** Uniform location. */\n  loc: WebGLUniformLocation | null\n  /** Uniform block index. */\n  index: GLuint;\n  /** Uniform buffer / Texture bind slot ID. */\n  slot: number;\n  /** Dynamic offset uniform buffer. */\n  bufferDynamicOffset?: boolean;\n}\n\n//#endregion Internal Types\n\n//#region Helpers\n\nfunction initWebGL2State(gl: WebGL2RenderingContext): WebGL2State {\n  const state = createPipelineState();\n\n  // Apply the default states\n  gl.blendColor(1, 1, 1, 1);\n  applyPipelineState(gl, state, state, 0, true);\n  for (let i = 0; i < MAX_VERTEX_ATTRIBS; ++i) {\n    gl.disableVertexAttribArray(i);\n  }\n\n  // Default alignment is 4. Use 1 to make byte data texture work.\n  gl.pixelStorei(GLenum.PACK_ALIGNMENT, 1);\n  gl.pixelStorei(GLenum.UNPACK_ALIGNMENT, 1);\n\n  return {\n    copyFrameBuffer: gl.createFramebuffer(),\n    buffers: [],\n    state,\n    pipeline: null,\n    index: null,\n    stencilRef: 0,\n    scissor: false\n  };\n}\n\nfunction compileShaderProgram(device: Device, vertex: WebGLShader, fragment: WebGLShader): WebGLProgram {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const glp = (device as WebGL2Device).gl.createProgram()!;\n  (device as WebGL2Device).gl.attachShader(glp, vertex);\n  (device as WebGL2Device).gl.attachShader(glp, fragment);\n  (device as WebGL2Device).gl.linkProgram(glp);\n  (device as WebGL2Device).gl.deleteShader(vertex);\n  (device as WebGL2Device).gl.deleteShader(fragment);\n\n  if (MUGL_DEBUG) {\n    console.assert(\n      (device as WebGL2Device).gl.getProgramParameter(glp, GLenum.LINK_STATUS) || isDeviceLost(device),\n      `Failed to link program: ${(device as WebGL2Device).gl.getProgramInfoLog(glp)}`\n    );\n  }\n\n  return glp;\n}\n\nfunction framebufferTexture(\n  gl: WebGL2RenderingContext, attachment: GLenum, { texture, slice = 0, mipLevel = 0 }: TextureView\n): void {\n  if (is3DTexture((texture as WebGL2Texture).type)) {\n    gl.framebufferTextureLayer(GLenum.FRAMEBUFFER, attachment, (texture as WebGL2Texture).glt, mipLevel, slice);\n  } else {\n    const texTarget = ((texture as WebGL2Texture).type === GLenum.TEXTURE_CUBE_MAP) ?\n      GLenum.TEXTURE_CUBE_MAP_POSITIVE_X + slice : (texture as WebGL2Texture).type;\n    gl.framebufferTexture2D(GLenum.FRAMEBUFFER, attachment, texTarget, (texture as WebGL2Texture).glt, mipLevel);\n  }\n}\n\nfunction createResolveFrameBuffer(\n  gl: WebGL2RenderingContext, attachment: GLenum, view: TextureView\n): WebGLFramebuffer | null {\n  const fb = gl.createFramebuffer();\n  gl.bindFramebuffer(GLenum.FRAMEBUFFER, fb);\n  framebufferTexture(gl, attachment, view);\n  if (MUGL_DEBUG) {\n    console.assert(\n      gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || gl.isContextLost(),\n      'Framebuffer completeness check failed for MSAA resolve buffer'\n    );\n  }\n  return fb;\n}\n\nfunction blitFramebuffer(\n  gl: WebGL2RenderingContext, from: WebGLFramebuffer | null, to: WebGLFramebuffer | null,\n  tex: WebGL2Texture, mask: number, attachment: UInt = GLenum.COLOR_ATTACHMENT0\n): void {\n  gl.bindFramebuffer(GLenum.READ_FRAMEBUFFER, from);\n  gl.bindFramebuffer(GLenum.DRAW_FRAMEBUFFER, to);\n  gl.readBuffer(attachment);\n  gl.blitFramebuffer(\n    0, 0, tex.width, tex.height,\n    0, 0, tex.width, tex.height,\n    mask, GLenum.NEAREST\n  );\n}\n\nfunction createPipelineState(desc: RenderPipelineState = {}): WebGL2PipelineState {\n  const primitive = desc.primitive || {};\n  const depthStencil = desc.depthStencil || {};\n  const { stencilFront = {}, stencilBack = {} } = depthStencil;\n  const { sampleCount = 1, alphaToCoverage = false } = desc.multisample || {};\n  const targets = desc.targets || {};\n  let blendWriteMask = targets.writeMask || ColorWrite.All;\n  let blendColor = targets.blendColor || {};\n  let blendAlpha = targets.blendColor || {};\n  if (targets.targets && targets.targets[0]) {\n    blendWriteMask = targets.targets[0].writeMask || blendWriteMask;\n    blendColor = targets.targets[0].blendColor || blendColor;\n    blendAlpha = targets.targets[0].blendAlpha || blendAlpha;\n  }\n\n  return {\n    sampleCount,\n    alphaToCoverage,\n\n    topology: primitive.topology || GLenum.TRIANGLES,\n    indexFormat: primitive.indexFormat || GLenum.UNSIGNED_SHORT,\n    frontFace: primitive.frontFace || GLenum.CCW,\n    cullMode: primitive.cullMode || GLenum.NONE,\n\n    depth: !!desc.depthStencil,\n    depthWrite: depthStencil.depthWrite || false,\n    depthFormat: depthStencil.format || GLenum.DEPTH_COMPONENT16,\n    depthCompare: depthStencil.depthCompare || GLenum.ALWAYS,\n    depthBias: depthStencil.depthBias || 0,\n    depthBiasSlopeScale: depthStencil.depthBiasSlopeScale || 0,\n\n    stencil: !!(depthStencil.stencilFront || depthStencil.stencilBack),\n    stencilFrontCompare: stencilFront.compare || GLenum.ALWAYS,\n    stencilFrontFailOp: stencilFront.failOp || GLenum.KEEP,\n    stencilFrontDepthFailOp: stencilFront.depthFailOp || GLenum.KEEP,\n    stencilFrontPassOp: stencilFront.passOp || GLenum.KEEP,\n    stencilBackCompare: stencilBack.compare || GLenum.ALWAYS,\n    stencilBackFailOp: stencilBack.failOp || GLenum.KEEP,\n    stencilBackDepthFailOp: stencilBack.depthFailOp || GLenum.KEEP,\n    stencilBackPassOp: stencilBack.passOp || GLenum.KEEP,\n    stencilReadMask: depthStencil.stencilReadMask || STENCIL_MASK,\n    stencilWriteMask: depthStencil.stencilWriteMask || STENCIL_MASK,\n\n    blend: !!desc.targets,\n    blendWriteMask,\n    blendColorOp: blendColor.operation || GLenum.FUNC_ADD,\n    blendColorSrcFactor: blendColor.srcFactor || GLenum.ONE,\n    blendColorDstFactor: blendColor.dstFactor || GLenum.ZERO,\n    blendAlphaOp: blendAlpha.operation || GLenum.FUNC_ADD,\n    blendAlphaSrcFactor: blendAlpha.srcFactor || GLenum.ONE,\n    blendAlphaDstFactor: blendAlpha.dstFactor || GLenum.ZERO,\n  };\n}\n\nfunction applyPipelineState(\n  gl: WebGL2RenderingContext, prevState: WebGL2PipelineState, state: WebGL2PipelineState, stencilRef = 0,\n  force = false\n): void {\n  // Temporary variables to reuse for performance\n  let b = false, n = 0, n2 = 0, n3 = 0, n4 = 0;\n\n  // 1. Apply primitive state\n  n = state.frontFace;\n  if (force || (prevState.frontFace !== n)) {\n    gl.frontFace(n);\n  }\n  n = state.cullMode;\n  if (force || (prevState.cullMode !== n)) {\n    if ((b = (n !== GLenum.NONE))) {\n      gl.cullFace(n);\n    }\n    glToggle(gl, GLenum.CULL_FACE, b);\n  }\n\n  // 2. Apply multisample state\n  b = state.alphaToCoverage;\n  if (force || (prevState.alphaToCoverage !== b)) {\n    glToggle(gl, GLenum.SAMPLE_ALPHA_TO_COVERAGE, b);\n  }\n\n  // 3. Apply depth state changes\n  b = !!state.depth;\n  if (force || (prevState.depth !== b)) {\n    glToggle(gl, GLenum.DEPTH_TEST, b);\n  }\n\n  if (force || b) {\n    applyDepthMask(gl, prevState.depthWrite, state.depthWrite, force);\n\n    n = state.depthCompare;\n    if (force || (prevState.depthCompare !== n)) {\n      gl.depthFunc(n);\n    }\n  }\n\n  n = state.depthBiasSlopeScale;\n  n2 = state.depthBias;\n  if (force || (prevState.depthBiasSlopeScale !== n) || (prevState.depthBias !== n2)) {\n    glToggle(gl, GLenum.POLYGON_OFFSET_FILL, !(!n && !n2)); // Enable if any of the 2 values is non-zero\n    gl.polygonOffset(n, n2);\n  }\n\n  // 4. Apply stencil state changes\n  b = !!state.stencil;\n  if (force || (prevState.stencil !== b)) {\n    glToggle(gl, GLenum.STENCIL_TEST, b);\n  }\n\n  if (force || b) {\n    n = state.stencilReadMask;\n    b = force || (prevState.stencilReadMask !== n);\n\n    n2 = state.stencilFrontCompare;\n    if (b || (prevState.stencilFrontCompare !== n2)) {\n      gl.stencilFuncSeparate(GLenum.FRONT, n2, stencilRef, n);\n    }\n    n2 = state.stencilBackCompare;\n    if (b || (prevState.stencilBackCompare !== n2)) {\n      gl.stencilFuncSeparate(GLenum.BACK, n2, stencilRef, n);\n    }\n\n    n = state.stencilFrontFailOp;\n    n2 = state.stencilFrontDepthFailOp;\n    n3 = state.stencilFrontPassOp;\n    if (force ||\n      (prevState.stencilFrontFailOp !== n) ||\n      (prevState.stencilFrontDepthFailOp !== n2) ||\n      (prevState.stencilFrontPassOp !== n3)\n    ) {\n      gl.stencilOpSeparate(GLenum.FRONT, n, n2, n3);\n    }\n    n = state.stencilBackFailOp;\n    n2 = state.stencilBackDepthFailOp;\n    n3 = state.stencilBackPassOp;\n    if (force ||\n      (prevState.stencilBackFailOp !== n) ||\n      (prevState.stencilBackDepthFailOp !== n2) ||\n      (prevState.stencilBackPassOp !== n3)\n    ) {\n      gl.stencilOpSeparate(GLenum.BACK, n, n2, n3);\n    }\n\n    applyStencilMask(gl, prevState.stencilWriteMask, state.stencilWriteMask, force);\n  }\n\n  // 5. Apply blend state changes\n  b = state.blend;\n  if (force || (prevState.blend !== b)) {\n    glToggle(gl, GLenum.BLEND, b);\n  }\n\n  if (force || b) {\n    n = state.blendColorSrcFactor;\n    n2 = state.blendColorDstFactor;\n    n3 = state.blendAlphaSrcFactor;\n    n4 = state.blendAlphaDstFactor;\n    if (force ||\n      (prevState.blendColorSrcFactor !== n) ||\n      (prevState.blendColorDstFactor !== n2) ||\n      (prevState.blendAlphaSrcFactor !== n3) ||\n      (prevState.blendAlphaDstFactor !== n4)\n    ) {\n      gl.blendFuncSeparate(n, n2, n3, n4);\n    }\n\n    n = state.blendColorOp;\n    n2 = state.blendAlphaOp;\n    if (force || (prevState.blendColorOp !== n) || (prevState.blendAlphaOp !== n2)) {\n      gl.blendEquationSeparate(n, n2);\n    }\n\n    applyColorMask(gl, prevState.blendWriteMask, state.blendWriteMask, force);\n  }\n}\n\nfunction applyColorMask(gl: WebGL2RenderingContext, prevMask: ColorWrite, mask: ColorWrite, force = false): void {\n  if (force || prevMask !== mask) {\n    gl.colorMask(\n      !!(mask & ColorWrite.Red),\n      !!(mask & ColorWrite.Green),\n      !!(mask & ColorWrite.Blue),\n      !!(mask & ColorWrite.Alpha)\n    );\n  }\n}\n\nfunction applyDepthMask(gl: WebGL2RenderingContext, prevMask: boolean, mask: boolean, force = false): void {\n  if (force || prevMask !== mask) {\n    gl.depthMask(mask);\n  }\n}\n\nfunction applyStencilMask(gl: WebGL2RenderingContext, prevMask: UInt, mask: UInt, force = false): void {\n  if (force || prevMask !== mask) {\n    gl.stencilMask(mask);\n  }\n}\n\nfunction glToggle(gl: WebGL2RenderingContext, flag: GLenum, enable: boolean): void {\n  enable ? gl.enable(flag) : gl.disable(flag);\n}\n\nfunction vertexAttribs(gl: WebGL2RenderingContext, buffer: WebGL2BufferAttributes, offset: UInt): void {\n  gl.bindBuffer(GLenum.ARRAY_BUFFER, buffer.glb);\n  for (let i = 0; i < buffer.attributes.length; ++i) {\n    const { ptr, step } = buffer.attributes[i];\n    const params: [number, number, number, boolean, number, number] = [...ptr];\n    params[5] += offset;\n    gl.vertexAttribPointer(...params);\n    gl.vertexAttribDivisor(ptr[0], step);\n  }\n}\n\nfunction clientWaitAsync(gl: WebGL2RenderingContext, sync: WebGLSync, flags: UInt, interval: UInt): Promise<void> {\n  return new Promise((resolve, reject) => {\n    function test() {\n      const res = gl.clientWaitSync(sync, flags, 0);\n      if (res == GLenum.WAIT_FAILED) {\n        reject();\n      } else if (res == GLenum.TIMEOUT_EXPIRED) {\n        setTimeout(test, interval);\n      } else {\n        resolve();\n      }\n    }\n    test();\n  });\n}\n\nfunction getBufferSubData(gl: WebGL2RenderingContext, target: UInt, buffer: WebGLBuffer, srcOffset: UInt, length: UInt): Promise<Uint8Array> {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const sync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0)!;\n  gl.flush();\n\n  return clientWaitAsync(gl, sync, 0, 10)\n    .finally(() => gl.deleteSync(sync))\n    .then(() => {\n      const data = new Uint8Array(length);\n      gl.bindBuffer(target, buffer);\n      gl.getBufferSubData(target, srcOffset, data, 0, length);\n      return data;\n    });\n}\n\n//#endregion Helpers\n"],"file":"gl2.js"}