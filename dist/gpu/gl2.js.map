{"version":3,"sources":["../../js/gpu/gl2.ts"],"names":["MUGL_DEBUG","MUGL_FINALIZER","GLenum","FutureStatus","BindingType","BufferUsage","ColorWrite","ShaderStage","TextureUsage","WebGL2FeatureNames","glClearType","glTexelFormat","glTexelSize","glTexelType","hasStencil","indexByteSize","is3DTexture","isDepthStencil","vertexSize","vertexType","vertexNormalized","BYTE_MASK","STENCIL_MASK","MAX_VERTEX_ATTRIBS","gpuFinalizer","FinalizationRegistry","finalizer","gl","requestWebGL2Device","canvas","options","features","getContext","enabledFeatures","feature","getExtension","state","initWebGL2State","deleteFramebuffer","copyFrameBuffer","device","pass","destroy","register","resetDevice","Object","assign","isDeviceLost","isContextLost","getDeviceFeatures","createBuffer","desc","type","usage","Uniform","UNIFORM_BUFFER","Index","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","Stream","STREAM_DRAW","Dynamic","DYNAMIC_DRAW","STATIC_DRAW","glb","bindBuffer","bufferData","size","deleteBuffer","buffer","createTexture","samples","sampleCount","dimension","TEXTURE_2D","format","RGBA8","needTexture","TextureBinding","width","height","_depth","depth","TEXTURE_CUBE_MAP","glt","glrb","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","renderbufferStorage","activeTexture","TEXTURE0","bindTexture","texStorage3D","mipLevelCount","texStorage2D","deleteTexture","deleteRenderbuffer","texture","createSampler","gls","minFilter","NEAREST","mipmapFilter","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","samplerParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","magFilter","TEXTURE_WRAP_S","addressModeU","CLAMP_TO_EDGE","TEXTURE_WRAP_T","addressModeV","TEXTURE_WRAP_R","addressModeW","samplerParameterf","TEXTURE_MAX_LOD","lodMaxClamp","TEXTURE_MIN_LOD","lodMinClamp","compare","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","maxAnisotropy","TEXTURE_MAX_ANISOTROPY_EXT","Math","min","getParameter","MAX_TEXTURE_MAX_ANISOTROPY_EXT","deleteSampler","sampler","createShader","Vertex","VERTEX_SHADER","FRAGMENT_SHADER","shaderSource","code","compileShader","console","assert","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","shader","createRenderPass","glfb","glrfb","depthStencil","withStencil","colors","length","createFramebuffer","bindFramebuffer","FRAMEBUFFER","i","view","framebufferRenderbuffer","COLOR_ATTACHMENT0","framebufferTexture","drawBuffers","map","_","DEPTH_STENCIL_ATTACHMENT","DEPTH_ATTACHMENT","error","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","push","createResolveFrameBuffer","fb","color","c","clearColors","clear","clearColor","clearDepth","clearStencil","createBindGroupLayout","entries","entry","binding","createBindGroup","createRenderPipeline","glp","compileShaderProgram","vertex","fragment","cache","textureSlots","bufCount","texCount","bindGroups","j","loc","index","INVALID_INDEX","Buffer","getUniformBlockIndex","label","uniformBlockBinding","Texture","getUniformLocation","slot","Sampler","deleteProgram","pipeline","buffers","createPipelineState","readBuffer","out","offset","future","status","Pending","getBufferSubData","byteLength","then","data","set","Done","Error","writeBuffer","bufferSubData","copyBuffer","src","dst","srcOffset","dstOffset","COPY_READ_BUFFER","COPY_WRITE_BUFFER","copyBufferSubData","generateMipmap","hint","DONT_CARE","GENERATE_MIPMAP_HINT","writeTexture","mipLevel","origin","x","y","z","bytesPerRow","rowsPerImage","glFormat","glType","isCube","target","TEXTURE_CUBE_MAP_POSITIVE_X","pixelSize","imageHeight","pixelsPerRow","floor","offsetAligned","pixelStorei","UNPACK_IMAGE_HEIGHT","UNPACK_ROW_LENGTH","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","UNPACK_SKIP_IMAGES","texSubImage3D","slice","texSubImage2D","copyExternalImageToTexture","srcX","srcY","copyTexture","dstTexture","dstMipLevel","dstX","dstY","dstZ","copyTexSubImage3D","copyTexSubImage2D","copyTextureToBuffer","PIXEL_PACK_BUFFER","PACK_ROW_LENGTH","PACK_SKIP_PIXELS","PACK_SKIP_ROWS","readPixels","beginRenderPass","drawingBufferWidth","drawingBufferHeight","viewport","depthRange","scissor","glToggle","SCISSOR_TEST","clearMask","isNaN","DEPTH_BUFFER_BIT","applyDepthMask","depthWrite","STENCIL_BUFFER_BIT","applyStencilMask","stencilWriteMask","applyColorMask","blendWriteMask","All","INT","clearBufferiv","COLOR","UNSIGNED_INT","clearBufferuiv","clearBufferfv","COLOR_BUFFER_BIT","beginDefaultPass","submitRenderPass","blitFramebuffer","depthFb","setRenderPipeline","useProgram","applyPipelineState","stencilRef","attribEnabled","attributes","ptr","Array","stride","stepMode","bufAttrs","step","instanceOffset","shaderLocation","enableVertexAttribArray","disableVertexAttribArray","setIndex","setVertex","buf","vertexAttribs","setBindGroup","bindGroup","offsets","offsetIdx","uniform","uniformInfo","warn","dataSize","getActiveUniformBlockParameter","UNIFORM_BLOCK_DATA_SIZE","alignment","UNIFORM_BUFFER_OFFSET_ALIGNMENT","bufferOffset","bufferDynamicOffset","bindBufferRange","bufferSize","uniform1i","bindSampler","draw","vertexCount","instanceCount","firstVertex","firstInstance","drawArraysInstanced","topology","drawIndexed","indexCount","firstIndex","drawElementsInstanced","indexFormat","setViewport","minDepth","maxDepth","setScissorRect","setBlendConst","blendColor","setStencilRef","ref","stencilFrontCompare","stencilBackCompare","stencilReadMask","stencilFuncSeparate","FRONT","BACK","PACK_ALIGNMENT","UNPACK_ALIGNMENT","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attachment","framebufferTextureLayer","texTarget","framebufferTexture2D","from","to","tex","mask","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","primitive","stencilFront","stencilBack","alphaToCoverage","multisample","targets","writeMask","blendAlpha","TRIANGLES","UNSIGNED_SHORT","frontFace","CCW","cullMode","NONE","depthFormat","DEPTH_COMPONENT16","depthCompare","ALWAYS","depthBias","depthBiasSlopeScale","stencil","stencilFrontFailOp","failOp","KEEP","stencilFrontDepthFailOp","depthFailOp","stencilFrontPassOp","passOp","stencilBackFailOp","stencilBackDepthFailOp","stencilBackPassOp","blend","blendColorOp","operation","FUNC_ADD","blendColorSrcFactor","srcFactor","ONE","blendColorDstFactor","dstFactor","ZERO","blendAlphaOp","blendAlphaSrcFactor","blendAlphaDstFactor","prevState","force","b","n","n2","n3","n4","cullFace","CULL_FACE","SAMPLE_ALPHA_TO_COVERAGE","DEPTH_TEST","depthFunc","POLYGON_OFFSET_FILL","polygonOffset","STENCIL_TEST","stencilOpSeparate","BLEND","blendFuncSeparate","blendEquationSeparate","prevMask","colorMask","Red","Green","Blue","Alpha","depthMask","stencilMask","flag","enable","disable","params","vertexAttribPointer","vertexAttribDivisor","clientWaitAsync","sync","flags","interval","Promise","resolve","reject","test","res","clientWaitSync","WAIT_FAILED","TIMEOUT_EXPIRED","setTimeout","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","finally","deleteSync","Uint8Array"],"mappings":"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","sourcesContent":["import { MUGL_DEBUG, MUGL_FINALIZER } from '../config';\nimport * as GLenum from './gl-const';\nimport { Color, Extent2D, Extent3D, Float, Future, FutureStatus, UInt, UIntArray } from './primitive';\nimport {\n  BindingType, BufferUsage, ColorWrite, MipmapHint, ShaderStage, TextureUsage\n} from './type';\nimport {\n  BindGroupDescriptor, BindGroupEntry, BindGroupLayoutDescriptor, BindGroupLayoutEntry, BufferDescriptor,\n  DefaultRenderPassDescriptor, ImageCopyExternalImage, ImageCopyTexture, ImageDataLayout, RenderPassDescriptor,\n  RenderPipelineDescriptor, RenderPipelineState, SamplerDescriptor, ShaderDescriptor, TextureDescriptor, TextureView,\n  VertexBufferLayout\n} from './descriptor';\nimport {\n  BindGroup, BindGroupLayout, Buffer, Device, RenderPass, RenderPipeline, Sampler, Shader, Texture\n} from './resource';\nimport { Canvas, WebGL2Feature, WebGL2FeatureNames } from './gl2-type';\nimport {\n  glClearType, glTexelFormat, glTexelSize, glTexelType, hasStencil, indexByteSize, is3DTexture, isDepthStencil,\n  vertexSize, vertexType, vertexNormalized,\n} from './gl-util';\n\n//#region Constants\n\nconst BYTE_MASK = 0xFF;\nconst STENCIL_MASK = 0xFFFFFFFF;\nconst MAX_VERTEX_ATTRIBS = 16;  // TODO: query the actual limit\n\n//#endregion Constants\n\n//#region Types\n\ninterface WebGL2Device extends Device {\n  readonly canvas: Canvas;\n  readonly gl: WebGL2RenderingContext;\n  readonly features: WebGL2Feature;\n\n  pass: WebGL2RenderPass | null;\n  state: WebGL2State;\n}\n\ninterface WebGL2Buffer extends Buffer {\n  readonly gl: WebGL2RenderingContext;\n  readonly glb: WebGLBuffer | null;\n  readonly type: UInt;\n  readonly size: UInt;\n}\n\ninterface WebGL2Texture extends Texture {\n  readonly gl: WebGL2RenderingContext;\n  readonly glt: WebGLTexture | null;\n  readonly glrb: WebGLRenderbuffer | null;\n  readonly type: UInt;\n  readonly width: UInt;\n  readonly height: UInt;\n  readonly depth: UInt;\n  readonly format: UInt;\n  readonly samples: UInt;\n}\n\ninterface WebGL2Sampler extends Sampler {\n  readonly gl: WebGL2RenderingContext;\n  readonly gls: WebGLSampler | null;\n}\n\ninterface WebGL2Shader extends Shader {\n  readonly gl: WebGL2RenderingContext;\n  readonly gls: WebGLShader | null;\n}\n\ninterface WebGL2RenderPass extends RenderPass {\n  readonly gl: WebGL2RenderingContext;\n  readonly glfb: WebGLFramebuffer | null;\n  readonly glrfb: (WebGLFramebuffer | null)[];\n  readonly color: WebGL2Texture[];\n  readonly clearColors: (Color | null | undefined)[];\n  readonly clearColor?: Color | null;\n  readonly clearDepth?: Float;\n  readonly clearStencil?: Float;\n  readonly depth: WebGL2Texture | null;\n}\n\ninterface WebGL2BindGroupLayout extends BindGroupLayout {\n  readonly entries: (BindGroupLayoutEntry & { binding: UInt })[];\n}\n\ninterface WebGL2BindGroup extends BindGroup {\n  readonly entries: (BindGroupEntry & { binding: UInt })[];\n}\n\ninterface WebGL2RenderPipeline extends RenderPipeline {\n  readonly gl: WebGL2RenderingContext;\n  readonly glp: WebGLProgram | null;\n  readonly cache: UniformCache[][];\n  readonly buffers: VertexBufferLayout[];\n  readonly state: WebGL2PipelineState;\n}\n\n//#endregion Types\n\n//#region Device\n\ntype GPUFinalizer = FinalizationRegistry<{\n  finalizer: (gl: WebGL2RenderingContext) => void,\n  gl: WebGL2RenderingContext,\n}>;\n\nlet gpuFinalizer: GPUFinalizer | null = null;\n\nif (MUGL_FINALIZER) {\n  gpuFinalizer = new FinalizationRegistry(({ finalizer, gl }) => {\n    finalizer(gl);\n  });\n}\n\n/**\n * Requests a WebGL2 {@link Device}.\n * @param canvas the canvas to be used\n * @param options WebGL context initialization options\n * @param features WebGL features to enable\n * @returns WebGL2 GPU device instance, or null if WebGL2 is not supported\n */\nexport function requestWebGL2Device(\n  canvas: Canvas, options: WebGLContextAttributes = {}, features: WebGL2Feature = 0\n): Device | null {\n  const gl: WebGL2RenderingContext | null = canvas.getContext('webgl2', options);\n  if (gl) {\n    let enabledFeatures = 0;\n    for (const feature in WebGL2FeatureNames) {\n      if ((features & +feature) && gl.getExtension(WebGL2FeatureNames[+feature])) {\n        enabledFeatures = enabledFeatures | +feature;\n      }\n    }\n    const state = initWebGL2State(gl);\n    const finalizer = (gl: WebGL2RenderingContext) => {\n      gl.deleteFramebuffer(state.copyFrameBuffer);\n    };\n\n    const device = {\n      canvas, gl, state, features: enabledFeatures,\n      pass: null,\n      destroy() {\n        finalizer(this.gl);\n      }\n    } as WebGL2Device;\n\n    if (MUGL_FINALIZER) {\n      (gpuFinalizer as GPUFinalizer).register(device, { finalizer, gl });\n    }\n\n    return device;\n  }\n  return null;\n}\n\n/**\n * Resets the device state.\n * @param device the GPU device\n */\nexport function resetDevice(device: Device): void {\n  (device as WebGL2Device).destroy();\n  Object.assign((device as WebGL2Device).state, initWebGL2State((device as WebGL2Device).gl));\n}\n\n/**\n * Returns if device context is lost.\n * @param device the GPU device\n * @returns true if device context is lost\n */\nexport function isDeviceLost(device: Device): boolean {\n  return (device as WebGL2Device).gl.isContextLost();\n}\n\n/**\n * Gets the enabled features of the device.\n * @param device the GPU device\n * @returns enabled features bitflag\n */\nexport function getDeviceFeatures(device: Device): WebGL2Feature {\n  return (device as WebGL2Device).features;\n}\n\n//#endregion Device\n\n//#region Buffer\n\n/**\n * Creates a new buffer object.\n * @param device the GPU device\n * @param desc the buffer descriptor\n * @returns new buffer object\n */\nexport function createBuffer(device: Device, desc: BufferDescriptor): Buffer {\n  const type = (desc.usage & BufferUsage.Uniform) ? GLenum.UNIFORM_BUFFER :\n    (desc.usage & BufferUsage.Index) ? GLenum.ELEMENT_ARRAY_BUFFER : GLenum.ARRAY_BUFFER;\n  const usage = (desc.usage & BufferUsage.Stream) ? GLenum.STREAM_DRAW :\n    (desc.usage & BufferUsage.Dynamic) ? GLenum.DYNAMIC_DRAW : GLenum.STATIC_DRAW;\n\n  const glb = (device as WebGL2Device).gl.createBuffer();\n  (device as WebGL2Device).gl.bindBuffer(type, glb);\n  (device as WebGL2Device).gl.bufferData(type, desc.size, usage);\n\n  const finalizer = (gl: WebGL2RenderingContext) => {\n    gl.deleteBuffer(glb);\n  };\n\n  const buffer = {\n    gl: (device as WebGL2Device).gl, glb, type, size: desc.size,\n    destroy(): void {\n      finalizer(this.gl);\n    }\n  } as WebGL2Buffer;\n\n  if (MUGL_FINALIZER) {\n    (gpuFinalizer as GPUFinalizer).register(buffer, { finalizer, gl: (device as WebGL2Device).gl });\n  }\n\n  return buffer;\n}\n\n//#endregion Buffer\n\n//#region Texture\n\n/**\n * Creates a new texture object.\n * @param device the GPU device\n * @param desc the texture descriptor\n * @returns new texture object\n */\nexport function createTexture(device: Device, desc: TextureDescriptor): Texture {\n  const samples = desc.sampleCount || 1;\n  const type = desc.dimension || GLenum.TEXTURE_2D;\n  const format = desc.format || GLenum.RGBA8;\n  const needTexture = !isDepthStencil(format) || ((desc.usage || 0) & TextureUsage.TextureBinding);\n  const [width, height, _depth] = desc.size || [1, 1, 1];\n  const depth = type === GLenum.TEXTURE_CUBE_MAP ? 6 :\n    type === GLenum.TEXTURE_2D ? 1 : _depth;\n\n  let glt: WebGLTexture | null = null;\n  let glrb: WebGLRenderbuffer | null = null;\n\n  if (samples > 1 || !needTexture) { // MSAA / Depth-stencil renderbuffer\n    // WebGL does not have multisample texture, so renderbuffer is needed to resolve MSAA\n    glrb = (device as WebGL2Device).gl.createRenderbuffer();\n    (device as WebGL2Device).gl.bindRenderbuffer(GLenum.RENDERBUFFER, glrb);\n    if (samples > 1) {\n      (device as WebGL2Device).gl.renderbufferStorageMultisample(GLenum.RENDERBUFFER, samples, format, width, height);\n    } else {\n      (device as WebGL2Device).gl.renderbufferStorage(GLenum.RENDERBUFFER, format, width, height);\n    }\n  }\n\n  if (needTexture) {\n    glt = (device as WebGL2Device).gl.createTexture();\n    (device as WebGL2Device).gl.activeTexture(GLenum.TEXTURE0);\n    (device as WebGL2Device).gl.bindTexture(type, glt);\n\n    if (is3DTexture(type)) {\n      (device as WebGL2Device).gl.texStorage3D(type, desc.mipLevelCount || 1, format, width, height, depth);\n    } else {\n      (device as WebGL2Device).gl.texStorage2D(type, desc.mipLevelCount || 1, format, width, height);\n    }\n  }\n\n  const finalizer = (gl: WebGL2RenderingContext) => {\n    gl.deleteTexture(glt);\n    gl.deleteRenderbuffer(glrb);\n  };\n\n  const texture = {\n    gl: (device as WebGL2Device).gl, glt, glrb, type, format, width, height, depth, samples,\n    destroy(): void {\n      finalizer(this.gl);\n    }\n  } as WebGL2Texture;\n\n  if (MUGL_FINALIZER) {\n    (gpuFinalizer as GPUFinalizer).register(texture, { finalizer, gl: (device as WebGL2Device).gl });\n  }\n\n  return texture;\n}\n\n//#endregion Texture\n\n//#region Sampler\n\n/**\n * Creates a new sampler object.\n * @param device the GPU device\n * @param desc the sampler descriptor\n * @returns new sampler object\n */\nexport function createSampler(device: Device, desc: SamplerDescriptor = {}): Sampler {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const gls = (device as WebGL2Device).gl.createSampler()!;\n  let minFilter = desc.minFilter || GLenum.NEAREST;\n  if (desc.mipmapFilter) {\n    if (desc.mipmapFilter === GLenum.NEAREST) {\n      minFilter = minFilter === GLenum.NEAREST ? GLenum.NEAREST_MIPMAP_NEAREST : GLenum.LINEAR_MIPMAP_NEAREST;\n    } else {\n      minFilter = minFilter === GLenum.NEAREST ? GLenum.NEAREST_MIPMAP_LINEAR : GLenum.LINEAR_MIPMAP_LINEAR;\n    }\n  }\n\n  (device as WebGL2Device).gl.samplerParameteri(gls, GLenum.TEXTURE_MIN_FILTER, minFilter);\n  (device as WebGL2Device).gl.samplerParameteri(gls, GLenum.TEXTURE_MAG_FILTER, desc.magFilter || GLenum.NEAREST);\n  (device as WebGL2Device).gl.samplerParameteri(gls, GLenum.TEXTURE_WRAP_S, desc.addressModeU || GLenum.CLAMP_TO_EDGE);\n  (device as WebGL2Device).gl.samplerParameteri(gls, GLenum.TEXTURE_WRAP_T, desc.addressModeV || GLenum.CLAMP_TO_EDGE);\n  (device as WebGL2Device).gl.samplerParameteri(gls, GLenum.TEXTURE_WRAP_R, desc.addressModeW || GLenum.CLAMP_TO_EDGE);\n  (device as WebGL2Device).gl.samplerParameterf(gls, GLenum.TEXTURE_MAX_LOD, desc.lodMaxClamp || 32);\n  (device as WebGL2Device).gl.samplerParameterf(gls, GLenum.TEXTURE_MIN_LOD, desc.lodMinClamp || 0);\n  if (desc.compare) {\n    (device as WebGL2Device).gl.samplerParameterf(gls, GLenum.TEXTURE_COMPARE_MODE, GLenum.COMPARE_REF_TO_TEXTURE);\n    (device as WebGL2Device).gl.samplerParameterf(gls, GLenum.TEXTURE_COMPARE_FUNC, desc.compare);\n  }\n  if ((desc.maxAnisotropy || 1) > 1) {\n    (device as WebGL2Device).gl.samplerParameterf(\n      gls,\n      GLenum.TEXTURE_MAX_ANISOTROPY_EXT,\n      Math.min(desc.maxAnisotropy || 1, (device as WebGL2Device).gl.getParameter(GLenum.MAX_TEXTURE_MAX_ANISOTROPY_EXT))\n    );\n  }\n\n  const finalizer = (gl: WebGL2RenderingContext) => {\n    gl.deleteSampler(gls);\n  };\n\n  const sampler = {\n    gls,\n    gl: (device as WebGL2Device).gl,\n    destroy(): void {\n      finalizer(this.gl);\n    }\n  } as WebGL2Sampler;\n\n  if (MUGL_FINALIZER) {\n    (gpuFinalizer as GPUFinalizer).register(sampler, { finalizer, gl: (device as WebGL2Device).gl });\n  }\n\n  return sampler;\n}\n\n//#endregion Sampler\n\n//#region Shader\n\n/**\n * Creates a new shader module object.\n * @param device the GPU device\n * @param desc the shader descriptor\n * @returns new shader object\n */\nexport function createShader(device: Device, desc: ShaderDescriptor): Shader {\n  const type = desc.usage === ShaderStage.Vertex ? GLenum.VERTEX_SHADER : GLenum.FRAGMENT_SHADER\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const gls = (device as WebGL2Device).gl.createShader(type)!;\n  (device as WebGL2Device).gl.shaderSource(gls, desc.code);\n  (device as WebGL2Device).gl.compileShader(gls);\n\n  if (MUGL_DEBUG) {\n    console.assert(\n      (device as WebGL2Device).gl.getShaderParameter(gls, GLenum.COMPILE_STATUS) || isDeviceLost(device),\n      `Failed to compile shader: ${(device as WebGL2Device).gl.getShaderInfoLog(gls)}`\n    );\n  }\n\n  const finalizer = (gl: WebGL2RenderingContext) => {\n    gl.deleteShader(gls);\n  };\n\n  const shader = {\n    gl: (device as WebGL2Device).gl,\n    gls,\n    destroy(): void {\n      finalizer(this.gl);\n    }\n  } as WebGL2Shader;\n\n  if (MUGL_FINALIZER) {\n    (gpuFinalizer as GPUFinalizer).register(shader, { finalizer, gl: (device as WebGL2Device).gl });\n  }\n\n  return shader;\n}\n\n//#endregion Buffer\n\n//#region RenderPass\n\n/**\n * Creates a new render pass object.\n * @param device the GPU device\n * @param desc the render pass descriptor.\n * @returns new render pass\n */\nexport function createRenderPass(device: Device, desc: RenderPassDescriptor = {}): RenderPass {\n  let glfb: WebGLFramebuffer | null = null;\n  const glrfb: (WebGLFramebuffer | null)[] = [];\n  const depth = desc.depthStencil ? (desc.depthStencil.texture as WebGL2Texture) : null;\n  const withStencil = (depth && hasStencil(depth.format)) || false;\n\n  if (desc.colors && desc.colors.length) {\n    // An offscreen pass, need to create a framebuffer with color- and depth attachments\n    glfb = (device as WebGL2Device).gl.createFramebuffer();\n    (device as WebGL2Device).gl.bindFramebuffer(GLenum.FRAMEBUFFER, glfb);\n\n    for (let i = 0; i < desc.colors.length; ++i) {\n      if ((desc.colors[i].view.texture as WebGL2Texture).samples > 1) {\n        // Attach multisample renderbuffer for MSAA offscreen rendering\n        (device as WebGL2Device).gl.framebufferRenderbuffer(GLenum.FRAMEBUFFER, GLenum.COLOR_ATTACHMENT0 + i, GLenum.RENDERBUFFER,\n          (desc.colors[i].view.texture as WebGL2Texture).glrb);\n      } else {\n        framebufferTexture((device as WebGL2Device).gl, GLenum.COLOR_ATTACHMENT0 + i, desc.colors[i].view);\n      }\n    }\n\n    // TODO: [Feature] implement multiview\n    if (desc.colors.length > 1) {\n      (device as WebGL2Device).gl.drawBuffers(desc.colors.map((_, i) => GLenum.COLOR_ATTACHMENT0 + i));\n    }\n\n    // Attach optional depth-stencil buffer to framebuffer\n    if (depth) {\n      if (depth.glrb) { // Use renderbuffer if exist\n        (device as WebGL2Device).gl.framebufferRenderbuffer(GLenum.FRAMEBUFFER, withStencil ? GLenum.DEPTH_STENCIL_ATTACHMENT : GLenum.DEPTH_ATTACHMENT,\n          GLenum.RENDERBUFFER, depth.glrb);\n      } else { // Use depth texture\n        if (MUGL_DEBUG && !isDepthStencil(depth.format)) {\n          console.error('Invalid depth texture format', depth);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        framebufferTexture((device as WebGL2Device).gl, withStencil ? GLenum.DEPTH_STENCIL_ATTACHMENT : GLenum.DEPTH_ATTACHMENT, desc.depthStencil!);\n      }\n    }\n\n    if (MUGL_DEBUG) {\n      console.assert(\n        (device as WebGL2Device).gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || isDeviceLost(device),\n        'Framebuffer completeness check failed'\n      );\n    }\n\n    // WebGL has no support for multisample textures. We will render to MSAA renderbuffers\n    // and blit to the resolve renderbuffers which have textures attached.\n    for (let i = 0; i < desc.colors.length; ++i) {\n      glrfb.push((desc.colors[i].view.texture as WebGL2Texture).samples > 1 ?\n        createResolveFrameBuffer((device as WebGL2Device).gl, GLenum.COLOR_ATTACHMENT0, desc.colors[i].view) : null);\n    }\n    glrfb.push(depth && depth.samples > 1 && depth.glt ?\n      createResolveFrameBuffer((device as WebGL2Device).gl, withStencil ?\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        GLenum.DEPTH_STENCIL_ATTACHMENT : GLenum.DEPTH_ATTACHMENT, desc.depthStencil!) : null);\n  }\n\n  const finalizer = (gl: WebGL2RenderingContext) => {\n    gl.deleteFramebuffer(glfb);\n    for (const fb of glrfb) {\n      gl.deleteFramebuffer(fb);\n    }\n  };\n\n  const pass = {\n    gl: (device as WebGL2Device).gl,\n    glfb, glrfb, depth,\n    color: desc.colors ? desc.colors.map((c) => c.view.texture as WebGL2Texture) : [],\n    clearColors: desc.colors ? desc.colors.map((c) => c.clear) : [],\n    clearColor: desc.clearColor,\n    clearDepth: desc.clearDepth,\n    clearStencil: desc.clearStencil,\n    destroy(): void {\n      finalizer(this.gl);\n    }\n  } as WebGL2RenderPass;\n\n  if (MUGL_FINALIZER) {\n    (gpuFinalizer as GPUFinalizer).register(pass, { finalizer, gl: (device as WebGL2Device).gl });\n  }\n\n  return pass;\n}\n\n//#endregion RenderPass\n\n//#region BindGroup\n\n/**\n * Creates a new pipeline bind group layout object.\n * @param device the GPU device\n * @param desc the bind group layout descriptor\n * @returns new bind group layout object\n */\nexport function createBindGroupLayout(device: Device, desc: BindGroupLayoutDescriptor): BindGroupLayout {\n  return {\n    entries: desc.entries.map((entry, binding) => ({ binding, ...entry })),\n    destroy(): void {\n      // noop\n    }\n  } as WebGL2BindGroupLayout;\n}\n\n/**\n * Creates a new pipeline bind group object.\n * @param device the GPU device\n * @param desc the bind group descriptor\n * @returns new bind group object\n */\nexport function createBindGroup(device: Device, desc: BindGroupDescriptor): BindGroup {\n  return {\n    entries: desc.entries.map((entry, binding) => ({ binding, ...entry })),\n    destroy(): void {\n      // noop\n    }\n  } as WebGL2BindGroup;\n}\n\n//#endregion BindGroup\n\n//#region RenderPipeline\n\n/**\n * Creates a new render pipeline state object.\n * @param device the GPU device\n * @param desc the pipeline descriptor\n * @returns new render pipeline object\n */\nexport function createRenderPipeline(device: Device, desc: RenderPipelineDescriptor): RenderPipeline {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const glp = compileShaderProgram(device, (desc.vertex as WebGL2Shader).gls!, (desc.fragment as WebGL2Shader).gls!);\n  const cache: UniformCache[][] = [];\n  const textureSlots: Record<string, number> = {};\n\n  // Populate uniform cache\n  let bufCount = 0;\n  let texCount = 0;\n  if (desc.bindGroups) {\n    for (let i = 0; i < desc.bindGroups.length; ++i) {\n      const entries = (desc.bindGroups[i] as WebGL2BindGroupLayout).entries;\n      cache.push([]);\n\n      for (let j = 0; j < entries.length; ++j) {\n        const entry = entries[j];\n        let loc = null;\n        let index = GLenum.INVALID_INDEX;\n\n        if (entry.type === BindingType.Buffer) {\n          index = (device as WebGL2Device).gl.getUniformBlockIndex(glp, entry.label);\n          (device as WebGL2Device).gl.uniformBlockBinding(glp, index, bufCount++);\n        } else if (entry.type === BindingType.Texture) {\n          loc = (device as WebGL2Device).gl.getUniformLocation(glp, entry.label);\n          textureSlots[entry.label] = texCount++;\n        }\n\n        cache[i][entry.binding] = {\n          ...entry,\n          loc,\n          index,\n          slot: entry.type === BindingType.Buffer ? bufCount - 1 :\n            entry.type === BindingType.Texture ? texCount - 1 : 0,\n        };\n      }\n    }\n\n    // Sampler needs to use the matching texture slot\n    for (let i = 0; i < desc.bindGroups.length; ++i) {\n      const entries = (desc.bindGroups[i] as WebGL2BindGroupLayout).entries;\n      for (let j = 0; j < entries.length; ++j) {\n        if (entries[j].type === BindingType.Sampler) {\n          if (textureSlots[entries[j].label]) {\n            cache[i][entries[j].binding].slot = textureSlots[entries[j].label];\n          }\n        }\n      }\n    }\n  }\n\n  const finalizer = (gl: WebGL2RenderingContext) => {\n    gl.deleteProgram(glp);\n  };\n\n  const pipeline = {\n    gl: (device as WebGL2Device).gl,\n    glp,\n    buffers: desc.buffers,\n    cache,\n    state: createPipelineState(desc),\n    destroy(): void {\n      finalizer(this.gl);\n    }\n  } as WebGL2RenderPipeline;\n\n\n  if (MUGL_FINALIZER) {\n    (gpuFinalizer as GPUFinalizer).register(pipeline, { finalizer, gl: (device as WebGL2Device).gl });\n  }\n\n  return pipeline;\n}\n\n//#endregion RenderPipeline\n\n//#region Read/Write\n\n/**\n * Reads data from a buffer.\n * @param device the GPU device\n * @param buffer the GPU buffer to read from\n * @param out the output CPU buffer\n * @param offset othe byte offset into GPU buffer to begin reading from. Defaults to 0\n * @returns a future\n */\nexport function readBuffer(device: Device, buffer: Buffer, out: Uint8Array, offset: UInt = 0): Future {\n  const future = { status: FutureStatus.Pending };\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  getBufferSubData((device as WebGL2Device).gl, (buffer as WebGL2Buffer).type, (buffer as WebGL2Buffer).glb!, offset, out.byteLength)\n    .then(\n      data => {\n        out.set(data);\n        future.status = FutureStatus.Done;\n      },\n      () => (future.status = FutureStatus.Error)\n    );\n  return future;\n}\n\n/**\n * Writes data to a buffer.\n * @param device the GPU device\n * @param buffer the buffer to write to\n * @param data the buffer data\n * @param offset the byte offset into GPU buffer to begin writing to. Defaults to 0\n */\nexport function writeBuffer(device: Device, buffer: Buffer, data: ArrayBufferView, offset: UInt = 0): void {\n  (device as WebGL2Device).gl.bindBuffer((buffer as WebGL2Buffer).type, (buffer as WebGL2Buffer).glb);\n  (device as WebGL2Device).gl.bufferSubData((buffer as WebGL2Buffer).type, offset, data);\n}\n\n/**\n * Copies data from a buffer to another buffer.\n * @param device the GPU device\n * @param src the buffer to read from\n * @param dst the buffer to write to\n * @param size the byte size of the GPU buffer to read. Defaults to the whole buffer\n * @param srcOffset the byte offset into src buffer to begin reading from. Defaults to 0\n * @param dstOffset the byte offset into dst buffer to begin writing to. Defaults to 0\n */\nexport function copyBuffer(\n  device: Device, src: Buffer, dst: Buffer, size: UInt = (src as WebGL2Buffer).size, srcOffset: UInt = 0, dstOffset: UInt = 0\n): void {\n  (device as WebGL2Device).gl.bindBuffer(GLenum.COPY_READ_BUFFER, (src as WebGL2Buffer).glb);\n  (device as WebGL2Device).gl.bindBuffer(GLenum.COPY_WRITE_BUFFER, (dst as WebGL2Buffer).glb);\n  (device as WebGL2Device).gl.copyBufferSubData(GLenum.COPY_READ_BUFFER, GLenum.COPY_WRITE_BUFFER, srcOffset, dstOffset, size);\n}\n\n/**\n * Generates mipmap for a texture.\n * @param device the GPU device\n * @param texture the texture\n * @param hint mipmap quality hint\n */\nexport function generateMipmap(device: Device, texture: Texture, hint: MipmapHint = GLenum.DONT_CARE): void {\n  (device as WebGL2Device).gl.activeTexture(GLenum.TEXTURE0);\n  (device as WebGL2Device).gl.bindTexture((texture as WebGL2Texture).type, (texture as WebGL2Texture).glt);\n  (device as WebGL2Device).gl.hint(GLenum.GENERATE_MIPMAP_HINT, hint);\n  (device as WebGL2Device).gl.generateMipmap((texture as WebGL2Texture).type);\n}\n\n/**\n * Writes subregion of data array to a texture.\n * @param device the GPU device\n * @param texture the texture subregion to write to.\n * @param data the texture data\n * @param layout the data layout\n * @param size the size of the data subregion to write\n */\nexport function writeTexture(\n  device: Device,\n  { texture, mipLevel = 0, origin: [x, y, z] = [0, 0, 0] }: ImageCopyTexture,\n  data: ArrayBufferView,\n  { offset = 0, bytesPerRow, rowsPerImage = 0 }: ImageDataLayout,\n  [width, height, depth]: Extent3D = [(texture as WebGL2Texture).width - x, (texture as WebGL2Texture).height - y, (texture as WebGL2Texture).depth - z]\n): void {\n  const glFormat = glTexelFormat((texture as WebGL2Texture).format);\n  const glType = glTexelType((texture as WebGL2Texture).format);\n  const isCube = (texture as WebGL2Texture).type === GLenum.TEXTURE_CUBE_MAP;\n  const target = isCube ? GLenum.TEXTURE_CUBE_MAP_POSITIVE_X + z : (texture as WebGL2Texture).type;\n\n  (device as WebGL2Device).gl.activeTexture(GLenum.TEXTURE0);\n  (device as WebGL2Device).gl.bindTexture((texture as WebGL2Texture).type, (texture as WebGL2Texture).glt);\n\n  const pixelSize = glTexelSize((texture as WebGL2Texture).format);\n  const imageHeight = rowsPerImage || height;\n  const pixelsPerRow = Math.floor(bytesPerRow / pixelSize);\n  const offsetAligned = offset - offset % bytesPerRow;\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_IMAGE_HEIGHT, imageHeight);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_ROW_LENGTH, pixelsPerRow);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_PIXELS, Math.floor((offset % bytesPerRow) / pixelSize));\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_ROWS, 0);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_IMAGES, 0);\n\n  if (is3DTexture((texture as WebGL2Texture).type)) {\n    (device as WebGL2Device).gl.texSubImage3D(target, mipLevel, x, y, z, width, height, depth, (texture as WebGL2Texture).format, glType, data, offsetAligned);\n  } else if (isCube) {\n    for (let slice = z; slice < z + depth; ++slice) {\n      (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_ROWS, slice * pixelsPerRow * imageHeight);\n      (device as WebGL2Device).gl.texSubImage2D(target + slice, mipLevel, x, y, width, height, glFormat, glType, data, offsetAligned);\n    }\n  } else { // 2D texture\n    (device as WebGL2Device).gl.texSubImage2D(target, mipLevel, x, y, width, height, glFormat, glType, data, offsetAligned);\n  }\n}\n\n/**\n * Uploads an image subregion to a texture.\n * @param device the GPU device\n * @param src the image subregion to write\n * @param dst the texture subregion to write to.\n * @param size the size of image subregion to write\n */\nexport function copyExternalImageToTexture(\n  device: Device,\n  { src, origin: [srcX, srcY] = [0, 0] }: ImageCopyExternalImage,\n  { texture, mipLevel = 0, origin: [x, y, z] = [0, 0, 0] }: ImageCopyTexture,\n  [width, height]: Extent2D = [src.width - srcX, src.height - srcY]\n): void {\n  const glType = glTexelType((texture as WebGL2Texture).format);\n  const isCube = (texture as WebGL2Texture).type === GLenum.TEXTURE_CUBE_MAP;\n  const target = isCube ? GLenum.TEXTURE_CUBE_MAP_POSITIVE_X + z : (texture as WebGL2Texture).type;\n\n  (device as WebGL2Device).gl.activeTexture(GLenum.TEXTURE0);\n  (device as WebGL2Device).gl.bindTexture((texture as WebGL2Texture).type, (texture as WebGL2Texture).glt);\n\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_PIXELS, srcX);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_ROWS, srcY);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_IMAGES, 0);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_IMAGE_HEIGHT, 0);\n\n  if (is3DTexture((texture as WebGL2Texture).type)) {\n    (device as WebGL2Device).gl.texSubImage3D(target, mipLevel, x, y, z, width, height, 1, (texture as WebGL2Texture).format, glType, src);\n  } else {\n    (device as WebGL2Device).gl.texSubImage2D(target, mipLevel, x, y, width, height, glTexelFormat((texture as WebGL2Texture).format), glType, src);\n  }\n}\n\n/**\n * Copies subregion of a texture to another texture.\n * @param device the GPU device\n * @param src the texture subregion to read from.\n * @param dst the texture subregion to write to.\n * @param size the size of the texture subregion to copy\n */\nexport function copyTexture(\n  device: Device,\n  { texture, mipLevel = 0, origin: [x, y, z] = [0, 0, 0] }: ImageCopyTexture,\n  { texture: dstTexture, mipLevel: dstMipLevel = 0, origin: [dstX, dstY, dstZ] = [0, 0, 0] }: ImageCopyTexture,\n  [width, height, depth]: Extent3D = [(texture as WebGL2Texture).width - x, (texture as WebGL2Texture).height - y, (texture as WebGL2Texture).depth - z]\n): void {\n  // Bind dst\n  const isCube = (dstTexture as WebGL2Texture).type === GLenum.TEXTURE_CUBE_MAP;\n  const target = isCube ? GLenum.TEXTURE_CUBE_MAP_POSITIVE_X + dstZ : (dstTexture as WebGL2Texture).type;\n  (device as WebGL2Device).gl.activeTexture(GLenum.TEXTURE0);\n  (device as WebGL2Device).gl.bindTexture((dstTexture as WebGL2Texture).type, (dstTexture as WebGL2Texture).glt);\n\n  // Bind src to framebuffer then copy to dst\n  (device as WebGL2Device).gl.readBuffer(GLenum.COLOR_ATTACHMENT0);\n  (device as WebGL2Device).gl.bindFramebuffer(GLenum.FRAMEBUFFER, (device as WebGL2Device).state.copyFrameBuffer);\n\n  if (is3DTexture((texture as WebGL2Texture).type) || (texture as WebGL2Texture).type === GLenum.TEXTURE_CUBE_MAP) {\n    for (let slice = z; slice < z + depth; ++slice) {  // Copy each slice. TODO: Can be expensive for large 3D textures!\n      framebufferTexture((device as WebGL2Device).gl, GLenum.COLOR_ATTACHMENT0, { texture, mipLevel, slice });\n      if (MUGL_DEBUG) {\n        console.assert(\n          (device as WebGL2Device).gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || (device as WebGL2Device).gl.isContextLost(),\n          'Framebuffer completeness check failed for copyTexture'\n        );\n      }\n      if (is3DTexture((dstTexture as WebGL2Texture).type)) {\n        (device as WebGL2Device).gl.copyTexSubImage3D(target + (isCube ? slice : 0), dstMipLevel, dstX, dstY, dstZ, x, y, width, height);\n      } else {\n        (device as WebGL2Device).gl.copyTexSubImage2D(target + (isCube ? slice : 0), dstMipLevel, dstX, dstY, x, y, width, height);\n      }\n    }\n  } else { // src is 2D texture\n    const slice = 0;\n    framebufferTexture((device as WebGL2Device).gl, GLenum.COLOR_ATTACHMENT0, { texture, mipLevel, slice });\n    if (MUGL_DEBUG) {\n      console.assert(\n        (device as WebGL2Device).gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || (device as WebGL2Device).gl.isContextLost(),\n        'Framebuffer completeness check failed for copyTexture'\n      );\n    }\n    if (is3DTexture((dstTexture as WebGL2Texture).type)) {\n      (device as WebGL2Device).gl.copyTexSubImage3D(target + (isCube ? slice : 0), dstMipLevel, dstX, dstY, dstZ, x, y, width, height);\n    } else {\n      (device as WebGL2Device).gl.copyTexSubImage2D(target + (isCube ? slice : 0), dstMipLevel, dstX, dstY, x, y, width, height);\n    }\n  }\n\n  // Reset to original framebuffer\n  (device as WebGL2Device).gl.bindFramebuffer(\n    GLenum.FRAMEBUFFER,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    (device as WebGL2Device).pass ? (device as WebGL2Device).pass!.glfb : null\n  );\n}\n\n/**\n * Copies subregion of a texture to a buffer.\n * @param device the GPU device\n * @param src the texture subregion to read from.\n * @param dst the buffer to write to\n * @param layout the buffer data layout to use for storing the texture\n * @param size the size of the texture subregion to copy\n */\nexport function copyTextureToBuffer(\n  device: Device,\n  { texture, mipLevel = 0, origin: [x, y, z] = [0, 0, 0] }: ImageCopyTexture,\n  dst: Buffer,\n  { offset = 0, bytesPerRow, rowsPerImage = 0 }: ImageDataLayout,\n  [width, height, depth]: Extent3D = [(texture as WebGL2Texture).width - x, (texture as WebGL2Texture).height - y, (texture as WebGL2Texture).depth - z]\n): void {\n  (device as WebGL2Device).gl.bindBuffer(GLenum.PIXEL_PACK_BUFFER, dst);\n  (device as WebGL2Device).gl.readBuffer(GLenum.COLOR_ATTACHMENT0);\n  (device as WebGL2Device).gl.bindFramebuffer(GLenum.FRAMEBUFFER, (device as WebGL2Device).state.copyFrameBuffer);\n\n  // TODO: validate formats. Not all formats can be read.\n  // See: https://webgl2fundamentals.org/webgl/lessons/webgl-readpixels.html\n  const type = glTexelType((texture as WebGL2Texture).format);\n  const format = glTexelFormat((texture as WebGL2Texture).format);\n  const pixelSize = glTexelSize((texture as WebGL2Texture).format);\n  const imageHeight = rowsPerImage || height;\n  const pixelsPerRow = Math.floor(bytesPerRow / pixelSize);\n  const offsetAligned = offset - offset % bytesPerRow;\n  (device as WebGL2Device).gl.pixelStorei(GLenum.PACK_ROW_LENGTH, pixelsPerRow);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.PACK_SKIP_PIXELS, Math.floor((offset % bytesPerRow) / pixelSize));\n  (device as WebGL2Device).gl.pixelStorei(GLenum.PACK_SKIP_ROWS, 0);\n\n  if (is3DTexture((texture as WebGL2Texture).type) || (texture as WebGL2Texture).type === GLenum.TEXTURE_CUBE_MAP) {\n    for (let slice = z; slice < z + depth; ++slice) {  // Copy each slice. TODO: Can be expensive for large 3D textures!\n      framebufferTexture((device as WebGL2Device).gl, GLenum.COLOR_ATTACHMENT0, { texture, mipLevel, slice });\n      if (MUGL_DEBUG) {\n        console.assert(\n          (device as WebGL2Device).gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || (device as WebGL2Device).gl.isContextLost(),\n          'Framebuffer completeness check failed for copyTexture'\n        );\n      }\n      (device as WebGL2Device).gl.readPixels(x, y, width, height, format, type, offsetAligned + (slice - z) * bytesPerRow * imageHeight);\n    }\n  } else { // src is 2D texture\n    const slice = 0;\n    framebufferTexture((device as WebGL2Device).gl, GLenum.COLOR_ATTACHMENT0, { texture, mipLevel, slice });\n    if (MUGL_DEBUG) {\n      console.assert(\n        (device as WebGL2Device).gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || (device as WebGL2Device).gl.isContextLost(),\n        'Framebuffer completeness check failed for copyTexture'\n      );\n    }\n    (device as WebGL2Device).gl.readPixels(x, y, width, height, format, type, offsetAligned);\n  }\n\n  // Reset to original framebuffer\n  (device as WebGL2Device).gl.bindFramebuffer(\n    GLenum.FRAMEBUFFER,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    (device as WebGL2Device).pass ? (device as WebGL2Device).pass!.glfb : null\n  );\n}\n\n//#endregion Read/Write\n\n//#region Render\n\n/**\n * Starts a render pass.\n * @param device the GPU device\n * @param pass the render pass\n */\nexport function beginRenderPass(device: Device, pass: RenderPass): void {\n  let width = (device as WebGL2Device).gl.drawingBufferWidth;\n  let height = (device as WebGL2Device).gl.drawingBufferHeight;\n  if ((pass as WebGL2RenderPass).color.length) { // Offscreen pass\n    width = (pass as WebGL2RenderPass).color[0].width;\n    height = (pass as WebGL2RenderPass).color[0].height;\n  }\n\n  // Bind the pass framebuffer\n  (device as WebGL2Device).gl.bindFramebuffer(GLenum.FRAMEBUFFER, (pass as WebGL2RenderPass).glfb);\n\n  // Reset viewport and scissor. Necessary for buffer clearing\n  (device as WebGL2Device).gl.viewport(0, 0, width, height);\n  (device as WebGL2Device).gl.depthRange(0, 1);\n  if ((device as WebGL2Device).state.scissor) {\n    (device as WebGL2Device).state.scissor = false;\n    glToggle((device as WebGL2Device).gl, GLenum.SCISSOR_TEST, false);\n  }\n\n  // Clear color/depth/stencil, override masks as necessary to allow clearing\n  /* eslint-disable @typescript-eslint/no-non-null-assertion */\n  let clearMask = 0;\n  if (!isNaN((pass as WebGL2RenderPass).clearDepth!)) {\n    clearMask |= GLenum.DEPTH_BUFFER_BIT;\n    (device as WebGL2Device).gl.clearDepth((pass as WebGL2RenderPass).clearDepth!);\n    applyDepthMask((device as WebGL2Device).gl, (device as WebGL2Device).state.state.depthWrite, true);\n    (device as WebGL2Device).state.state.depthWrite = true;\n  }\n  if (!isNaN((pass as WebGL2RenderPass).clearStencil!)) {\n    clearMask |= GLenum.STENCIL_BUFFER_BIT;\n    (device as WebGL2Device).gl.clearStencil((pass as WebGL2RenderPass).clearStencil!);\n    applyStencilMask((device as WebGL2Device).gl, (device as WebGL2Device).state.state.stencilWriteMask, BYTE_MASK);\n    (device as WebGL2Device).state.state.stencilWriteMask = BYTE_MASK;\n  }\n  applyColorMask((device as WebGL2Device).gl, (device as WebGL2Device).state.state.blendWriteMask, ColorWrite.All);\n  (device as WebGL2Device).state.state.blendWriteMask = ColorWrite.All;\n\n  if ((pass as WebGL2RenderPass).color.length) { // Offscreen pass\n    for (let i = 0; i < (pass as WebGL2RenderPass).color.length; ++i) {\n      if ((pass as WebGL2RenderPass).clearColors[i]) {\n        const type = glClearType((pass as WebGL2RenderPass).color[i].format);\n        if (type === GLenum.INT) {\n          (device as WebGL2Device).gl.clearBufferiv(GLenum.COLOR, i, (pass as WebGL2RenderPass).clearColors[i]!);\n        } else if (type === GLenum.UNSIGNED_INT) {\n          (device as WebGL2Device).gl.clearBufferuiv(GLenum.COLOR, i, (pass as WebGL2RenderPass).clearColors[i]!);\n        } else { // type === GLenum.FLOAT\n          (device as WebGL2Device).gl.clearBufferfv(GLenum.COLOR, i, (pass as WebGL2RenderPass).clearColors[i]!);\n        }\n      }\n    }\n  } else if ((pass as WebGL2RenderPass).clearColor) { // for default pass\n    clearMask |= GLenum.COLOR_BUFFER_BIT;\n    (device as WebGL2Device).gl.clearColor(...(pass as WebGL2RenderPass).clearColor!);\n  }\n  /* eslint-enable @typescript-eslint/no-non-null-assertion */\n\n  if (clearMask) {\n    (device as WebGL2Device).gl.clear(clearMask);\n  }\n\n  (device as WebGL2Device).pass = pass as WebGL2RenderPass;\n}\n\n/**\n * Convenient method to start a default render pass.\n * @param device the GPU device\n * @param desc the render pass descriptor\n */\nexport function beginDefaultPass(device: Device, desc: DefaultRenderPassDescriptor = {}): void {\n  // Unbind any framebuffer\n  (device as WebGL2Device).gl.bindFramebuffer(GLenum.FRAMEBUFFER, null);\n\n  // Reset viewport and scissor. Necessary for buffer clearing\n  (device as WebGL2Device).gl.viewport(0, 0, (device as WebGL2Device).gl.drawingBufferWidth, (device as WebGL2Device).gl.drawingBufferHeight);\n  (device as WebGL2Device).gl.depthRange(0, 1);\n  if ((device as WebGL2Device).state.scissor) {\n    (device as WebGL2Device).state.scissor = false;\n    glToggle((device as WebGL2Device).gl, GLenum.SCISSOR_TEST, false);\n  }\n\n  // Clear color/depth/stencil, override masks as necessary to allow clearing\n  /* eslint-disable @typescript-eslint/no-non-null-assertion */\n  let clearMask = 0;\n  if (!isNaN(desc.clearDepth!)) {\n    clearMask |= GLenum.DEPTH_BUFFER_BIT;\n    (device as WebGL2Device).gl.clearDepth(desc.clearDepth!);\n    applyDepthMask((device as WebGL2Device).gl, (device as WebGL2Device).state.state.depthWrite, true);\n    (device as WebGL2Device).state.state.depthWrite = true;\n  }\n  if (!isNaN(desc.clearStencil!)) {\n    clearMask |= GLenum.STENCIL_BUFFER_BIT;\n    (device as WebGL2Device).gl.clearStencil(desc.clearStencil!);\n    applyStencilMask((device as WebGL2Device).gl, (device as WebGL2Device).state.state.stencilWriteMask, BYTE_MASK);\n    (device as WebGL2Device).state.state.stencilWriteMask = BYTE_MASK;\n  }\n  if (desc.clearColor) {\n    clearMask |= GLenum.COLOR_BUFFER_BIT;\n    (device as WebGL2Device).gl.clearColor(...desc.clearColor!);\n    applyColorMask((device as WebGL2Device).gl, (device as WebGL2Device).state.state.blendWriteMask, ColorWrite.All);\n    (device as WebGL2Device).state.state.blendWriteMask = ColorWrite.All;\n  }\n  /* eslint-enable @typescript-eslint/no-non-null-assertion */\n\n  if (clearMask) {\n    (device as WebGL2Device).gl.clear(clearMask);\n  }\n\n  (device as WebGL2Device).pass = null;\n}\n\n/**\n * Submits the current render pass.\n * @param device the GPU device\n */\nexport function submitRenderPass(device: Device): void {\n  if ((device as WebGL2Device).pass) {\n    // Blit main framebuffer content to MSAA resolve framebuffers so that texture contents are updated\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    for (let i = 0; i < (device as WebGL2Device).pass!.color.length; ++i) {\n      if ((device as WebGL2Device).pass!.glrfb[i]) {\n        blitFramebuffer((device as WebGL2Device).gl, (device as WebGL2Device).pass!.glfb, (device as WebGL2Device).pass!.glrfb[i],\n          (device as WebGL2Device).pass!.color[i], GLenum.COLOR_BUFFER_BIT, GLenum.COLOR_ATTACHMENT0 + i);\n      }\n    }\n    const depthFb = (device as WebGL2Device).pass!.glrfb[(device as WebGL2Device).pass!.glrfb.length - 1];\n    if ((device as WebGL2Device).pass!.depth && depthFb) {\n      blitFramebuffer((device as WebGL2Device).gl, (device as WebGL2Device).pass!.glfb, depthFb,\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        (device as WebGL2Device).pass!.depth!, GLenum.DEPTH_BUFFER_BIT | GLenum.STENCIL_BUFFER_BIT);\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n  (device as WebGL2Device).pass = null;\n}\n\n/**\n * Binds a RenderPipeline to the current render pass.\n * @param device the GPU device\n * @param pipeline the pipeline to bind\n */\nexport function setRenderPipeline(device: Device, pipeline: RenderPipeline): void {\n  // Optimization: pipeline unchanged, skip other updates\n  if ((device as WebGL2Device).state.pipeline === pipeline) {\n    return;\n  }\n\n  // Update shader program\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  if (!(device as WebGL2Device).state.pipeline || (device as WebGL2Device).state.pipeline!.glp !== (pipeline as WebGL2RenderPipeline).glp) {\n    (device as WebGL2Device).gl.useProgram((pipeline as WebGL2RenderPipeline).glp);\n  }\n\n  // Update pipeline state cache\n  applyPipelineState((device as WebGL2Device).gl, (device as WebGL2Device).state.state, (pipeline as WebGL2RenderPipeline).state, (device as WebGL2Device).state.stencilRef);\n  Object.assign((device as WebGL2Device).state.state, (pipeline as WebGL2RenderPipeline).state);\n\n  // Update buffer attributes cache\n  const attribEnabled: UInt[] = []; // Attribute enabled state bit flags (1 = originally enabled, 2 = should be enabled)\n  for (const { attributes } of (device as WebGL2Device).state.buffers) {\n    for (const { ptr } of attributes) {\n      attribEnabled[ptr[0]] = 1; // 1 = originally enabled, should disable if not used\n    }\n  }\n  (device as WebGL2Device).state.buffers = Array((pipeline as WebGL2RenderPipeline).buffers.length);\n  for (let slot = 0; slot < (pipeline as WebGL2RenderPipeline).buffers.length; ++slot) {\n    const { attributes, stride, stepMode = 0 } = (pipeline as WebGL2RenderPipeline).buffers[slot];\n    const bufAttrs: WebGL2Attribute[] = [];\n    (device as WebGL2Device).state.buffers[slot] = {\n      glb: null, attributes: bufAttrs, stride, step: stepMode, offset: 0, instanceOffset: 0\n    };\n    for (const { format, offset, shaderLocation } of attributes) {\n      attribEnabled[shaderLocation] = (attribEnabled[shaderLocation] || 0) + 2; // 2 = should be enabled\n      bufAttrs.push({\n        buffer: slot,\n        ptr: [\n          shaderLocation,\n          vertexSize(format),\n          vertexType(format),\n          vertexNormalized(format),\n          stride,\n          offset\n        ],\n        step: stepMode\n      });\n    }\n  }\n\n  // Enable / disable vertex attributes\n  // attribEnabled: 0 = unused, 1 = originally enabled, now should disable, 2 = originally disabled, should enable, 3 = keep enabled\n  for (let i = 0; i < attribEnabled.length; ++i) {\n    if (attribEnabled[i] === 2) {\n      (device as WebGL2Device).gl.enableVertexAttribArray(i);\n    } else if (attribEnabled[i] === 1) {\n      (device as WebGL2Device).gl.disableVertexAttribArray(i);\n    }\n  }\n\n  // Set pipeline as current\n  (device as WebGL2Device).state.pipeline = pipeline as WebGL2RenderPipeline;\n}\n\n/**\n * Binds an index buffer to the current render pass.\n * @param device the GPU device\n * @param buffer the buffer to bind\n */\nexport function setIndex(device: Device, buffer: Buffer): void {\n  if ((buffer as WebGL2Buffer).glb !== (device as WebGL2Device).state.index) {\n    (device as WebGL2Device).gl.bindBuffer(GLenum.ELEMENT_ARRAY_BUFFER, ((device as WebGL2Device).state.index = (buffer as WebGL2Buffer).glb));\n  }\n}\n\n/**\n * Binds a vertex buffer to a slot in the current render pass.\n * @param device the GPU device\n * @param slot the vertex slot to bind to\n * @param buffer the buffer to bind\n */\nexport function setVertex(device: Device, slot: number, buffer: Buffer, offset: UInt = 0): void {\n  const buf = (device as WebGL2Device).state.buffers[slot];\n  if (buf && (buf.glb !== (buffer as WebGL2Buffer).glb || buf.offset !== offset)) {\n    buf.glb = (buffer as WebGL2Buffer).glb;\n    buf.offset = offset;\n    buf.instanceOffset = 0;\n    vertexAttribs((device as WebGL2Device).gl, buf, offset);\n  }\n}\n\n/**\n * Binds a bind group to the current render pass.\n * @param device the GPU device\n * @param slot the bind group slot to bind to\n * @param bindGorup the bind group to use\n * @param offsets the dynamic offsets for dynamic buffers in this bind group\n */\nexport function setBindGroup(device: Device, slot: UInt, bindGroup: BindGroup, offsets: UIntArray = []): void {\n  if (!(device as WebGL2Device).state.pipeline) {\n    return; // Skipping updates. No effect if pipeline not bound\n  }\n\n  for (let i = 0, offsetIdx = 0; i < (bindGroup as WebGL2BindGroup).entries.length; ++i) {\n    const uniform = (bindGroup as WebGL2BindGroup).entries[i];\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const uniformInfo = (device as WebGL2Device).state.pipeline!.cache[slot] && (device as WebGL2Device).state.pipeline!.cache[slot][uniform.binding];\n    if (!uniformInfo) { // No such uniform\n      if (MUGL_DEBUG) {\n        console.warn(`Undefined uniform binding: ${uniform.binding}, slot: ${slot}`);\n      }\n      continue;\n    }\n\n    if (MUGL_DEBUG) {\n      if (uniform.buffer) {\n        console.assert(uniformInfo.type === BindingType.Buffer,\n          `Cannot bind buffer to uniform: ${uniformInfo.label}, binding: ${uniformInfo.binding}, slot: ${slot}`);\n\n        console.assert((uniform.buffer as WebGL2Buffer).type === GLenum.UNIFORM_BUFFER,\n          `Invalid buffer type bound to uniform buffer: ${uniformInfo.label}, binding: ${uniformInfo.binding}, slot: ${slot}`);\n\n        const dataSize = (device as WebGL2Device).gl.getActiveUniformBlockParameter(\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          (device as WebGL2Device).state.pipeline!.glp!,\n          uniformInfo.index,\n          GLenum.UNIFORM_BLOCK_DATA_SIZE\n        );\n        const alignment = (device as WebGL2Device).gl.getParameter(GLenum.UNIFORM_BUFFER_OFFSET_ALIGNMENT);\n        console.assert((uniform.buffer as WebGL2Buffer).size >= dataSize,\n          `Uniform buffer not large enough: ${uniformInfo.label}, binding: ${uniformInfo.binding}, slot: ${slot}, UNIFORM_BLOCK_DATA_SIZE: ${dataSize}, UNIFORM_BUFFER_OFFSET_ALIGNMENT: ${alignment}, size: ${(uniform.buffer as WebGL2Buffer).size}`);\n      } else if (uniform.texture) {\n        console.assert(uniformInfo.type === BindingType.Texture,\n          `Cannot bind texture to uniform: ${uniformInfo.label}, binding: ${uniformInfo.binding}, slot: ${slot}`);\n      } else if (uniform.sampler) {\n        console.assert(uniformInfo.type === BindingType.Sampler,\n          `Cannot bind sampler to uniform: ${uniformInfo.label}, binding: ${uniformInfo.binding}, slot: ${slot}`);\n      } else {\n        console.assert(false, `Either a buffer, texture, or sampler must be specified: ${uniformInfo.label}, binding: ${uniformInfo.binding}, slot: ${slot}`);\n      }\n    }\n\n    if (uniform.buffer) {\n      let offset = uniform.bufferOffset || 0;\n      if (uniformInfo.bufferDynamicOffset) {\n        offset += offsets[offsetIdx] || 0;\n        ++offsetIdx;\n      }\n\n      (device as WebGL2Device).gl.bindBufferRange(\n        GLenum.UNIFORM_BUFFER,\n        uniformInfo.slot,\n        (uniform.buffer as WebGL2Buffer).glb,\n        offset,\n        uniform.bufferSize || ((uniform.buffer as WebGL2Buffer).size - offset)\n      );\n    } else if (uniform.texture) {\n      (device as WebGL2Device).gl.activeTexture(GLenum.TEXTURE0 + uniformInfo.slot);\n      (device as WebGL2Device).gl.bindTexture((uniform.texture as WebGL2Texture).type, (uniform.texture as WebGL2Texture).glt);\n      (device as WebGL2Device).gl.uniform1i(uniformInfo.loc, uniformInfo.slot);\n    } else if (uniform.sampler) {\n      (device as WebGL2Device).gl.bindSampler(uniformInfo.slot, (uniform.sampler as WebGL2Sampler).gls);\n    }\n  }\n}\n\n/**\n * Submits a draw call in the current render pass.\n * @param device the GPU device\n * @param vertexCount the number of vertices to draw\n * @param instanceCount the number of instances to draw. Defaults to 1\n * @param firstVertex the offset to the first vertex to draw. Defaults to 0\n * @param firstInstance the offset to the first instance to draw. Defaults to 0\n */\nexport function draw(device: Device, vertexCount: number, instanceCount = 1, firstVertex = 0, firstInstance: UInt = 0): void {\n  for (const buf of (device as WebGL2Device).state.buffers) {\n    if (buf.step && buf.instanceOffset !== firstInstance) {\n      buf.instanceOffset = firstInstance;\n      vertexAttribs((device as WebGL2Device).gl, buf, firstInstance * buf.stride);\n    }\n  }\n  (device as WebGL2Device).gl.drawArraysInstanced((device as WebGL2Device).state.state.topology, firstVertex, vertexCount, instanceCount);\n}\n\n/**\n * Submits an indexed draw call in the current render pass.\n * @param device the GPU device\n * @param indexCount the number of vertices to draw\n * @param instanceCount the number of instances to draw. Defaults to 1\n * @param firstVertex the offset to the first vertex to draw. Defaults to 0\n * @param firstInstance the offset to the first instance to draw. Defaults to 0\n */\nexport function drawIndexed(device: Device, indexCount: number, instanceCount = 1, firstIndex = 0, firstInstance: UInt = 0): void {\n  for (const buf of (device as WebGL2Device).state.buffers) {\n    if (buf.step && buf.instanceOffset !== firstInstance) {\n      buf.instanceOffset = firstInstance;\n      vertexAttribs((device as WebGL2Device).gl, buf, firstInstance * buf.stride);\n    }\n  }\n  (device as WebGL2Device).gl.drawElementsInstanced(\n    (device as WebGL2Device).state.state.topology, indexCount, (device as WebGL2Device).state.state.indexFormat,\n    firstIndex * indexByteSize((device as WebGL2Device).state.state.indexFormat), instanceCount\n  );\n}\n\n/**\n * Sets the 3D viewport area for the current render pass.\n * @param device the GPU device\n * @param x x offset\n * @param y y offset\n * @param width width\n * @param height height\n * @param minDepth min depth. Defaults to 0\n * @param maxDepth max depth. Defaults to 1\n */\nexport function setViewport(device: Device, x: number, y: number, width: number, height: number, minDepth = 0, maxDepth = 1): void {\n  (device as WebGL2Device).gl.viewport(x, y, width, height);\n  (device as WebGL2Device).gl.depthRange(minDepth, maxDepth);\n}\n\n/**\n * Sets the scissor rectangle for the current render pass.\n * @param device the GPU device\n * @param x x offset\n * @param y y offset\n * @param width width\n * @param height height\n */\nexport function setScissorRect(device: Device, x: number, y: number, width: number, height: number): void {\n  if (!(device as WebGL2Device).state.scissor) {\n    glToggle((device as WebGL2Device).gl, GLenum.SCISSOR_TEST, true);\n    (device as WebGL2Device).state.scissor = true;\n  }\n  (device as WebGL2Device).gl.scissor(x, y, width, height);\n}\n\n/**\n * Sets the blend-constant color for the current render pass.\n * @param device the GPU device\n * @param color the blend color\n */\nexport function setBlendConst(device: Device, color: Color): void {\n  (device as WebGL2Device).gl.blendColor(...color);\n}\n\n/**\n * Sets the stencil reference value for the current render pass.\n * @param device the GPU device\n * @param ref the stencil reference value.\n */\nexport function setStencilRef(device: Device, ref: UInt): void {\n  if ((device as WebGL2Device).state.stencilRef !== ref) {\n    const { stencilFrontCompare, stencilBackCompare, stencilReadMask } = (device as WebGL2Device).state.state;\n    (device as WebGL2Device).gl.stencilFuncSeparate(GLenum.FRONT, stencilFrontCompare, ref, stencilReadMask);\n    (device as WebGL2Device).gl.stencilFuncSeparate(GLenum.BACK, stencilBackCompare, ref, stencilReadMask);\n    (device as WebGL2Device).state.stencilRef = ref;\n  }\n}\n\n//#endregion Render\n\n//#region Internal Types\n\ninterface WebGL2State {\n  copyFrameBuffer: WebGLFramebuffer | null,\n  buffers: WebGL2BufferAttributes[],\n  state: WebGL2PipelineState;\n  pipeline: WebGL2RenderPipeline | null;\n  index: WebGLBuffer | null;\n  stencilRef: UInt;\n  scissor: boolean;\n}\n\ninterface WebGL2Attribute {\n  buffer: UInt;\n  ptr: [\n    loc: UInt,\n    size: UInt,\n    type: UInt,\n    normalized: boolean,\n    stride: UInt,\n    offset: UInt\n  ];\n  step: UInt;\n}\n\ninterface WebGL2BufferAttributes {\n  glb: WebGLBuffer | null;\n  attributes: WebGL2Attribute[];\n  stride: UInt;\n  step: UInt;\n  offset: UInt;\n  instanceOffset: UInt;\n}\n\ninterface WebGL2PipelineState {\n  topology: UInt;\n  indexFormat: UInt;\n  frontFace: UInt;\n  cullMode: UInt;\n\n  sampleCount: UInt;\n  alphaToCoverage: boolean;\n\n  depth: boolean;\n  depthWrite: boolean;\n  depthFormat: UInt;\n  depthCompare: UInt;\n  depthBias: Float;\n  depthBiasSlopeScale: Float;\n\n  stencil: boolean;\n  stencilFrontCompare: UInt;\n  stencilFrontFailOp: UInt;\n  stencilFrontDepthFailOp: UInt;\n  stencilFrontPassOp: UInt;\n  stencilBackCompare: UInt;\n  stencilBackFailOp: UInt;\n  stencilBackDepthFailOp: UInt;\n  stencilBackPassOp: UInt;\n  stencilReadMask: UInt;\n  stencilWriteMask: UInt;\n\n  blend: boolean;\n  blendWriteMask: UInt;\n  blendColorOp: UInt;\n  blendColorSrcFactor: UInt;\n  blendColorDstFactor: UInt;\n  blendAlphaOp: UInt;\n  blendAlphaSrcFactor: UInt;\n  blendAlphaDstFactor: UInt;\n}\n\n/** An entry of uniform info cache */\ninterface UniformCache {\n  /** Bind group entry name. */\n  label: string;\n  /** Binding location. */\n  binding: UInt;\n  /** The type of binding. */\n  type: BindingType;\n  /** Uniform location. */\n  loc: WebGLUniformLocation | null\n  /** Uniform block index. */\n  index: GLuint;\n  /** Uniform buffer / Texture bind slot ID. */\n  slot: number;\n  /** Dynamic offset uniform buffer. */\n  bufferDynamicOffset?: boolean;\n}\n\n//#endregion Internal Types\n\n//#region Helpers\n\nfunction initWebGL2State(gl: WebGL2RenderingContext): WebGL2State {\n  const state = createPipelineState();\n\n  // Apply the default states\n  gl.blendColor(1, 1, 1, 1);\n  applyPipelineState(gl, state, state, 0, true);\n  for (let i = 0; i < MAX_VERTEX_ATTRIBS; ++i) {\n    gl.disableVertexAttribArray(i);\n  }\n\n  // Default alignment is 4. Use 1 to make byte data texture work.\n  gl.pixelStorei(GLenum.PACK_ALIGNMENT, 1);\n  gl.pixelStorei(GLenum.UNPACK_ALIGNMENT, 1);\n\n  return {\n    copyFrameBuffer: gl.createFramebuffer(),\n    buffers: [],\n    state,\n    pipeline: null,\n    index: null,\n    stencilRef: 0,\n    scissor: false\n  };\n}\n\nfunction compileShaderProgram(device: Device, vertex: WebGLShader, fragment: WebGLShader): WebGLProgram {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const glp = (device as WebGL2Device).gl.createProgram()!;\n  (device as WebGL2Device).gl.attachShader(glp, vertex);\n  (device as WebGL2Device).gl.attachShader(glp, fragment);\n  (device as WebGL2Device).gl.linkProgram(glp);\n\n  if (MUGL_DEBUG) {\n    console.assert(\n      (device as WebGL2Device).gl.getProgramParameter(glp, GLenum.LINK_STATUS) || isDeviceLost(device),\n      `Failed to link program: ${(device as WebGL2Device).gl.getProgramInfoLog(glp)}`\n    );\n  }\n\n  return glp;\n}\n\nfunction framebufferTexture(\n  gl: WebGL2RenderingContext, attachment: GLenum, { texture, slice = 0, mipLevel = 0 }: TextureView\n): void {\n  if (is3DTexture((texture as WebGL2Texture).type)) {\n    gl.framebufferTextureLayer(GLenum.FRAMEBUFFER, attachment, (texture as WebGL2Texture).glt, mipLevel, slice);\n  } else {\n    const texTarget = ((texture as WebGL2Texture).type === GLenum.TEXTURE_CUBE_MAP) ?\n      GLenum.TEXTURE_CUBE_MAP_POSITIVE_X + slice : (texture as WebGL2Texture).type;\n    gl.framebufferTexture2D(GLenum.FRAMEBUFFER, attachment, texTarget, (texture as WebGL2Texture).glt, mipLevel);\n  }\n}\n\nfunction createResolveFrameBuffer(\n  gl: WebGL2RenderingContext, attachment: GLenum, view: TextureView\n): WebGLFramebuffer | null {\n  const fb = gl.createFramebuffer();\n  gl.bindFramebuffer(GLenum.FRAMEBUFFER, fb);\n  framebufferTexture(gl, attachment, view);\n  if (MUGL_DEBUG) {\n    console.assert(\n      gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || gl.isContextLost(),\n      'Framebuffer completeness check failed for MSAA resolve buffer'\n    );\n  }\n  return fb;\n}\n\nfunction blitFramebuffer(\n  gl: WebGL2RenderingContext, from: WebGLFramebuffer | null, to: WebGLFramebuffer | null,\n  tex: WebGL2Texture, mask: number, attachment: UInt = GLenum.COLOR_ATTACHMENT0\n): void {\n  gl.bindFramebuffer(GLenum.READ_FRAMEBUFFER, from);\n  gl.bindFramebuffer(GLenum.DRAW_FRAMEBUFFER, to);\n  gl.readBuffer(attachment);\n  gl.blitFramebuffer(\n    0, 0, tex.width, tex.height,\n    0, 0, tex.width, tex.height,\n    mask, GLenum.NEAREST\n  );\n}\n\nfunction createPipelineState(desc: RenderPipelineState = {}): WebGL2PipelineState {\n  const primitive = desc.primitive || {};\n  const depthStencil = desc.depthStencil || {};\n  const { stencilFront = {}, stencilBack = {} } = depthStencil;\n  const { sampleCount = 1, alphaToCoverage = false } = desc.multisample || {};\n  const targets = desc.targets || {};\n  let blendWriteMask = targets.writeMask || ColorWrite.All;\n  let blendColor = targets.blendColor || {};\n  let blendAlpha = targets.blendColor || {};\n  if (targets.targets && targets.targets[0]) {\n    blendWriteMask = targets.targets[0].writeMask || blendWriteMask;\n    blendColor = targets.targets[0].blendColor || blendColor;\n    blendAlpha = targets.targets[0].blendAlpha || blendAlpha;\n  }\n\n  return {\n    sampleCount,\n    alphaToCoverage,\n\n    topology: primitive.topology || GLenum.TRIANGLES,\n    indexFormat: primitive.indexFormat || GLenum.UNSIGNED_SHORT,\n    frontFace: primitive.frontFace || GLenum.CCW,\n    cullMode: primitive.cullMode || GLenum.NONE,\n\n    depth: !!desc.depthStencil,\n    depthWrite: depthStencil.depthWrite || false,\n    depthFormat: depthStencil.format || GLenum.DEPTH_COMPONENT16,\n    depthCompare: depthStencil.depthCompare || GLenum.ALWAYS,\n    depthBias: depthStencil.depthBias || 0,\n    depthBiasSlopeScale: depthStencil.depthBiasSlopeScale || 0,\n\n    stencil: !!(depthStencil.stencilFront || depthStencil.stencilBack),\n    stencilFrontCompare: stencilFront.compare || GLenum.ALWAYS,\n    stencilFrontFailOp: stencilFront.failOp || GLenum.KEEP,\n    stencilFrontDepthFailOp: stencilFront.depthFailOp || GLenum.KEEP,\n    stencilFrontPassOp: stencilFront.passOp || GLenum.KEEP,\n    stencilBackCompare: stencilBack.compare || GLenum.ALWAYS,\n    stencilBackFailOp: stencilBack.failOp || GLenum.KEEP,\n    stencilBackDepthFailOp: stencilBack.depthFailOp || GLenum.KEEP,\n    stencilBackPassOp: stencilBack.passOp || GLenum.KEEP,\n    stencilReadMask: depthStencil.stencilReadMask || STENCIL_MASK,\n    stencilWriteMask: depthStencil.stencilWriteMask || STENCIL_MASK,\n\n    blend: !!desc.targets,\n    blendWriteMask,\n    blendColorOp: blendColor.operation || GLenum.FUNC_ADD,\n    blendColorSrcFactor: blendColor.srcFactor || GLenum.ONE,\n    blendColorDstFactor: blendColor.dstFactor || GLenum.ZERO,\n    blendAlphaOp: blendAlpha.operation || GLenum.FUNC_ADD,\n    blendAlphaSrcFactor: blendAlpha.srcFactor || GLenum.ONE,\n    blendAlphaDstFactor: blendAlpha.dstFactor || GLenum.ZERO,\n  };\n}\n\nfunction applyPipelineState(\n  gl: WebGL2RenderingContext, prevState: WebGL2PipelineState, state: WebGL2PipelineState, stencilRef = 0,\n  force = false\n): void {\n  // Temporary variables to reuse for performance\n  let b = false, n = 0, n2 = 0, n3 = 0, n4 = 0;\n\n  // 1. Apply primitive state\n  n = state.frontFace;\n  if (force || (prevState.frontFace !== n)) {\n    gl.frontFace(n);\n  }\n  n = state.cullMode;\n  if (force || (prevState.cullMode !== n)) {\n    if ((b = (n !== GLenum.NONE))) {\n      gl.cullFace(n);\n    }\n    glToggle(gl, GLenum.CULL_FACE, b);\n  }\n\n  // 2. Apply multisample state\n  b = state.alphaToCoverage;\n  if (force || (prevState.alphaToCoverage !== b)) {\n    glToggle(gl, GLenum.SAMPLE_ALPHA_TO_COVERAGE, b);\n  }\n\n  // 3. Apply depth state changes\n  b = !!state.depth;\n  if (force || (prevState.depth !== b)) {\n    glToggle(gl, GLenum.DEPTH_TEST, b);\n  }\n\n  if (force || b) {\n    applyDepthMask(gl, prevState.depthWrite, state.depthWrite, force);\n\n    n = state.depthCompare;\n    if (force || (prevState.depthCompare !== n)) {\n      gl.depthFunc(n);\n    }\n  }\n\n  n = state.depthBiasSlopeScale;\n  n2 = state.depthBias;\n  if (force || (prevState.depthBiasSlopeScale !== n) || (prevState.depthBias !== n2)) {\n    glToggle(gl, GLenum.POLYGON_OFFSET_FILL, !(!n && !n2)); // Enable if any of the 2 values is non-zero\n    gl.polygonOffset(n, n2);\n  }\n\n  // 4. Apply stencil state changes\n  b = !!state.stencil;\n  if (force || (prevState.stencil !== b)) {\n    glToggle(gl, GLenum.STENCIL_TEST, b);\n  }\n\n  if (force || b) {\n    n = state.stencilReadMask;\n    b = force || (prevState.stencilReadMask !== n);\n\n    n2 = state.stencilFrontCompare;\n    if (b || (prevState.stencilFrontCompare !== n2)) {\n      gl.stencilFuncSeparate(GLenum.FRONT, n2, stencilRef, n);\n    }\n    n2 = state.stencilBackCompare;\n    if (b || (prevState.stencilBackCompare !== n2)) {\n      gl.stencilFuncSeparate(GLenum.BACK, n2, stencilRef, n);\n    }\n\n    n = state.stencilFrontFailOp;\n    n2 = state.stencilFrontDepthFailOp;\n    n3 = state.stencilFrontPassOp;\n    if (force ||\n      (prevState.stencilFrontFailOp !== n) ||\n      (prevState.stencilFrontDepthFailOp !== n2) ||\n      (prevState.stencilFrontPassOp !== n3)\n    ) {\n      gl.stencilOpSeparate(GLenum.FRONT, n, n2, n3);\n    }\n    n = state.stencilBackFailOp;\n    n2 = state.stencilBackDepthFailOp;\n    n3 = state.stencilBackPassOp;\n    if (force ||\n      (prevState.stencilBackFailOp !== n) ||\n      (prevState.stencilBackDepthFailOp !== n2) ||\n      (prevState.stencilBackPassOp !== n3)\n    ) {\n      gl.stencilOpSeparate(GLenum.BACK, n, n2, n3);\n    }\n\n    applyStencilMask(gl, prevState.stencilWriteMask, state.stencilWriteMask, force);\n  }\n\n  // 5. Apply blend state changes\n  b = state.blend;\n  if (force || (prevState.blend !== b)) {\n    glToggle(gl, GLenum.BLEND, b);\n  }\n\n  if (force || b) {\n    n = state.blendColorSrcFactor;\n    n2 = state.blendColorDstFactor;\n    n3 = state.blendAlphaSrcFactor;\n    n4 = state.blendAlphaDstFactor;\n    if (force ||\n      (prevState.blendColorSrcFactor !== n) ||\n      (prevState.blendColorDstFactor !== n2) ||\n      (prevState.blendAlphaSrcFactor !== n3) ||\n      (prevState.blendAlphaDstFactor !== n4)\n    ) {\n      gl.blendFuncSeparate(n, n2, n3, n4);\n    }\n\n    n = state.blendColorOp;\n    n2 = state.blendAlphaOp;\n    if (force || (prevState.blendColorOp !== n) || (prevState.blendAlphaOp !== n2)) {\n      gl.blendEquationSeparate(n, n2);\n    }\n\n    applyColorMask(gl, prevState.blendWriteMask, state.blendWriteMask, force);\n  }\n}\n\nfunction applyColorMask(gl: WebGL2RenderingContext, prevMask: ColorWrite, mask: ColorWrite, force = false): void {\n  if (force || prevMask !== mask) {\n    gl.colorMask(\n      !!(mask & ColorWrite.Red),\n      !!(mask & ColorWrite.Green),\n      !!(mask & ColorWrite.Blue),\n      !!(mask & ColorWrite.Alpha)\n    );\n  }\n}\n\nfunction applyDepthMask(gl: WebGL2RenderingContext, prevMask: boolean, mask: boolean, force = false): void {\n  if (force || prevMask !== mask) {\n    gl.depthMask(mask);\n  }\n}\n\nfunction applyStencilMask(gl: WebGL2RenderingContext, prevMask: UInt, mask: UInt, force = false): void {\n  if (force || prevMask !== mask) {\n    gl.stencilMask(mask);\n  }\n}\n\nfunction glToggle(gl: WebGL2RenderingContext, flag: GLenum, enable: boolean): void {\n  enable ? gl.enable(flag) : gl.disable(flag);\n}\n\nfunction vertexAttribs(gl: WebGL2RenderingContext, buffer: WebGL2BufferAttributes, offset: UInt): void {\n  gl.bindBuffer(GLenum.ARRAY_BUFFER, buffer.glb);\n  for (let i = 0; i < buffer.attributes.length; ++i) {\n    const { ptr, step } = buffer.attributes[i];\n    const params: [number, number, number, boolean, number, number] = [...ptr];\n    params[5] += offset;\n    gl.vertexAttribPointer(...params);\n    gl.vertexAttribDivisor(ptr[0], step);\n  }\n}\n\nfunction clientWaitAsync(gl: WebGL2RenderingContext, sync: WebGLSync, flags: UInt, interval: UInt): Promise<void> {\n  return new Promise((resolve, reject) => {\n    function test() {\n      const res = gl.clientWaitSync(sync, flags, 0);\n      if (res == GLenum.WAIT_FAILED) {\n        reject();\n      } else if (res == GLenum.TIMEOUT_EXPIRED) {\n        setTimeout(test, interval);\n      } else {\n        resolve();\n      }\n    }\n    test();\n  });\n}\n\nfunction getBufferSubData(gl: WebGL2RenderingContext, target: UInt, buffer: WebGLBuffer, srcOffset: UInt, length: UInt): Promise<Uint8Array> {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const sync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0)!;\n  gl.flush();\n\n  return clientWaitAsync(gl, sync, 0, 10)\n    .finally(() => gl.deleteSync(sync))\n    .then(() => {\n      const data = new Uint8Array(length);\n      gl.bindBuffer(target, buffer);\n      gl.getBufferSubData(target, srcOffset, data, 0, length);\n      return data;\n    });\n}\n\n//#endregion Helpers\n"],"file":"gl2.js"}