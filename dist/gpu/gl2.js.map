{"version":3,"file":"gl2.js","names":["MUGL_DEBUG","MUGL_FINALIZER","GLenum","FutureStatus","BindingType","BufferUsage","ColorWrite","ShaderStage","TextureUsage","WebGL2FeatureNames","glClearType","glTexelFormat","glTexelSize","glTexelType","hasStencil","indexByteSize","is3DTexture","isDepthStencil","vertexSize","vertexType","vertexNormalized","BYTE_MASK","STENCIL_MASK","MAX_VERTEX_ATTRIBS","gpuFinalizer","FinalizationRegistry","finalizer","gl","requestWebGL2Device","canvas","options","features","getContext","enabledFeatures","feature","getExtension","state","initWebGL2State","deleteFramebuffer","copyFrameBuffer","device","pass","destroy","register","resetDevice","Object","assign","isDeviceLost","isContextLost","getDeviceFeatures","createBuffer","desc","type","usage","Uniform","UNIFORM_BUFFER","Index","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","Stream","STREAM_DRAW","Dynamic","DYNAMIC_DRAW","STATIC_DRAW","glb","bindBuffer","bufferData","size","deleteBuffer","buffer","createTexture","samples","sampleCount","dimension","TEXTURE_2D","format","RGBA8","needTexture","TextureBinding","width","height","_depth","depth","TEXTURE_CUBE_MAP","glt","glrb","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","renderbufferStorage","activeTexture","TEXTURE0","bindTexture","texStorage3D","mipLevelCount","texStorage2D","deleteTexture","deleteRenderbuffer","texture","createSampler","gls","minFilter","NEAREST","mipmapFilter","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","samplerParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","magFilter","TEXTURE_WRAP_S","addressModeU","CLAMP_TO_EDGE","TEXTURE_WRAP_T","addressModeV","TEXTURE_WRAP_R","addressModeW","samplerParameterf","TEXTURE_MAX_LOD","lodMaxClamp","TEXTURE_MIN_LOD","lodMinClamp","compare","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","maxAnisotropy","TEXTURE_MAX_ANISOTROPY_EXT","Math","min","getParameter","MAX_TEXTURE_MAX_ANISOTROPY_EXT","deleteSampler","sampler","createShader","Vertex","VERTEX_SHADER","FRAGMENT_SHADER","shaderSource","code","compileShader","console","assert","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","shader","createRenderPass","glfb","glrfb","depthStencil","withStencil","colors","length","createFramebuffer","bindFramebuffer","FRAMEBUFFER","i","view","framebufferRenderbuffer","COLOR_ATTACHMENT0","framebufferTexture","drawBuffers","map","_","DEPTH_STENCIL_ATTACHMENT","DEPTH_ATTACHMENT","error","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","push","createResolveFrameBuffer","fb","color","c","clearColors","clear","clearColor","clearDepth","clearStencil","createBindGroupLayout","entries","entry","binding","createBindGroup","createRenderPipeline","glp","compileShaderProgram","vertex","fragment","cache","textureSlots","bufCount","texCount","bindGroups","j","loc","index","INVALID_INDEX","Buffer","getUniformBlockIndex","label","uniformBlockBinding","Texture","getUniformLocation","slot","Sampler","deleteProgram","pipeline","buffers","createPipelineState","readBuffer","out","offset","future","status","Pending","getBufferSubData","byteLength","then","data","set","Done","Error","writeBuffer","bufferSubData","copyBuffer","src","dst","srcOffset","dstOffset","COPY_READ_BUFFER","COPY_WRITE_BUFFER","copyBufferSubData","generateMipmap","hint","DONT_CARE","GENERATE_MIPMAP_HINT","writeTexture","mipLevel","origin","x","y","z","bytesPerRow","rowsPerImage","glFormat","glType","isCube","target","TEXTURE_CUBE_MAP_POSITIVE_X","pixelSize","imageHeight","pixelsPerRow","floor","offsetAligned","pixelStorei","UNPACK_IMAGE_HEIGHT","UNPACK_ROW_LENGTH","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","UNPACK_SKIP_IMAGES","texSubImage3D","slice","texSubImage2D","copyExternalImageToTexture","srcX","srcY","copyTexture","dstTexture","dstMipLevel","dstX","dstY","dstZ","copyTexSubImage3D","copyTexSubImage2D","copyTextureToBuffer","PIXEL_PACK_BUFFER","PACK_ROW_LENGTH","PACK_SKIP_PIXELS","PACK_SKIP_ROWS","readPixels","beginRenderPass","drawingBufferWidth","drawingBufferHeight","viewport","depthRange","scissor","glToggle","SCISSOR_TEST","clearMask","isNaN","DEPTH_BUFFER_BIT","applyDepthMask","depthWrite","STENCIL_BUFFER_BIT","applyStencilMask","stencilWriteMask","applyColorMask","blendWriteMask","All","INT","clearBufferiv","COLOR","UNSIGNED_INT","clearBufferuiv","clearBufferfv","COLOR_BUFFER_BIT","beginDefaultPass","submitRenderPass","blitFramebuffer","depthFb","setRenderPipeline","useProgram","applyPipelineState","stencilRef","attribEnabled","attributes","ptr","Array","stride","stepMode","bufAttrs","step","instanceOffset","shaderLocation","enableVertexAttribArray","disableVertexAttribArray","setIndex","setVertex","buf","vertexAttribs","setBindGroup","bindGroup","offsets","offsetIdx","uniform","uniformInfo","warn","dataSize","getActiveUniformBlockParameter","UNIFORM_BLOCK_DATA_SIZE","alignment","UNIFORM_BUFFER_OFFSET_ALIGNMENT","bufferOffset","bufferDynamicOffset","bindBufferRange","bufferSize","uniform1i","bindSampler","draw","vertexCount","instanceCount","firstVertex","firstInstance","drawArraysInstanced","topology","drawIndexed","indexCount","firstIndex","drawElementsInstanced","indexFormat","setViewport","minDepth","maxDepth","setScissorRect","setBlendConst","blendColor","setStencilRef","ref","stencilFrontCompare","stencilBackCompare","stencilReadMask","stencilFuncSeparate","FRONT","BACK","PACK_ALIGNMENT","UNPACK_ALIGNMENT","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attachment","framebufferTextureLayer","texTarget","framebufferTexture2D","from","to","tex","mask","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","primitive","stencilFront","stencilBack","alphaToCoverage","multisample","targets","writeMask","blendAlpha","TRIANGLES","UNSIGNED_SHORT","frontFace","CCW","cullMode","NONE","depthFormat","DEPTH_COMPONENT16","depthCompare","ALWAYS","depthBias","depthBiasSlopeScale","stencil","stencilFrontFailOp","failOp","KEEP","stencilFrontDepthFailOp","depthFailOp","stencilFrontPassOp","passOp","stencilBackFailOp","stencilBackDepthFailOp","stencilBackPassOp","blend","blendColorOp","operation","FUNC_ADD","blendColorSrcFactor","srcFactor","ONE","blendColorDstFactor","dstFactor","ZERO","blendAlphaOp","blendAlphaSrcFactor","blendAlphaDstFactor","prevState","force","b","n","n2","n3","n4","cullFace","CULL_FACE","SAMPLE_ALPHA_TO_COVERAGE","DEPTH_TEST","depthFunc","POLYGON_OFFSET_FILL","polygonOffset","STENCIL_TEST","stencilOpSeparate","BLEND","blendFuncSeparate","blendEquationSeparate","prevMask","colorMask","Red","Green","Blue","Alpha","depthMask","stencilMask","flag","enable","disable","params","vertexAttribPointer","vertexAttribDivisor","clientWaitAsync","sync","flags","interval","Promise","resolve","reject","test","res","clientWaitSync","WAIT_FAILED","TIMEOUT_EXPIRED","setTimeout","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","finally","deleteSync","Uint8Array"],"sources":["../../js/gpu/gl2.ts"],"sourcesContent":["import { MUGL_DEBUG, MUGL_FINALIZER } from '../config';\nimport * as GLenum from './gl-const';\nimport { Color, Extent2D, Extent3D, Float, Future, FutureStatus, UInt, UIntArray } from './primitive';\nimport {\n  BindingType, BufferUsage, ColorWrite, MipmapHint, ShaderStage, TextureUsage\n} from './type';\nimport {\n  BindGroupDescriptor, BindGroupEntry, BindGroupLayoutDescriptor, BindGroupLayoutEntry, BufferDescriptor,\n  DefaultRenderPassDescriptor, ImageCopyExternalImage, ImageCopyTexture, ImageDataLayout, RenderPassDescriptor,\n  RenderPipelineDescriptor, RenderPipelineState, SamplerDescriptor, ShaderDescriptor, TextureDescriptor, TextureView,\n  VertexBufferLayout\n} from './descriptor';\nimport {\n  BindGroup, BindGroupLayout, Buffer, Device, RenderPass, RenderPipeline, Sampler, Shader, Texture\n} from './resource';\nimport { Canvas, WebGL2Feature, WebGL2FeatureNames } from './gl2-type';\nimport {\n  glClearType, glTexelFormat, glTexelSize, glTexelType, hasStencil, indexByteSize, is3DTexture, isDepthStencil,\n  vertexSize, vertexType, vertexNormalized,\n} from './gl-util';\n\n//#region Constants\n\nconst BYTE_MASK = 0xFF;\nconst STENCIL_MASK = 0xFFFFFFFF;\nconst MAX_VERTEX_ATTRIBS = 16;  // TODO: query the actual limit\n\n//#endregion Constants\n\n//#region Types\n\ninterface WebGL2Device extends Device {\n  readonly canvas: Canvas;\n  readonly gl: WebGL2RenderingContext;\n  readonly features: WebGL2Feature;\n\n  pass: WebGL2RenderPass | null;\n  state: WebGL2State;\n}\n\ninterface WebGL2Buffer extends Buffer {\n  readonly gl: WebGL2RenderingContext;\n  readonly glb: WebGLBuffer | null;\n  readonly type: UInt;\n  readonly size: UInt;\n}\n\ninterface WebGL2Texture extends Texture {\n  readonly gl: WebGL2RenderingContext;\n  readonly glt: WebGLTexture | null;\n  readonly glrb: WebGLRenderbuffer | null;\n  readonly type: UInt;\n  readonly width: UInt;\n  readonly height: UInt;\n  readonly depth: UInt;\n  readonly format: UInt;\n  readonly samples: UInt;\n}\n\ninterface WebGL2Sampler extends Sampler {\n  readonly gl: WebGL2RenderingContext;\n  readonly gls: WebGLSampler | null;\n}\n\ninterface WebGL2Shader extends Shader {\n  readonly gl: WebGL2RenderingContext;\n  readonly gls: WebGLShader | null;\n}\n\ninterface WebGL2RenderPass extends RenderPass {\n  readonly gl: WebGL2RenderingContext;\n  readonly glfb: WebGLFramebuffer | null;\n  readonly glrfb: (WebGLFramebuffer | null)[];\n  readonly color: WebGL2Texture[];\n  readonly clearColors: (Color | null | undefined)[];\n  readonly clearColor?: Color | null;\n  readonly clearDepth?: Float;\n  readonly clearStencil?: Float;\n  readonly depth: WebGL2Texture | null;\n}\n\ninterface WebGL2BindGroupLayout extends BindGroupLayout {\n  readonly entries: (BindGroupLayoutEntry & { binding: UInt })[];\n}\n\ninterface WebGL2BindGroup extends BindGroup {\n  readonly entries: (BindGroupEntry & { binding: UInt })[];\n}\n\ninterface WebGL2RenderPipeline extends RenderPipeline {\n  readonly gl: WebGL2RenderingContext;\n  readonly glp: WebGLProgram | null;\n  readonly cache: UniformCache[][];\n  readonly buffers: VertexBufferLayout[];\n  readonly state: WebGL2PipelineState;\n}\n\n//#endregion Types\n\n//#region Device\n\ntype GPUFinalizer = FinalizationRegistry<{\n  finalizer: (gl: WebGL2RenderingContext) => void,\n  gl: WebGL2RenderingContext,\n}>;\n\nlet gpuFinalizer: GPUFinalizer | null = null;\n\nif (MUGL_FINALIZER) {\n  gpuFinalizer = new FinalizationRegistry(({ finalizer, gl }) => {\n    finalizer(gl);\n  });\n}\n\n/**\n * Requests a WebGL2 {@link Device}.\n * @param canvas the canvas to be used\n * @param options WebGL context initialization options\n * @param features WebGL features to enable\n * @returns WebGL2 GPU device instance, or null if WebGL2 is not supported\n */\nexport function requestWebGL2Device(\n  canvas: Canvas, options: WebGLContextAttributes = {}, features: WebGL2Feature = 0\n): Device | null {\n  const gl: WebGL2RenderingContext | null = canvas.getContext('webgl2', options);\n  if (gl) {\n    let enabledFeatures = 0;\n    for (const feature in WebGL2FeatureNames) {\n      if ((features & +feature) && gl.getExtension(WebGL2FeatureNames[+feature])) {\n        enabledFeatures = enabledFeatures | +feature;\n      }\n    }\n    const state = initWebGL2State(gl);\n    const finalizer = (gl: WebGL2RenderingContext) => {\n      gl.deleteFramebuffer(state.copyFrameBuffer);\n    };\n\n    const device = {\n      canvas, gl, state, features: enabledFeatures,\n      pass: null,\n      destroy() {\n        finalizer(this.gl);\n      }\n    } as WebGL2Device;\n\n    if (MUGL_FINALIZER) {\n      (gpuFinalizer as GPUFinalizer).register(device, { finalizer, gl });\n    }\n\n    return device;\n  }\n  return null;\n}\n\n/**\n * Resets the device state.\n * @param device the GPU device\n */\nexport function resetDevice(device: Device): void {\n  (device as WebGL2Device).destroy();\n  Object.assign((device as WebGL2Device).state, initWebGL2State((device as WebGL2Device).gl));\n}\n\n/**\n * Returns if device context is lost.\n * @param device the GPU device\n * @returns true if device context is lost\n */\nexport function isDeviceLost(device: Device): boolean {\n  return (device as WebGL2Device).gl.isContextLost();\n}\n\n/**\n * Gets the enabled features of the device.\n * @param device the GPU device\n * @returns enabled features bitflag\n */\nexport function getDeviceFeatures(device: Device): WebGL2Feature {\n  return (device as WebGL2Device).features;\n}\n\n//#endregion Device\n\n//#region Buffer\n\n/**\n * Creates a new buffer object.\n * @param device the GPU device\n * @param desc the buffer descriptor\n * @returns new buffer object\n */\nexport function createBuffer(device: Device, desc: BufferDescriptor): Buffer {\n  const type = (desc.usage & BufferUsage.Uniform) ? GLenum.UNIFORM_BUFFER :\n    (desc.usage & BufferUsage.Index) ? GLenum.ELEMENT_ARRAY_BUFFER : GLenum.ARRAY_BUFFER;\n  const usage = (desc.usage & BufferUsage.Stream) ? GLenum.STREAM_DRAW :\n    (desc.usage & BufferUsage.Dynamic) ? GLenum.DYNAMIC_DRAW : GLenum.STATIC_DRAW;\n\n  const glb = (device as WebGL2Device).gl.createBuffer();\n  (device as WebGL2Device).gl.bindBuffer(type, glb);\n  (device as WebGL2Device).gl.bufferData(type, desc.size, usage);\n\n  const finalizer = (gl: WebGL2RenderingContext) => {\n    gl.deleteBuffer(glb);\n  };\n\n  const buffer = {\n    gl: (device as WebGL2Device).gl, glb, type, size: desc.size,\n    destroy(): void {\n      finalizer(this.gl);\n    }\n  } as WebGL2Buffer;\n\n  if (MUGL_FINALIZER) {\n    (gpuFinalizer as GPUFinalizer).register(buffer, { finalizer, gl: (device as WebGL2Device).gl });\n  }\n\n  return buffer;\n}\n\n//#endregion Buffer\n\n//#region Texture\n\n/**\n * Creates a new texture object.\n * @param device the GPU device\n * @param desc the texture descriptor\n * @returns new texture object\n */\nexport function createTexture(device: Device, desc: TextureDescriptor): Texture {\n  const samples = desc.sampleCount || 1;\n  const type = desc.dimension || GLenum.TEXTURE_2D;\n  const format = desc.format || GLenum.RGBA8;\n  const needTexture = !isDepthStencil(format) || ((desc.usage || 0) & TextureUsage.TextureBinding);\n  const [width, height, _depth] = desc.size || [1, 1, 1];\n  const depth = type === GLenum.TEXTURE_CUBE_MAP ? 6 :\n    type === GLenum.TEXTURE_2D ? 1 : _depth;\n\n  let glt: WebGLTexture | null = null;\n  let glrb: WebGLRenderbuffer | null = null;\n\n  if (samples > 1 || !needTexture) { // MSAA / Depth-stencil renderbuffer\n    // WebGL does not have multisample texture, so renderbuffer is needed to resolve MSAA\n    glrb = (device as WebGL2Device).gl.createRenderbuffer();\n    (device as WebGL2Device).gl.bindRenderbuffer(GLenum.RENDERBUFFER, glrb);\n    if (samples > 1) {\n      (device as WebGL2Device).gl.renderbufferStorageMultisample(GLenum.RENDERBUFFER, samples, format, width, height);\n    } else {\n      (device as WebGL2Device).gl.renderbufferStorage(GLenum.RENDERBUFFER, format, width, height);\n    }\n  }\n\n  if (needTexture) {\n    glt = (device as WebGL2Device).gl.createTexture();\n    (device as WebGL2Device).gl.activeTexture(GLenum.TEXTURE0);\n    (device as WebGL2Device).gl.bindTexture(type, glt);\n\n    if (is3DTexture(type)) {\n      (device as WebGL2Device).gl.texStorage3D(type, desc.mipLevelCount || 1, format, width, height, depth);\n    } else {\n      (device as WebGL2Device).gl.texStorage2D(type, desc.mipLevelCount || 1, format, width, height);\n    }\n  }\n\n  const finalizer = (gl: WebGL2RenderingContext) => {\n    gl.deleteTexture(glt);\n    gl.deleteRenderbuffer(glrb);\n  };\n\n  const texture = {\n    gl: (device as WebGL2Device).gl, glt, glrb, type, format, width, height, depth, samples,\n    destroy(): void {\n      finalizer(this.gl);\n    }\n  } as WebGL2Texture;\n\n  if (MUGL_FINALIZER) {\n    (gpuFinalizer as GPUFinalizer).register(texture, { finalizer, gl: (device as WebGL2Device).gl });\n  }\n\n  return texture;\n}\n\n//#endregion Texture\n\n//#region Sampler\n\n/**\n * Creates a new sampler object.\n * @param device the GPU device\n * @param desc the sampler descriptor\n * @returns new sampler object\n */\nexport function createSampler(device: Device, desc: SamplerDescriptor = {}): Sampler {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const gls = (device as WebGL2Device).gl.createSampler()!;\n  let minFilter = desc.minFilter || GLenum.NEAREST;\n  if (desc.mipmapFilter) {\n    if (desc.mipmapFilter === GLenum.NEAREST) {\n      minFilter = minFilter === GLenum.NEAREST ? GLenum.NEAREST_MIPMAP_NEAREST : GLenum.LINEAR_MIPMAP_NEAREST;\n    } else {\n      minFilter = minFilter === GLenum.NEAREST ? GLenum.NEAREST_MIPMAP_LINEAR : GLenum.LINEAR_MIPMAP_LINEAR;\n    }\n  }\n\n  (device as WebGL2Device).gl.samplerParameteri(gls, GLenum.TEXTURE_MIN_FILTER, minFilter);\n  (device as WebGL2Device).gl.samplerParameteri(gls, GLenum.TEXTURE_MAG_FILTER, desc.magFilter || GLenum.NEAREST);\n  (device as WebGL2Device).gl.samplerParameteri(gls, GLenum.TEXTURE_WRAP_S, desc.addressModeU || GLenum.CLAMP_TO_EDGE);\n  (device as WebGL2Device).gl.samplerParameteri(gls, GLenum.TEXTURE_WRAP_T, desc.addressModeV || GLenum.CLAMP_TO_EDGE);\n  (device as WebGL2Device).gl.samplerParameteri(gls, GLenum.TEXTURE_WRAP_R, desc.addressModeW || GLenum.CLAMP_TO_EDGE);\n  (device as WebGL2Device).gl.samplerParameterf(gls, GLenum.TEXTURE_MAX_LOD, desc.lodMaxClamp || 32);\n  (device as WebGL2Device).gl.samplerParameterf(gls, GLenum.TEXTURE_MIN_LOD, desc.lodMinClamp || 0);\n  if (desc.compare) {\n    (device as WebGL2Device).gl.samplerParameterf(gls, GLenum.TEXTURE_COMPARE_MODE, GLenum.COMPARE_REF_TO_TEXTURE);\n    (device as WebGL2Device).gl.samplerParameterf(gls, GLenum.TEXTURE_COMPARE_FUNC, desc.compare);\n  }\n  if ((desc.maxAnisotropy || 1) > 1) {\n    (device as WebGL2Device).gl.samplerParameterf(\n      gls,\n      GLenum.TEXTURE_MAX_ANISOTROPY_EXT,\n      Math.min(desc.maxAnisotropy || 1, (device as WebGL2Device).gl.getParameter(GLenum.MAX_TEXTURE_MAX_ANISOTROPY_EXT))\n    );\n  }\n\n  const finalizer = (gl: WebGL2RenderingContext) => {\n    gl.deleteSampler(gls);\n  };\n\n  const sampler = {\n    gls,\n    gl: (device as WebGL2Device).gl,\n    destroy(): void {\n      finalizer(this.gl);\n    }\n  } as WebGL2Sampler;\n\n  if (MUGL_FINALIZER) {\n    (gpuFinalizer as GPUFinalizer).register(sampler, { finalizer, gl: (device as WebGL2Device).gl });\n  }\n\n  return sampler;\n}\n\n//#endregion Sampler\n\n//#region Shader\n\n/**\n * Creates a new shader module object.\n * @param device the GPU device\n * @param desc the shader descriptor\n * @returns new shader object\n */\nexport function createShader(device: Device, desc: ShaderDescriptor): Shader {\n  const type = desc.usage === ShaderStage.Vertex ? GLenum.VERTEX_SHADER : GLenum.FRAGMENT_SHADER\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const gls = (device as WebGL2Device).gl.createShader(type)!;\n  (device as WebGL2Device).gl.shaderSource(gls, desc.code);\n  (device as WebGL2Device).gl.compileShader(gls);\n\n  if (MUGL_DEBUG) {\n    console.assert(\n      (device as WebGL2Device).gl.getShaderParameter(gls, GLenum.COMPILE_STATUS) || isDeviceLost(device),\n      `Failed to compile ${desc.usage === ShaderStage.Vertex ? 'vertex' : 'fragment'} shader: ${(device as WebGL2Device).gl.getShaderInfoLog(gls)}`\n    );\n  }\n\n  const finalizer = (gl: WebGL2RenderingContext) => {\n    gl.deleteShader(gls);\n  };\n\n  const shader = {\n    gl: (device as WebGL2Device).gl,\n    gls,\n    destroy(): void {\n      finalizer(this.gl);\n    }\n  } as WebGL2Shader;\n\n  if (MUGL_FINALIZER) {\n    (gpuFinalizer as GPUFinalizer).register(shader, { finalizer, gl: (device as WebGL2Device).gl });\n  }\n\n  return shader;\n}\n\n//#endregion Buffer\n\n//#region RenderPass\n\n/**\n * Creates a new render pass object.\n * @param device the GPU device\n * @param desc the render pass descriptor.\n * @returns new render pass\n */\nexport function createRenderPass(device: Device, desc: RenderPassDescriptor = {}): RenderPass {\n  let glfb: WebGLFramebuffer | null = null;\n  const glrfb: (WebGLFramebuffer | null)[] = [];\n  const depth = desc.depthStencil ? (desc.depthStencil.texture as WebGL2Texture) : null;\n  const withStencil = (depth && hasStencil(depth.format)) || false;\n\n  if (desc.colors && desc.colors.length) {\n    // An offscreen pass, need to create a framebuffer with color- and depth attachments\n    glfb = (device as WebGL2Device).gl.createFramebuffer();\n    (device as WebGL2Device).gl.bindFramebuffer(GLenum.FRAMEBUFFER, glfb);\n\n    for (let i = 0; i < desc.colors.length; ++i) {\n      if ((desc.colors[i].view.texture as WebGL2Texture).samples > 1) {\n        // Attach multisample renderbuffer for MSAA offscreen rendering\n        (device as WebGL2Device).gl.framebufferRenderbuffer(GLenum.FRAMEBUFFER, GLenum.COLOR_ATTACHMENT0 + i, GLenum.RENDERBUFFER,\n          (desc.colors[i].view.texture as WebGL2Texture).glrb);\n      } else {\n        framebufferTexture((device as WebGL2Device).gl, GLenum.COLOR_ATTACHMENT0 + i, desc.colors[i].view);\n      }\n    }\n\n    // TODO: [Feature] implement multiview\n    if (desc.colors.length > 1) {\n      (device as WebGL2Device).gl.drawBuffers(desc.colors.map((_, i) => GLenum.COLOR_ATTACHMENT0 + i));\n    }\n\n    // Attach optional depth-stencil buffer to framebuffer\n    if (depth) {\n      if (depth.glrb) { // Use renderbuffer if exist\n        (device as WebGL2Device).gl.framebufferRenderbuffer(GLenum.FRAMEBUFFER, withStencil ? GLenum.DEPTH_STENCIL_ATTACHMENT : GLenum.DEPTH_ATTACHMENT,\n          GLenum.RENDERBUFFER, depth.glrb);\n      } else { // Use depth texture\n        if (MUGL_DEBUG && !isDepthStencil(depth.format)) {\n          console.error('Invalid depth texture format', depth);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        framebufferTexture((device as WebGL2Device).gl, withStencil ? GLenum.DEPTH_STENCIL_ATTACHMENT : GLenum.DEPTH_ATTACHMENT, desc.depthStencil!);\n      }\n    }\n\n    if (MUGL_DEBUG) {\n      console.assert(\n        (device as WebGL2Device).gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || isDeviceLost(device),\n        'Framebuffer completeness check failed'\n      );\n    }\n\n    // WebGL has no support for multisample textures. We will render to MSAA renderbuffers\n    // and blit to the resolve renderbuffers which have textures attached.\n    for (let i = 0; i < desc.colors.length; ++i) {\n      glrfb.push((desc.colors[i].view.texture as WebGL2Texture).samples > 1 ?\n        createResolveFrameBuffer((device as WebGL2Device).gl, GLenum.COLOR_ATTACHMENT0, desc.colors[i].view) : null);\n    }\n    glrfb.push(depth && depth.samples > 1 && depth.glt ?\n      createResolveFrameBuffer((device as WebGL2Device).gl, withStencil ?\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        GLenum.DEPTH_STENCIL_ATTACHMENT : GLenum.DEPTH_ATTACHMENT, desc.depthStencil!) : null);\n  }\n\n  const finalizer = (gl: WebGL2RenderingContext) => {\n    gl.deleteFramebuffer(glfb);\n    for (const fb of glrfb) {\n      gl.deleteFramebuffer(fb);\n    }\n  };\n\n  const pass = {\n    gl: (device as WebGL2Device).gl,\n    glfb, glrfb, depth,\n    color: desc.colors ? desc.colors.map((c) => c.view.texture as WebGL2Texture) : [],\n    clearColors: desc.colors ? desc.colors.map((c) => c.clear) : [],\n    clearColor: desc.clearColor,\n    clearDepth: desc.clearDepth,\n    clearStencil: desc.clearStencil,\n    destroy(): void {\n      finalizer(this.gl);\n    }\n  } as WebGL2RenderPass;\n\n  if (MUGL_FINALIZER) {\n    (gpuFinalizer as GPUFinalizer).register(pass, { finalizer, gl: (device as WebGL2Device).gl });\n  }\n\n  return pass;\n}\n\n//#endregion RenderPass\n\n//#region BindGroup\n\n/**\n * Creates a new pipeline bind group layout object.\n * @param device the GPU device\n * @param desc the bind group layout descriptor\n * @returns new bind group layout object\n */\nexport function createBindGroupLayout(device: Device, desc: BindGroupLayoutDescriptor): BindGroupLayout {\n  return {\n    entries: desc.entries.map((entry, binding) => ({ binding, ...entry })),\n    destroy(): void {\n      // noop\n    }\n  } as WebGL2BindGroupLayout;\n}\n\n/**\n * Creates a new pipeline bind group object.\n * @param device the GPU device\n * @param desc the bind group descriptor\n * @returns new bind group object\n */\nexport function createBindGroup(device: Device, desc: BindGroupDescriptor): BindGroup {\n  return {\n    entries: desc.entries.map((entry, binding) => ({ binding, ...entry })),\n    destroy(): void {\n      // noop\n    }\n  } as WebGL2BindGroup;\n}\n\n//#endregion BindGroup\n\n//#region RenderPipeline\n\n/**\n * Creates a new render pipeline state object.\n * @param device the GPU device\n * @param desc the pipeline descriptor\n * @returns new render pipeline object\n */\nexport function createRenderPipeline(device: Device, desc: RenderPipelineDescriptor): RenderPipeline {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const glp = compileShaderProgram(device, (desc.vertex as WebGL2Shader).gls!, (desc.fragment as WebGL2Shader).gls!);\n  const cache: UniformCache[][] = [];\n  const textureSlots: Record<string, number> = {};\n\n  // Populate uniform cache\n  let bufCount = 0;\n  let texCount = 0;\n  if (desc.bindGroups) {\n    for (let i = 0; i < desc.bindGroups.length; ++i) {\n      const entries = (desc.bindGroups[i] as WebGL2BindGroupLayout).entries;\n      cache.push([]);\n\n      for (let j = 0; j < entries.length; ++j) {\n        const entry = entries[j];\n        let loc = null;\n        let index = GLenum.INVALID_INDEX;\n\n        if (entry.type === BindingType.Buffer) {\n          index = (device as WebGL2Device).gl.getUniformBlockIndex(glp, entry.label);\n          (device as WebGL2Device).gl.uniformBlockBinding(glp, index, bufCount++);\n        } else if (entry.type === BindingType.Texture) {\n          loc = (device as WebGL2Device).gl.getUniformLocation(glp, entry.label);\n          textureSlots[entry.label] = texCount++;\n        }\n\n        cache[i][entry.binding] = {\n          ...entry,\n          loc,\n          index,\n          slot: entry.type === BindingType.Buffer ? bufCount - 1 :\n            entry.type === BindingType.Texture ? texCount - 1 : 0,\n        };\n      }\n    }\n\n    // Sampler needs to use the matching texture slot\n    for (let i = 0; i < desc.bindGroups.length; ++i) {\n      const entries = (desc.bindGroups[i] as WebGL2BindGroupLayout).entries;\n      for (let j = 0; j < entries.length; ++j) {\n        if (entries[j].type === BindingType.Sampler) {\n          if (textureSlots[entries[j].label]) {\n            cache[i][entries[j].binding].slot = textureSlots[entries[j].label];\n          }\n        }\n      }\n    }\n  }\n\n  const finalizer = (gl: WebGL2RenderingContext) => {\n    gl.deleteProgram(glp);\n  };\n\n  const pipeline = {\n    gl: (device as WebGL2Device).gl,\n    glp,\n    buffers: desc.buffers,\n    cache,\n    state: createPipelineState(desc),\n    destroy(): void {\n      finalizer(this.gl);\n    }\n  } as WebGL2RenderPipeline;\n\n\n  if (MUGL_FINALIZER) {\n    (gpuFinalizer as GPUFinalizer).register(pipeline, { finalizer, gl: (device as WebGL2Device).gl });\n  }\n\n  return pipeline;\n}\n\n//#endregion RenderPipeline\n\n//#region Read/Write\n\n/**\n * Reads data from a buffer.\n * @param device the GPU device\n * @param buffer the GPU buffer to read from\n * @param out the output CPU buffer\n * @param offset othe byte offset into GPU buffer to begin reading from. Defaults to 0\n * @returns a future\n */\nexport function readBuffer(device: Device, buffer: Buffer, out: Uint8Array, offset: UInt = 0): Future {\n  const future = { status: FutureStatus.Pending };\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  getBufferSubData((device as WebGL2Device).gl, (buffer as WebGL2Buffer).type, (buffer as WebGL2Buffer).glb!, offset, out.byteLength)\n    .then(\n      data => {\n        out.set(data);\n        future.status = FutureStatus.Done;\n      },\n      () => (future.status = FutureStatus.Error)\n    );\n  return future;\n}\n\n/**\n * Writes data to a buffer.\n * @param device the GPU device\n * @param buffer the buffer to write to\n * @param data the buffer data\n * @param offset the byte offset into GPU buffer to begin writing to. Defaults to 0\n */\nexport function writeBuffer(device: Device, buffer: Buffer, data: ArrayBufferView, offset: UInt = 0): void {\n  (device as WebGL2Device).gl.bindBuffer((buffer as WebGL2Buffer).type, (buffer as WebGL2Buffer).glb);\n  (device as WebGL2Device).gl.bufferSubData((buffer as WebGL2Buffer).type, offset, data);\n}\n\n/**\n * Copies data from a buffer to another buffer.\n * @param device the GPU device\n * @param src the buffer to read from\n * @param dst the buffer to write to\n * @param size the byte size of the GPU buffer to read. Defaults to the whole buffer\n * @param srcOffset the byte offset into src buffer to begin reading from. Defaults to 0\n * @param dstOffset the byte offset into dst buffer to begin writing to. Defaults to 0\n */\nexport function copyBuffer(\n  device: Device, src: Buffer, dst: Buffer, size: UInt = (src as WebGL2Buffer).size, srcOffset: UInt = 0, dstOffset: UInt = 0\n): void {\n  (device as WebGL2Device).gl.bindBuffer(GLenum.COPY_READ_BUFFER, (src as WebGL2Buffer).glb);\n  (device as WebGL2Device).gl.bindBuffer(GLenum.COPY_WRITE_BUFFER, (dst as WebGL2Buffer).glb);\n  (device as WebGL2Device).gl.copyBufferSubData(GLenum.COPY_READ_BUFFER, GLenum.COPY_WRITE_BUFFER, srcOffset, dstOffset, size);\n}\n\n/**\n * Generates mipmap for a texture.\n * @param device the GPU device\n * @param texture the texture\n * @param hint mipmap quality hint\n */\nexport function generateMipmap(device: Device, texture: Texture, hint: MipmapHint = GLenum.DONT_CARE): void {\n  (device as WebGL2Device).gl.activeTexture(GLenum.TEXTURE0);\n  (device as WebGL2Device).gl.bindTexture((texture as WebGL2Texture).type, (texture as WebGL2Texture).glt);\n  (device as WebGL2Device).gl.hint(GLenum.GENERATE_MIPMAP_HINT, hint);\n  (device as WebGL2Device).gl.generateMipmap((texture as WebGL2Texture).type);\n}\n\n/**\n * Writes subregion of data array to a texture.\n * @param device the GPU device\n * @param texture the texture subregion to write to.\n * @param data the texture data\n * @param layout the data layout\n * @param size the size of the data subregion to write\n */\nexport function writeTexture(\n  device: Device,\n  { texture, mipLevel = 0, origin: [x, y, z] = [0, 0, 0] }: ImageCopyTexture,\n  data: ArrayBufferView,\n  { offset = 0, bytesPerRow, rowsPerImage = 0 }: ImageDataLayout,\n  [width, height, depth]: Extent3D = [(texture as WebGL2Texture).width - x, (texture as WebGL2Texture).height - y, (texture as WebGL2Texture).depth - z]\n): void {\n  const glFormat = glTexelFormat((texture as WebGL2Texture).format);\n  const glType = glTexelType((texture as WebGL2Texture).format);\n  const isCube = (texture as WebGL2Texture).type === GLenum.TEXTURE_CUBE_MAP;\n  const target = isCube ? GLenum.TEXTURE_CUBE_MAP_POSITIVE_X + z : (texture as WebGL2Texture).type;\n\n  (device as WebGL2Device).gl.activeTexture(GLenum.TEXTURE0);\n  (device as WebGL2Device).gl.bindTexture((texture as WebGL2Texture).type, (texture as WebGL2Texture).glt);\n\n  const pixelSize = glTexelSize((texture as WebGL2Texture).format);\n  const imageHeight = rowsPerImage || height;\n  const pixelsPerRow = Math.floor(bytesPerRow / pixelSize);\n  const offsetAligned = offset - offset % bytesPerRow;\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_IMAGE_HEIGHT, imageHeight);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_ROW_LENGTH, pixelsPerRow);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_PIXELS, Math.floor((offset % bytesPerRow) / pixelSize));\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_ROWS, 0);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_IMAGES, 0);\n\n  if (is3DTexture((texture as WebGL2Texture).type)) {\n    (device as WebGL2Device).gl.texSubImage3D(target, mipLevel, x, y, z, width, height, depth, (texture as WebGL2Texture).format, glType, data, offsetAligned);\n  } else if (isCube) {\n    for (let slice = z; slice < z + depth; ++slice) {\n      (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_ROWS, slice * pixelsPerRow * imageHeight);\n      (device as WebGL2Device).gl.texSubImage2D(target + slice, mipLevel, x, y, width, height, glFormat, glType, data, offsetAligned);\n    }\n  } else { // 2D texture\n    (device as WebGL2Device).gl.texSubImage2D(target, mipLevel, x, y, width, height, glFormat, glType, data, offsetAligned);\n  }\n}\n\n/**\n * Uploads an image subregion to a texture.\n * @param device the GPU device\n * @param src the image subregion to write\n * @param dst the texture subregion to write to.\n * @param size the size of image subregion to write\n */\nexport function copyExternalImageToTexture(\n  device: Device,\n  { src, origin: [srcX, srcY] = [0, 0] }: ImageCopyExternalImage,\n  { texture, mipLevel = 0, origin: [x, y, z] = [0, 0, 0] }: ImageCopyTexture,\n  [width, height]: Extent2D = [src.width - srcX, src.height - srcY]\n): void {\n  const glType = glTexelType((texture as WebGL2Texture).format);\n  const isCube = (texture as WebGL2Texture).type === GLenum.TEXTURE_CUBE_MAP;\n  const target = isCube ? GLenum.TEXTURE_CUBE_MAP_POSITIVE_X + z : (texture as WebGL2Texture).type;\n\n  (device as WebGL2Device).gl.activeTexture(GLenum.TEXTURE0);\n  (device as WebGL2Device).gl.bindTexture((texture as WebGL2Texture).type, (texture as WebGL2Texture).glt);\n\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_PIXELS, srcX);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_ROWS, srcY);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_SKIP_IMAGES, 0);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.UNPACK_IMAGE_HEIGHT, 0);\n\n  if (is3DTexture((texture as WebGL2Texture).type)) {\n    (device as WebGL2Device).gl.texSubImage3D(target, mipLevel, x, y, z, width, height, 1, (texture as WebGL2Texture).format, glType, src);\n  } else {\n    (device as WebGL2Device).gl.texSubImage2D(target, mipLevel, x, y, width, height, glTexelFormat((texture as WebGL2Texture).format), glType, src);\n  }\n}\n\n/**\n * Copies subregion of a texture to another texture.\n * @param device the GPU device\n * @param src the texture subregion to read from.\n * @param dst the texture subregion to write to.\n * @param size the size of the texture subregion to copy\n */\nexport function copyTexture(\n  device: Device,\n  { texture, mipLevel = 0, origin: [x, y, z] = [0, 0, 0] }: ImageCopyTexture,\n  { texture: dstTexture, mipLevel: dstMipLevel = 0, origin: [dstX, dstY, dstZ] = [0, 0, 0] }: ImageCopyTexture,\n  [width, height, depth]: Extent3D = [(texture as WebGL2Texture).width - x, (texture as WebGL2Texture).height - y, (texture as WebGL2Texture).depth - z]\n): void {\n  // Bind dst\n  const isCube = (dstTexture as WebGL2Texture).type === GLenum.TEXTURE_CUBE_MAP;\n  const target = isCube ? GLenum.TEXTURE_CUBE_MAP_POSITIVE_X + dstZ : (dstTexture as WebGL2Texture).type;\n  (device as WebGL2Device).gl.activeTexture(GLenum.TEXTURE0);\n  (device as WebGL2Device).gl.bindTexture((dstTexture as WebGL2Texture).type, (dstTexture as WebGL2Texture).glt);\n\n  // Bind src to framebuffer then copy to dst\n  (device as WebGL2Device).gl.readBuffer(GLenum.COLOR_ATTACHMENT0);\n  (device as WebGL2Device).gl.bindFramebuffer(GLenum.FRAMEBUFFER, (device as WebGL2Device).state.copyFrameBuffer);\n\n  if (is3DTexture((texture as WebGL2Texture).type) || (texture as WebGL2Texture).type === GLenum.TEXTURE_CUBE_MAP) {\n    for (let slice = z; slice < z + depth; ++slice) {  // Copy each slice. TODO: Can be expensive for large 3D textures!\n      framebufferTexture((device as WebGL2Device).gl, GLenum.COLOR_ATTACHMENT0, { texture, mipLevel, slice });\n      if (MUGL_DEBUG) {\n        console.assert(\n          (device as WebGL2Device).gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || (device as WebGL2Device).gl.isContextLost(),\n          'Framebuffer completeness check failed for copyTexture'\n        );\n      }\n      if (is3DTexture((dstTexture as WebGL2Texture).type)) {\n        (device as WebGL2Device).gl.copyTexSubImage3D(target + (isCube ? slice : 0), dstMipLevel, dstX, dstY, dstZ, x, y, width, height);\n      } else {\n        (device as WebGL2Device).gl.copyTexSubImage2D(target + (isCube ? slice : 0), dstMipLevel, dstX, dstY, x, y, width, height);\n      }\n    }\n  } else { // src is 2D texture\n    const slice = 0;\n    framebufferTexture((device as WebGL2Device).gl, GLenum.COLOR_ATTACHMENT0, { texture, mipLevel, slice });\n    if (MUGL_DEBUG) {\n      console.assert(\n        (device as WebGL2Device).gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || (device as WebGL2Device).gl.isContextLost(),\n        'Framebuffer completeness check failed for copyTexture'\n      );\n    }\n    if (is3DTexture((dstTexture as WebGL2Texture).type)) {\n      (device as WebGL2Device).gl.copyTexSubImage3D(target + (isCube ? slice : 0), dstMipLevel, dstX, dstY, dstZ, x, y, width, height);\n    } else {\n      (device as WebGL2Device).gl.copyTexSubImage2D(target + (isCube ? slice : 0), dstMipLevel, dstX, dstY, x, y, width, height);\n    }\n  }\n\n  // Reset to original framebuffer\n  (device as WebGL2Device).gl.bindFramebuffer(\n    GLenum.FRAMEBUFFER,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    (device as WebGL2Device).pass ? (device as WebGL2Device).pass!.glfb : null\n  );\n}\n\n/**\n * Copies subregion of a texture to a buffer.\n * @param device the GPU device\n * @param src the texture subregion to read from.\n * @param dst the buffer to write to\n * @param layout the buffer data layout to use for storing the texture\n * @param size the size of the texture subregion to copy\n */\nexport function copyTextureToBuffer(\n  device: Device,\n  { texture, mipLevel = 0, origin: [x, y, z] = [0, 0, 0] }: ImageCopyTexture,\n  dst: Buffer,\n  { offset = 0, bytesPerRow, rowsPerImage = 0 }: ImageDataLayout,\n  [width, height, depth]: Extent3D = [(texture as WebGL2Texture).width - x, (texture as WebGL2Texture).height - y, (texture as WebGL2Texture).depth - z]\n): void {\n  (device as WebGL2Device).gl.bindBuffer(GLenum.PIXEL_PACK_BUFFER, dst);\n  (device as WebGL2Device).gl.readBuffer(GLenum.COLOR_ATTACHMENT0);\n  (device as WebGL2Device).gl.bindFramebuffer(GLenum.FRAMEBUFFER, (device as WebGL2Device).state.copyFrameBuffer);\n\n  // TODO: validate formats. Not all formats can be read.\n  // See: https://webgl2fundamentals.org/webgl/lessons/webgl-readpixels.html\n  const type = glTexelType((texture as WebGL2Texture).format);\n  const format = glTexelFormat((texture as WebGL2Texture).format);\n  const pixelSize = glTexelSize((texture as WebGL2Texture).format);\n  const imageHeight = rowsPerImage || height;\n  const pixelsPerRow = Math.floor(bytesPerRow / pixelSize);\n  const offsetAligned = offset - offset % bytesPerRow;\n  (device as WebGL2Device).gl.pixelStorei(GLenum.PACK_ROW_LENGTH, pixelsPerRow);\n  (device as WebGL2Device).gl.pixelStorei(GLenum.PACK_SKIP_PIXELS, Math.floor((offset % bytesPerRow) / pixelSize));\n  (device as WebGL2Device).gl.pixelStorei(GLenum.PACK_SKIP_ROWS, 0);\n\n  if (is3DTexture((texture as WebGL2Texture).type) || (texture as WebGL2Texture).type === GLenum.TEXTURE_CUBE_MAP) {\n    for (let slice = z; slice < z + depth; ++slice) {  // Copy each slice. TODO: Can be expensive for large 3D textures!\n      framebufferTexture((device as WebGL2Device).gl, GLenum.COLOR_ATTACHMENT0, { texture, mipLevel, slice });\n      if (MUGL_DEBUG) {\n        console.assert(\n          (device as WebGL2Device).gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || (device as WebGL2Device).gl.isContextLost(),\n          'Framebuffer completeness check failed for copyTexture'\n        );\n      }\n      (device as WebGL2Device).gl.readPixels(x, y, width, height, format, type, offsetAligned + (slice - z) * bytesPerRow * imageHeight);\n    }\n  } else { // src is 2D texture\n    const slice = 0;\n    framebufferTexture((device as WebGL2Device).gl, GLenum.COLOR_ATTACHMENT0, { texture, mipLevel, slice });\n    if (MUGL_DEBUG) {\n      console.assert(\n        (device as WebGL2Device).gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || (device as WebGL2Device).gl.isContextLost(),\n        'Framebuffer completeness check failed for copyTexture'\n      );\n    }\n    (device as WebGL2Device).gl.readPixels(x, y, width, height, format, type, offsetAligned);\n  }\n\n  // Reset to original framebuffer\n  (device as WebGL2Device).gl.bindFramebuffer(\n    GLenum.FRAMEBUFFER,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    (device as WebGL2Device).pass ? (device as WebGL2Device).pass!.glfb : null\n  );\n}\n\n//#endregion Read/Write\n\n//#region Render\n\n/**\n * Starts a render pass.\n * @param device the GPU device\n * @param pass the render pass\n */\nexport function beginRenderPass(device: Device, pass: RenderPass): void {\n  let width = (device as WebGL2Device).gl.drawingBufferWidth;\n  let height = (device as WebGL2Device).gl.drawingBufferHeight;\n  if ((pass as WebGL2RenderPass).color.length) { // Offscreen pass\n    width = (pass as WebGL2RenderPass).color[0].width;\n    height = (pass as WebGL2RenderPass).color[0].height;\n  }\n\n  // Bind the pass framebuffer\n  (device as WebGL2Device).gl.bindFramebuffer(GLenum.FRAMEBUFFER, (pass as WebGL2RenderPass).glfb);\n\n  // Reset viewport and scissor. Necessary for buffer clearing\n  (device as WebGL2Device).gl.viewport(0, 0, width, height);\n  (device as WebGL2Device).gl.depthRange(0, 1);\n  if ((device as WebGL2Device).state.scissor) {\n    (device as WebGL2Device).state.scissor = false;\n    glToggle((device as WebGL2Device).gl, GLenum.SCISSOR_TEST, false);\n  }\n\n  // Clear color/depth/stencil, override masks as necessary to allow clearing\n  /* eslint-disable @typescript-eslint/no-non-null-assertion */\n  let clearMask = 0;\n  if (!isNaN((pass as WebGL2RenderPass).clearDepth!)) {\n    clearMask |= GLenum.DEPTH_BUFFER_BIT;\n    (device as WebGL2Device).gl.clearDepth((pass as WebGL2RenderPass).clearDepth!);\n    applyDepthMask((device as WebGL2Device).gl, (device as WebGL2Device).state.state.depthWrite, true);\n    (device as WebGL2Device).state.state.depthWrite = true;\n  }\n  if (!isNaN((pass as WebGL2RenderPass).clearStencil!)) {\n    clearMask |= GLenum.STENCIL_BUFFER_BIT;\n    (device as WebGL2Device).gl.clearStencil((pass as WebGL2RenderPass).clearStencil!);\n    applyStencilMask((device as WebGL2Device).gl, (device as WebGL2Device).state.state.stencilWriteMask, BYTE_MASK);\n    (device as WebGL2Device).state.state.stencilWriteMask = BYTE_MASK;\n  }\n  applyColorMask((device as WebGL2Device).gl, (device as WebGL2Device).state.state.blendWriteMask, ColorWrite.All);\n  (device as WebGL2Device).state.state.blendWriteMask = ColorWrite.All;\n\n  if ((pass as WebGL2RenderPass).color.length) { // Offscreen pass\n    for (let i = 0; i < (pass as WebGL2RenderPass).color.length; ++i) {\n      if ((pass as WebGL2RenderPass).clearColors[i]) {\n        const type = glClearType((pass as WebGL2RenderPass).color[i].format);\n        if (type === GLenum.INT) {\n          (device as WebGL2Device).gl.clearBufferiv(GLenum.COLOR, i, (pass as WebGL2RenderPass).clearColors[i]!);\n        } else if (type === GLenum.UNSIGNED_INT) {\n          (device as WebGL2Device).gl.clearBufferuiv(GLenum.COLOR, i, (pass as WebGL2RenderPass).clearColors[i]!);\n        } else { // type === GLenum.FLOAT\n          (device as WebGL2Device).gl.clearBufferfv(GLenum.COLOR, i, (pass as WebGL2RenderPass).clearColors[i]!);\n        }\n      }\n    }\n  } else if ((pass as WebGL2RenderPass).clearColor) { // for default pass\n    clearMask |= GLenum.COLOR_BUFFER_BIT;\n    (device as WebGL2Device).gl.clearColor(...(pass as WebGL2RenderPass).clearColor!);\n  }\n  /* eslint-enable @typescript-eslint/no-non-null-assertion */\n\n  if (clearMask) {\n    (device as WebGL2Device).gl.clear(clearMask);\n  }\n\n  (device as WebGL2Device).pass = pass as WebGL2RenderPass;\n}\n\n/**\n * Convenient method to start a default render pass.\n * @param device the GPU device\n * @param desc the render pass descriptor\n */\nexport function beginDefaultPass(device: Device, desc: DefaultRenderPassDescriptor = {}): void {\n  // Unbind any framebuffer\n  (device as WebGL2Device).gl.bindFramebuffer(GLenum.FRAMEBUFFER, null);\n\n  // Reset viewport and scissor. Necessary for buffer clearing\n  (device as WebGL2Device).gl.viewport(0, 0, (device as WebGL2Device).gl.drawingBufferWidth, (device as WebGL2Device).gl.drawingBufferHeight);\n  (device as WebGL2Device).gl.depthRange(0, 1);\n  if ((device as WebGL2Device).state.scissor) {\n    (device as WebGL2Device).state.scissor = false;\n    glToggle((device as WebGL2Device).gl, GLenum.SCISSOR_TEST, false);\n  }\n\n  // Clear color/depth/stencil, override masks as necessary to allow clearing\n  /* eslint-disable @typescript-eslint/no-non-null-assertion */\n  let clearMask = 0;\n  if (!isNaN(desc.clearDepth!)) {\n    clearMask |= GLenum.DEPTH_BUFFER_BIT;\n    (device as WebGL2Device).gl.clearDepth(desc.clearDepth!);\n    applyDepthMask((device as WebGL2Device).gl, (device as WebGL2Device).state.state.depthWrite, true);\n    (device as WebGL2Device).state.state.depthWrite = true;\n  }\n  if (!isNaN(desc.clearStencil!)) {\n    clearMask |= GLenum.STENCIL_BUFFER_BIT;\n    (device as WebGL2Device).gl.clearStencil(desc.clearStencil!);\n    applyStencilMask((device as WebGL2Device).gl, (device as WebGL2Device).state.state.stencilWriteMask, BYTE_MASK);\n    (device as WebGL2Device).state.state.stencilWriteMask = BYTE_MASK;\n  }\n  if (desc.clearColor) {\n    clearMask |= GLenum.COLOR_BUFFER_BIT;\n    (device as WebGL2Device).gl.clearColor(...desc.clearColor!);\n    applyColorMask((device as WebGL2Device).gl, (device as WebGL2Device).state.state.blendWriteMask, ColorWrite.All);\n    (device as WebGL2Device).state.state.blendWriteMask = ColorWrite.All;\n  }\n  /* eslint-enable @typescript-eslint/no-non-null-assertion */\n\n  if (clearMask) {\n    (device as WebGL2Device).gl.clear(clearMask);\n  }\n\n  (device as WebGL2Device).pass = null;\n}\n\n/**\n * Submits the current render pass.\n * @param device the GPU device\n */\nexport function submitRenderPass(device: Device): void {\n  if ((device as WebGL2Device).pass) {\n    // Blit main framebuffer content to MSAA resolve framebuffers so that texture contents are updated\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    for (let i = 0; i < (device as WebGL2Device).pass!.color.length; ++i) {\n      if ((device as WebGL2Device).pass!.glrfb[i]) {\n        blitFramebuffer((device as WebGL2Device).gl, (device as WebGL2Device).pass!.glfb, (device as WebGL2Device).pass!.glrfb[i],\n          (device as WebGL2Device).pass!.color[i], GLenum.COLOR_BUFFER_BIT, GLenum.COLOR_ATTACHMENT0 + i);\n      }\n    }\n    const depthFb = (device as WebGL2Device).pass!.glrfb[(device as WebGL2Device).pass!.glrfb.length - 1];\n    if ((device as WebGL2Device).pass!.depth && depthFb) {\n      blitFramebuffer((device as WebGL2Device).gl, (device as WebGL2Device).pass!.glfb, depthFb,\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        (device as WebGL2Device).pass!.depth!, GLenum.DEPTH_BUFFER_BIT | GLenum.STENCIL_BUFFER_BIT);\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n  (device as WebGL2Device).pass = null;\n}\n\n/**\n * Binds a RenderPipeline to the current render pass.\n * @param device the GPU device\n * @param pipeline the pipeline to bind\n */\nexport function setRenderPipeline(device: Device, pipeline: RenderPipeline): void {\n  // Optimization: pipeline unchanged, skip other updates\n  if ((device as WebGL2Device).state.pipeline === pipeline) {\n    return;\n  }\n\n  // Update shader program\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  if (!(device as WebGL2Device).state.pipeline || (device as WebGL2Device).state.pipeline!.glp !== (pipeline as WebGL2RenderPipeline).glp) {\n    (device as WebGL2Device).gl.useProgram((pipeline as WebGL2RenderPipeline).glp);\n  }\n\n  // Update pipeline state cache\n  applyPipelineState((device as WebGL2Device).gl, (device as WebGL2Device).state.state, (pipeline as WebGL2RenderPipeline).state, (device as WebGL2Device).state.stencilRef);\n  Object.assign((device as WebGL2Device).state.state, (pipeline as WebGL2RenderPipeline).state);\n\n  // Update buffer attributes cache\n  const attribEnabled: UInt[] = []; // Attribute enabled state bit flags (1 = originally enabled, 2 = should be enabled)\n  for (const { attributes } of (device as WebGL2Device).state.buffers) {\n    for (const { ptr } of attributes) {\n      attribEnabled[ptr[0]] = 1; // 1 = originally enabled, should disable if not used\n    }\n  }\n  (device as WebGL2Device).state.buffers = Array((pipeline as WebGL2RenderPipeline).buffers.length);\n  for (let slot = 0; slot < (pipeline as WebGL2RenderPipeline).buffers.length; ++slot) {\n    const { attributes, stride, stepMode = 0 } = (pipeline as WebGL2RenderPipeline).buffers[slot];\n    const bufAttrs: WebGL2Attribute[] = [];\n    (device as WebGL2Device).state.buffers[slot] = {\n      glb: null, attributes: bufAttrs, stride, step: stepMode, offset: 0, instanceOffset: 0\n    };\n    for (const { format, offset, shaderLocation } of attributes) {\n      attribEnabled[shaderLocation] = (attribEnabled[shaderLocation] || 0) + 2; // 2 = should be enabled\n      bufAttrs.push({\n        buffer: slot,\n        ptr: [\n          shaderLocation,\n          vertexSize(format),\n          vertexType(format),\n          vertexNormalized(format),\n          stride,\n          offset\n        ],\n        step: stepMode\n      });\n    }\n  }\n\n  // Enable / disable vertex attributes\n  // attribEnabled: 0 = unused, 1 = originally enabled, now should disable, 2 = originally disabled, should enable, 3 = keep enabled\n  for (let i = 0; i < attribEnabled.length; ++i) {\n    if (attribEnabled[i] === 2) {\n      (device as WebGL2Device).gl.enableVertexAttribArray(i);\n    } else if (attribEnabled[i] === 1) {\n      (device as WebGL2Device).gl.disableVertexAttribArray(i);\n    }\n  }\n\n  // Set pipeline as current\n  (device as WebGL2Device).state.pipeline = pipeline as WebGL2RenderPipeline;\n}\n\n/**\n * Binds an index buffer to the current render pass.\n * @param device the GPU device\n * @param buffer the buffer to bind\n */\nexport function setIndex(device: Device, buffer: Buffer): void {\n  if ((buffer as WebGL2Buffer).glb !== (device as WebGL2Device).state.index) {\n    (device as WebGL2Device).gl.bindBuffer(GLenum.ELEMENT_ARRAY_BUFFER, ((device as WebGL2Device).state.index = (buffer as WebGL2Buffer).glb));\n  }\n}\n\n/**\n * Binds a vertex buffer to a slot in the current render pass.\n * @param device the GPU device\n * @param slot the vertex slot to bind to\n * @param buffer the buffer to bind\n */\nexport function setVertex(device: Device, slot: number, buffer: Buffer, offset: UInt = 0): void {\n  const buf = (device as WebGL2Device).state.buffers[slot];\n  if (buf && (buf.glb !== (buffer as WebGL2Buffer).glb || buf.offset !== offset)) {\n    buf.glb = (buffer as WebGL2Buffer).glb;\n    buf.offset = offset;\n    buf.instanceOffset = 0;\n    vertexAttribs((device as WebGL2Device).gl, buf, offset);\n  }\n}\n\n/**\n * Binds a bind group to the current render pass.\n * @param device the GPU device\n * @param slot the bind group slot to bind to\n * @param bindGorup the bind group to use\n * @param offsets the dynamic offsets for dynamic buffers in this bind group\n */\nexport function setBindGroup(device: Device, slot: UInt, bindGroup: BindGroup, offsets: UIntArray = []): void {\n  if (!(device as WebGL2Device).state.pipeline) {\n    return; // Skipping updates. No effect if pipeline not bound\n  }\n\n  for (let i = 0, offsetIdx = 0; i < (bindGroup as WebGL2BindGroup).entries.length; ++i) {\n    const uniform = (bindGroup as WebGL2BindGroup).entries[i];\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const uniformInfo = (device as WebGL2Device).state.pipeline!.cache[slot] && (device as WebGL2Device).state.pipeline!.cache[slot][uniform.binding];\n    if (!uniformInfo) { // No such uniform\n      if (MUGL_DEBUG) {\n        console.warn(`Undefined uniform binding: ${uniform.binding}, slot: ${slot}`);\n      }\n      continue;\n    }\n\n    if (MUGL_DEBUG) {\n      if (uniform.buffer) {\n        console.assert(uniformInfo.type === BindingType.Buffer,\n          `Cannot bind buffer to uniform: ${uniformInfo.label}, binding: ${uniformInfo.binding}, slot: ${slot}`);\n\n        console.assert((uniform.buffer as WebGL2Buffer).type === GLenum.UNIFORM_BUFFER,\n          `Invalid buffer type bound to uniform buffer: ${uniformInfo.label}, binding: ${uniformInfo.binding}, slot: ${slot}`);\n\n        const dataSize = (device as WebGL2Device).gl.getActiveUniformBlockParameter(\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          (device as WebGL2Device).state.pipeline!.glp!,\n          uniformInfo.index,\n          GLenum.UNIFORM_BLOCK_DATA_SIZE\n        );\n        const alignment = (device as WebGL2Device).gl.getParameter(GLenum.UNIFORM_BUFFER_OFFSET_ALIGNMENT);\n        console.assert((uniform.buffer as WebGL2Buffer).size >= dataSize,\n          `Uniform buffer not large enough: ${uniformInfo.label}, binding: ${uniformInfo.binding}, slot: ${slot}, UNIFORM_BLOCK_DATA_SIZE: ${dataSize}, UNIFORM_BUFFER_OFFSET_ALIGNMENT: ${alignment}, size: ${(uniform.buffer as WebGL2Buffer).size}`);\n      } else if (uniform.texture) {\n        console.assert(uniformInfo.type === BindingType.Texture,\n          `Cannot bind texture to uniform: ${uniformInfo.label}, binding: ${uniformInfo.binding}, slot: ${slot}`);\n      } else if (uniform.sampler) {\n        console.assert(uniformInfo.type === BindingType.Sampler,\n          `Cannot bind sampler to uniform: ${uniformInfo.label}, binding: ${uniformInfo.binding}, slot: ${slot}`);\n      } else {\n        console.assert(false, `Either a buffer, texture, or sampler must be specified: ${uniformInfo.label}, binding: ${uniformInfo.binding}, slot: ${slot}`);\n      }\n    }\n\n    if (uniform.buffer) {\n      let offset = uniform.bufferOffset || 0;\n      if (uniformInfo.bufferDynamicOffset) {\n        offset += offsets[offsetIdx] || 0;\n        ++offsetIdx;\n      }\n\n      (device as WebGL2Device).gl.bindBufferRange(\n        GLenum.UNIFORM_BUFFER,\n        uniformInfo.slot,\n        (uniform.buffer as WebGL2Buffer).glb,\n        offset,\n        uniform.bufferSize || ((uniform.buffer as WebGL2Buffer).size - offset)\n      );\n    } else if (uniform.texture) {\n      (device as WebGL2Device).gl.activeTexture(GLenum.TEXTURE0 + uniformInfo.slot);\n      (device as WebGL2Device).gl.bindTexture((uniform.texture as WebGL2Texture).type, (uniform.texture as WebGL2Texture).glt);\n      (device as WebGL2Device).gl.uniform1i(uniformInfo.loc, uniformInfo.slot);\n    } else if (uniform.sampler) {\n      (device as WebGL2Device).gl.bindSampler(uniformInfo.slot, (uniform.sampler as WebGL2Sampler).gls);\n    }\n  }\n}\n\n/**\n * Submits a draw call in the current render pass.\n * @param device the GPU device\n * @param vertexCount the number of vertices to draw\n * @param instanceCount the number of instances to draw. Defaults to 1\n * @param firstVertex the offset to the first vertex to draw. Defaults to 0\n * @param firstInstance the offset to the first instance to draw. Defaults to 0\n */\nexport function draw(device: Device, vertexCount: number, instanceCount = 1, firstVertex = 0, firstInstance: UInt = 0): void {\n  for (const buf of (device as WebGL2Device).state.buffers) {\n    if (buf.step && buf.instanceOffset !== firstInstance) {\n      buf.instanceOffset = firstInstance;\n      vertexAttribs((device as WebGL2Device).gl, buf, firstInstance * buf.stride);\n    }\n  }\n  (device as WebGL2Device).gl.drawArraysInstanced((device as WebGL2Device).state.state.topology, firstVertex, vertexCount, instanceCount);\n}\n\n/**\n * Submits an indexed draw call in the current render pass.\n * @param device the GPU device\n * @param indexCount the number of vertices to draw\n * @param instanceCount the number of instances to draw. Defaults to 1\n * @param firstVertex the offset to the first vertex to draw. Defaults to 0\n * @param firstInstance the offset to the first instance to draw. Defaults to 0\n */\nexport function drawIndexed(device: Device, indexCount: number, instanceCount = 1, firstIndex = 0, firstInstance: UInt = 0): void {\n  for (const buf of (device as WebGL2Device).state.buffers) {\n    if (buf.step && buf.instanceOffset !== firstInstance) {\n      buf.instanceOffset = firstInstance;\n      vertexAttribs((device as WebGL2Device).gl, buf, firstInstance * buf.stride);\n    }\n  }\n  (device as WebGL2Device).gl.drawElementsInstanced(\n    (device as WebGL2Device).state.state.topology, indexCount, (device as WebGL2Device).state.state.indexFormat,\n    firstIndex * indexByteSize((device as WebGL2Device).state.state.indexFormat), instanceCount\n  );\n}\n\n/**\n * Sets the 3D viewport area for the current render pass.\n * @param device the GPU device\n * @param x x offset\n * @param y y offset\n * @param width width\n * @param height height\n * @param minDepth min depth. Defaults to 0\n * @param maxDepth max depth. Defaults to 1\n */\nexport function setViewport(device: Device, x: number, y: number, width: number, height: number, minDepth = 0, maxDepth = 1): void {\n  (device as WebGL2Device).gl.viewport(x, y, width, height);\n  (device as WebGL2Device).gl.depthRange(minDepth, maxDepth);\n}\n\n/**\n * Sets the scissor rectangle for the current render pass.\n * @param device the GPU device\n * @param x x offset\n * @param y y offset\n * @param width width\n * @param height height\n */\nexport function setScissorRect(device: Device, x: number, y: number, width: number, height: number): void {\n  if (!(device as WebGL2Device).state.scissor) {\n    glToggle((device as WebGL2Device).gl, GLenum.SCISSOR_TEST, true);\n    (device as WebGL2Device).state.scissor = true;\n  }\n  (device as WebGL2Device).gl.scissor(x, y, width, height);\n}\n\n/**\n * Sets the blend-constant color for the current render pass.\n * @param device the GPU device\n * @param color the blend color\n */\nexport function setBlendConst(device: Device, color: Color): void {\n  (device as WebGL2Device).gl.blendColor(...color);\n}\n\n/**\n * Sets the stencil reference value for the current render pass.\n * @param device the GPU device\n * @param ref the stencil reference value.\n */\nexport function setStencilRef(device: Device, ref: UInt): void {\n  if ((device as WebGL2Device).state.stencilRef !== ref) {\n    const { stencilFrontCompare, stencilBackCompare, stencilReadMask } = (device as WebGL2Device).state.state;\n    (device as WebGL2Device).gl.stencilFuncSeparate(GLenum.FRONT, stencilFrontCompare, ref, stencilReadMask);\n    (device as WebGL2Device).gl.stencilFuncSeparate(GLenum.BACK, stencilBackCompare, ref, stencilReadMask);\n    (device as WebGL2Device).state.stencilRef = ref;\n  }\n}\n\n//#endregion Render\n\n//#region Internal Types\n\ninterface WebGL2State {\n  copyFrameBuffer: WebGLFramebuffer | null,\n  buffers: WebGL2BufferAttributes[],\n  state: WebGL2PipelineState;\n  pipeline: WebGL2RenderPipeline | null;\n  index: WebGLBuffer | null;\n  stencilRef: UInt;\n  scissor: boolean;\n}\n\ninterface WebGL2Attribute {\n  buffer: UInt;\n  ptr: [\n    loc: UInt,\n    size: UInt,\n    type: UInt,\n    normalized: boolean,\n    stride: UInt,\n    offset: UInt\n  ];\n  step: UInt;\n}\n\ninterface WebGL2BufferAttributes {\n  glb: WebGLBuffer | null;\n  attributes: WebGL2Attribute[];\n  stride: UInt;\n  step: UInt;\n  offset: UInt;\n  instanceOffset: UInt;\n}\n\ninterface WebGL2PipelineState {\n  topology: UInt;\n  indexFormat: UInt;\n  frontFace: UInt;\n  cullMode: UInt;\n\n  sampleCount: UInt;\n  alphaToCoverage: boolean;\n\n  depth: boolean;\n  depthWrite: boolean;\n  depthFormat: UInt;\n  depthCompare: UInt;\n  depthBias: Float;\n  depthBiasSlopeScale: Float;\n\n  stencil: boolean;\n  stencilFrontCompare: UInt;\n  stencilFrontFailOp: UInt;\n  stencilFrontDepthFailOp: UInt;\n  stencilFrontPassOp: UInt;\n  stencilBackCompare: UInt;\n  stencilBackFailOp: UInt;\n  stencilBackDepthFailOp: UInt;\n  stencilBackPassOp: UInt;\n  stencilReadMask: UInt;\n  stencilWriteMask: UInt;\n\n  blend: boolean;\n  blendWriteMask: UInt;\n  blendColorOp: UInt;\n  blendColorSrcFactor: UInt;\n  blendColorDstFactor: UInt;\n  blendAlphaOp: UInt;\n  blendAlphaSrcFactor: UInt;\n  blendAlphaDstFactor: UInt;\n}\n\n/** An entry of uniform info cache */\ninterface UniformCache {\n  /** Bind group entry name. */\n  label: string;\n  /** Binding location. */\n  binding: UInt;\n  /** The type of binding. */\n  type: BindingType;\n  /** Uniform location. */\n  loc: WebGLUniformLocation | null\n  /** Uniform block index. */\n  index: GLuint;\n  /** Uniform buffer / Texture bind slot ID. */\n  slot: number;\n  /** Dynamic offset uniform buffer. */\n  bufferDynamicOffset?: boolean;\n}\n\n//#endregion Internal Types\n\n//#region Helpers\n\nfunction initWebGL2State(gl: WebGL2RenderingContext): WebGL2State {\n  const state = createPipelineState();\n\n  // Apply the default states\n  gl.blendColor(1, 1, 1, 1);\n  applyPipelineState(gl, state, state, 0, true);\n  for (let i = 0; i < MAX_VERTEX_ATTRIBS; ++i) {\n    gl.disableVertexAttribArray(i);\n  }\n\n  // Default alignment is 4. Use 1 to make byte data texture work.\n  gl.pixelStorei(GLenum.PACK_ALIGNMENT, 1);\n  gl.pixelStorei(GLenum.UNPACK_ALIGNMENT, 1);\n\n  return {\n    copyFrameBuffer: gl.createFramebuffer(),\n    buffers: [],\n    state,\n    pipeline: null,\n    index: null,\n    stencilRef: 0,\n    scissor: false\n  };\n}\n\nfunction compileShaderProgram(device: Device, vertex: WebGLShader, fragment: WebGLShader): WebGLProgram {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const glp = (device as WebGL2Device).gl.createProgram()!;\n  (device as WebGL2Device).gl.attachShader(glp, vertex);\n  (device as WebGL2Device).gl.attachShader(glp, fragment);\n  (device as WebGL2Device).gl.linkProgram(glp);\n\n  if (MUGL_DEBUG) {\n    console.assert(\n      (device as WebGL2Device).gl.getProgramParameter(glp, GLenum.LINK_STATUS) || isDeviceLost(device),\n      `Failed to link program: ${(device as WebGL2Device).gl.getProgramInfoLog(glp)}`\n    );\n  }\n\n  return glp;\n}\n\nfunction framebufferTexture(\n  gl: WebGL2RenderingContext, attachment: GLenum, { texture, slice = 0, mipLevel = 0 }: TextureView\n): void {\n  if (is3DTexture((texture as WebGL2Texture).type)) {\n    gl.framebufferTextureLayer(GLenum.FRAMEBUFFER, attachment, (texture as WebGL2Texture).glt, mipLevel, slice);\n  } else {\n    const texTarget = ((texture as WebGL2Texture).type === GLenum.TEXTURE_CUBE_MAP) ?\n      GLenum.TEXTURE_CUBE_MAP_POSITIVE_X + slice : (texture as WebGL2Texture).type;\n    gl.framebufferTexture2D(GLenum.FRAMEBUFFER, attachment, texTarget, (texture as WebGL2Texture).glt, mipLevel);\n  }\n}\n\nfunction createResolveFrameBuffer(\n  gl: WebGL2RenderingContext, attachment: GLenum, view: TextureView\n): WebGLFramebuffer | null {\n  const fb = gl.createFramebuffer();\n  gl.bindFramebuffer(GLenum.FRAMEBUFFER, fb);\n  framebufferTexture(gl, attachment, view);\n  if (MUGL_DEBUG) {\n    console.assert(\n      gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || gl.isContextLost(),\n      'Framebuffer completeness check failed for MSAA resolve buffer'\n    );\n  }\n  return fb;\n}\n\nfunction blitFramebuffer(\n  gl: WebGL2RenderingContext, from: WebGLFramebuffer | null, to: WebGLFramebuffer | null,\n  tex: WebGL2Texture, mask: number, attachment: UInt = GLenum.COLOR_ATTACHMENT0\n): void {\n  gl.bindFramebuffer(GLenum.READ_FRAMEBUFFER, from);\n  gl.bindFramebuffer(GLenum.DRAW_FRAMEBUFFER, to);\n  gl.readBuffer(attachment);\n  gl.blitFramebuffer(\n    0, 0, tex.width, tex.height,\n    0, 0, tex.width, tex.height,\n    mask, GLenum.NEAREST\n  );\n}\n\nfunction createPipelineState(desc: RenderPipelineState = {}): WebGL2PipelineState {\n  const primitive = desc.primitive || {};\n  const depthStencil = desc.depthStencil || {};\n  const { stencilFront = {}, stencilBack = {} } = depthStencil;\n  const { sampleCount = 1, alphaToCoverage = false } = desc.multisample || {};\n  const targets = desc.targets || {};\n  let blendWriteMask = targets.writeMask || ColorWrite.All;\n  let blendColor = targets.blendColor || {};\n  let blendAlpha = targets.blendColor || {};\n  if (targets.targets && targets.targets[0]) {\n    blendWriteMask = targets.targets[0].writeMask || blendWriteMask;\n    blendColor = targets.targets[0].blendColor || blendColor;\n    blendAlpha = targets.targets[0].blendAlpha || blendAlpha;\n  }\n\n  return {\n    sampleCount,\n    alphaToCoverage,\n\n    topology: primitive.topology || GLenum.TRIANGLES,\n    indexFormat: primitive.indexFormat || GLenum.UNSIGNED_SHORT,\n    frontFace: primitive.frontFace || GLenum.CCW,\n    cullMode: primitive.cullMode || GLenum.NONE,\n\n    depth: !!desc.depthStencil,\n    depthWrite: depthStencil.depthWrite || false,\n    depthFormat: depthStencil.format || GLenum.DEPTH_COMPONENT16,\n    depthCompare: depthStencil.depthCompare || GLenum.ALWAYS,\n    depthBias: depthStencil.depthBias || 0,\n    depthBiasSlopeScale: depthStencil.depthBiasSlopeScale || 0,\n\n    stencil: !!(depthStencil.stencilFront || depthStencil.stencilBack),\n    stencilFrontCompare: stencilFront.compare || GLenum.ALWAYS,\n    stencilFrontFailOp: stencilFront.failOp || GLenum.KEEP,\n    stencilFrontDepthFailOp: stencilFront.depthFailOp || GLenum.KEEP,\n    stencilFrontPassOp: stencilFront.passOp || GLenum.KEEP,\n    stencilBackCompare: stencilBack.compare || GLenum.ALWAYS,\n    stencilBackFailOp: stencilBack.failOp || GLenum.KEEP,\n    stencilBackDepthFailOp: stencilBack.depthFailOp || GLenum.KEEP,\n    stencilBackPassOp: stencilBack.passOp || GLenum.KEEP,\n    stencilReadMask: depthStencil.stencilReadMask || STENCIL_MASK,\n    stencilWriteMask: depthStencil.stencilWriteMask || STENCIL_MASK,\n\n    blend: !!desc.targets,\n    blendWriteMask,\n    blendColorOp: blendColor.operation || GLenum.FUNC_ADD,\n    blendColorSrcFactor: blendColor.srcFactor || GLenum.ONE,\n    blendColorDstFactor: blendColor.dstFactor || GLenum.ZERO,\n    blendAlphaOp: blendAlpha.operation || GLenum.FUNC_ADD,\n    blendAlphaSrcFactor: blendAlpha.srcFactor || GLenum.ONE,\n    blendAlphaDstFactor: blendAlpha.dstFactor || GLenum.ZERO,\n  };\n}\n\nfunction applyPipelineState(\n  gl: WebGL2RenderingContext, prevState: WebGL2PipelineState, state: WebGL2PipelineState, stencilRef = 0,\n  force = false\n): void {\n  // Temporary variables to reuse for performance\n  let b = false, n = 0, n2 = 0, n3 = 0, n4 = 0;\n\n  // 1. Apply primitive state\n  n = state.frontFace;\n  if (force || (prevState.frontFace !== n)) {\n    gl.frontFace(n);\n  }\n  n = state.cullMode;\n  if (force || (prevState.cullMode !== n)) {\n    if ((b = (n !== GLenum.NONE))) {\n      gl.cullFace(n);\n    }\n    glToggle(gl, GLenum.CULL_FACE, b);\n  }\n\n  // 2. Apply multisample state\n  b = state.alphaToCoverage;\n  if (force || (prevState.alphaToCoverage !== b)) {\n    glToggle(gl, GLenum.SAMPLE_ALPHA_TO_COVERAGE, b);\n  }\n\n  // 3. Apply depth state changes\n  b = !!state.depth;\n  if (force || (prevState.depth !== b)) {\n    glToggle(gl, GLenum.DEPTH_TEST, b);\n  }\n\n  if (force || b) {\n    applyDepthMask(gl, prevState.depthWrite, state.depthWrite, force);\n\n    n = state.depthCompare;\n    if (force || (prevState.depthCompare !== n)) {\n      gl.depthFunc(n);\n    }\n  }\n\n  n = state.depthBiasSlopeScale;\n  n2 = state.depthBias;\n  if (force || (prevState.depthBiasSlopeScale !== n) || (prevState.depthBias !== n2)) {\n    glToggle(gl, GLenum.POLYGON_OFFSET_FILL, !(!n && !n2)); // Enable if any of the 2 values is non-zero\n    gl.polygonOffset(n, n2);\n  }\n\n  // 4. Apply stencil state changes\n  b = !!state.stencil;\n  if (force || (prevState.stencil !== b)) {\n    glToggle(gl, GLenum.STENCIL_TEST, b);\n  }\n\n  if (force || b) {\n    n = state.stencilReadMask;\n    b = force || (prevState.stencilReadMask !== n);\n\n    n2 = state.stencilFrontCompare;\n    if (b || (prevState.stencilFrontCompare !== n2)) {\n      gl.stencilFuncSeparate(GLenum.FRONT, n2, stencilRef, n);\n    }\n    n2 = state.stencilBackCompare;\n    if (b || (prevState.stencilBackCompare !== n2)) {\n      gl.stencilFuncSeparate(GLenum.BACK, n2, stencilRef, n);\n    }\n\n    n = state.stencilFrontFailOp;\n    n2 = state.stencilFrontDepthFailOp;\n    n3 = state.stencilFrontPassOp;\n    if (force ||\n      (prevState.stencilFrontFailOp !== n) ||\n      (prevState.stencilFrontDepthFailOp !== n2) ||\n      (prevState.stencilFrontPassOp !== n3)\n    ) {\n      gl.stencilOpSeparate(GLenum.FRONT, n, n2, n3);\n    }\n    n = state.stencilBackFailOp;\n    n2 = state.stencilBackDepthFailOp;\n    n3 = state.stencilBackPassOp;\n    if (force ||\n      (prevState.stencilBackFailOp !== n) ||\n      (prevState.stencilBackDepthFailOp !== n2) ||\n      (prevState.stencilBackPassOp !== n3)\n    ) {\n      gl.stencilOpSeparate(GLenum.BACK, n, n2, n3);\n    }\n\n    applyStencilMask(gl, prevState.stencilWriteMask, state.stencilWriteMask, force);\n  }\n\n  // 5. Apply blend state changes\n  b = state.blend;\n  if (force || (prevState.blend !== b)) {\n    glToggle(gl, GLenum.BLEND, b);\n  }\n\n  if (force || b) {\n    n = state.blendColorSrcFactor;\n    n2 = state.blendColorDstFactor;\n    n3 = state.blendAlphaSrcFactor;\n    n4 = state.blendAlphaDstFactor;\n    if (force ||\n      (prevState.blendColorSrcFactor !== n) ||\n      (prevState.blendColorDstFactor !== n2) ||\n      (prevState.blendAlphaSrcFactor !== n3) ||\n      (prevState.blendAlphaDstFactor !== n4)\n    ) {\n      gl.blendFuncSeparate(n, n2, n3, n4);\n    }\n\n    n = state.blendColorOp;\n    n2 = state.blendAlphaOp;\n    if (force || (prevState.blendColorOp !== n) || (prevState.blendAlphaOp !== n2)) {\n      gl.blendEquationSeparate(n, n2);\n    }\n\n    applyColorMask(gl, prevState.blendWriteMask, state.blendWriteMask, force);\n  }\n}\n\nfunction applyColorMask(gl: WebGL2RenderingContext, prevMask: ColorWrite, mask: ColorWrite, force = false): void {\n  if (force || prevMask !== mask) {\n    gl.colorMask(\n      !!(mask & ColorWrite.Red),\n      !!(mask & ColorWrite.Green),\n      !!(mask & ColorWrite.Blue),\n      !!(mask & ColorWrite.Alpha)\n    );\n  }\n}\n\nfunction applyDepthMask(gl: WebGL2RenderingContext, prevMask: boolean, mask: boolean, force = false): void {\n  if (force || prevMask !== mask) {\n    gl.depthMask(mask);\n  }\n}\n\nfunction applyStencilMask(gl: WebGL2RenderingContext, prevMask: UInt, mask: UInt, force = false): void {\n  if (force || prevMask !== mask) {\n    gl.stencilMask(mask);\n  }\n}\n\nfunction glToggle(gl: WebGL2RenderingContext, flag: GLenum, enable: boolean): void {\n  enable ? gl.enable(flag) : gl.disable(flag);\n}\n\nfunction vertexAttribs(gl: WebGL2RenderingContext, buffer: WebGL2BufferAttributes, offset: UInt): void {\n  gl.bindBuffer(GLenum.ARRAY_BUFFER, buffer.glb);\n  for (let i = 0; i < buffer.attributes.length; ++i) {\n    const { ptr, step } = buffer.attributes[i];\n    const params: [number, number, number, boolean, number, number] = [...ptr];\n    params[5] += offset;\n    gl.vertexAttribPointer(...params);\n    gl.vertexAttribDivisor(ptr[0], step);\n  }\n}\n\nfunction clientWaitAsync(gl: WebGL2RenderingContext, sync: WebGLSync, flags: UInt, interval: UInt): Promise<void> {\n  return new Promise((resolve, reject) => {\n    function test() {\n      const res = gl.clientWaitSync(sync, flags, 0);\n      if (res == GLenum.WAIT_FAILED) {\n        reject();\n      } else if (res == GLenum.TIMEOUT_EXPIRED) {\n        setTimeout(test, interval);\n      } else {\n        resolve();\n      }\n    }\n    test();\n  });\n}\n\nfunction getBufferSubData(gl: WebGL2RenderingContext, target: UInt, buffer: WebGLBuffer, srcOffset: UInt, length: UInt): Promise<Uint8Array> {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const sync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0)!;\n  gl.flush();\n\n  return clientWaitAsync(gl, sync, 0, 10)\n    .finally(() => gl.deleteSync(sync))\n    .then(() => {\n      const data = new Uint8Array(length);\n      gl.bindBuffer(target, buffer);\n      gl.getBufferSubData(target, srcOffset, data, 0, length);\n      return data;\n    });\n}\n\n//#endregion Helpers\n"],"mappings":"OAASA,UAAU,CAAEC,cAAc,0BAC5B,GAAKC,OAAM,4BACiCC,YAAY,6BAE7DC,WAAW,CAAEC,WAAW,CAAEC,UAAU,CAAcC,WAAW,CAAEC,YAAY,wBAW7CC,kBAAkB,4BAEhDC,WAAW,CAAEC,aAAa,CAAEC,WAAW,CAAEC,WAAW,CAAEC,UAAU,CAAEC,aAAa,CAAEC,WAAW,CAAEC,cAAc,CAC5GC,UAAU,CAAEC,UAAU,CAAEC,gBAAgB,oBAK1C,KAAMC,UAAS,CAAG,GAAI,CACtB,KAAMC,aAAY,CAAG,UAAU,CAC/B,KAAMC,mBAAkB,CAAG,EAAE,CAiF7B,GAAIC,aAAiC,CAAG,IAAI,CAE5C,GAAIvB,cAAc,CAAE,CAClBuB,YAAY,CAAG,GAAIC,qBAAoB,CAAC,CAAC,CAAEC,SAAS,CAAEC,EAAG,CAAC,GAAK,CAC7DD,SAAS,CAACC,EAAE,CACd,CAAC,CACH,CASA,MAAO,SAASC,oBAAmB,CACjCC,MAAc,CAAEC,OAA+B,CAAG,CAAC,CAAC,CAAEC,QAAuB,CAAG,CAAC,CAClE,CACf,KAAMJ,GAAiC,CAAGE,MAAM,CAACG,UAAU,CAAC,QAAQ,CAAEF,OAAO,CAAC,CAC9E,GAAIH,EAAE,CAAE,CACN,GAAIM,gBAAe,CAAG,CAAC,CACvB,IAAK,KAAMC,QAAO,GAAIzB,mBAAkB,CAAE,CACxC,GAAKsB,QAAQ,CAAG,CAACG,OAAO,EAAKP,EAAE,CAACQ,YAAY,CAAC1B,kBAAkB,CAAC,CAACyB,OAAO,CAAC,CAAC,CAAE,CAC1ED,eAAe,CAAGA,eAAe,CAAG,CAACC,OACvC,CACF,CACA,KAAME,MAAK,CAAGC,eAAe,CAACV,EAAE,CAAC,CACjC,KAAMD,UAAS,CAAIC,EAA0B,EAAK,CAChDA,EAAE,CAACW,iBAAiB,CAACF,KAAK,CAACG,eAAe,CAC5C,CAAC,CAED,KAAMC,OAAM,CAAG,CACbX,MAAM,CAAEF,EAAE,CAAES,KAAK,CAAEL,QAAQ,CAAEE,eAAe,CAC5CQ,IAAI,CAAE,IAAI,CACVC,OAAO,EAAG,CACRhB,SAAS,CAAC,IAAI,CAACC,EAAE,CACnB,CACF,CAAiB,CAEjB,GAAI1B,cAAc,CAAE,CACjBuB,YAAY,CAAkBmB,QAAQ,CAACH,MAAM,CAAE,CAAEd,SAAS,CAAEC,EAAG,CAAC,CACnE,CAEA,MAAOa,OACT,CACA,MAAO,KACT,CAMA,MAAO,SAASI,YAAW,CAACJ,MAAc,CAAQ,CAC/CA,MAAM,CAAkBE,OAAO,EAAE,CAClCG,MAAM,CAACC,MAAM,CAAEN,MAAM,CAAkBJ,KAAK,CAAEC,eAAe,CAAEG,MAAM,CAAkBb,EAAE,CAAC,CAC5F,CAOA,MAAO,SAASoB,aAAY,CAACP,MAAc,CAAW,CACpD,MAAQA,OAAM,CAAkBb,EAAE,CAACqB,aAAa,EAClD,CAOA,MAAO,SAASC,kBAAiB,CAACT,MAAc,CAAiB,CAC/D,MAAQA,OAAM,CAAkBT,QAClC,CAYA,MAAO,SAASmB,aAAY,CAACV,MAAc,CAAEW,IAAsB,CAAU,CAC3E,KAAMC,KAAI,CAAID,IAAI,CAACE,KAAK,CAAGhD,WAAW,CAACiD,OAAO,CAAIpD,MAAM,CAACqD,cAAc,CACpEJ,IAAI,CAACE,KAAK,CAAGhD,WAAW,CAACmD,KAAK,CAAItD,MAAM,CAACuD,oBAAoB,CAAGvD,MAAM,CAACwD,YAAY,CACtF,KAAML,MAAK,CAAIF,IAAI,CAACE,KAAK,CAAGhD,WAAW,CAACsD,MAAM,CAAIzD,MAAM,CAAC0D,WAAW,CACjET,IAAI,CAACE,KAAK,CAAGhD,WAAW,CAACwD,OAAO,CAAI3D,MAAM,CAAC4D,YAAY,CAAG5D,MAAM,CAAC6D,WAAW,CAE/E,KAAMC,IAAG,CAAIxB,MAAM,CAAkBb,EAAE,CAACuB,YAAY,EAAE,CACrDV,MAAM,CAAkBb,EAAE,CAACsC,UAAU,CAACb,IAAI,CAAEY,GAAG,CAAC,CAChDxB,MAAM,CAAkBb,EAAE,CAACuC,UAAU,CAACd,IAAI,CAAED,IAAI,CAACgB,IAAI,CAAEd,KAAK,CAAC,CAE9D,KAAM3B,UAAS,CAAIC,EAA0B,EAAK,CAChDA,EAAE,CAACyC,YAAY,CAACJ,GAAG,CACrB,CAAC,CAED,KAAMK,OAAM,CAAG,CACb1C,EAAE,CAAGa,MAAM,CAAkBb,EAAE,CAAEqC,GAAG,CAAEZ,IAAI,CAAEe,IAAI,CAAEhB,IAAI,CAACgB,IAAI,CAC3DzB,OAAO,EAAS,CACdhB,SAAS,CAAC,IAAI,CAACC,EAAE,CACnB,CACF,CAAiB,CAEjB,GAAI1B,cAAc,CAAE,CACjBuB,YAAY,CAAkBmB,QAAQ,CAAC0B,MAAM,CAAE,CAAE3C,SAAS,CAAEC,EAAE,CAAGa,MAAM,CAAkBb,EAAG,CAAC,CAChG,CAEA,MAAO0C,OACT,CAYA,MAAO,SAASC,cAAa,CAAC9B,MAAc,CAAEW,IAAuB,CAAW,CAC9E,KAAMoB,QAAO,CAAGpB,IAAI,CAACqB,WAAW,EAAI,CAAC,CACrC,KAAMpB,KAAI,CAAGD,IAAI,CAACsB,SAAS,EAAIvE,MAAM,CAACwE,UAAU,CAChD,KAAMC,OAAM,CAAGxB,IAAI,CAACwB,MAAM,EAAIzE,MAAM,CAAC0E,KAAK,CAC1C,KAAMC,YAAW,CAAG,CAAC5D,cAAc,CAAC0D,MAAM,CAAC,EAAK,CAACxB,IAAI,CAACE,KAAK,EAAI,CAAC,EAAI7C,YAAY,CAACsE,cAAe,CAChG,KAAM,CAACC,KAAK,CAAEC,MAAM,CAAEC,MAAM,CAAC,CAAG9B,IAAI,CAACgB,IAAI,EAAI,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACtD,KAAMe,MAAK,CAAG9B,IAAI,GAAKlD,MAAM,CAACiF,gBAAgB,CAAG,CAAC,CAChD/B,IAAI,GAAKlD,MAAM,CAACwE,UAAU,CAAG,CAAC,CAAGO,MAAM,CAEzC,GAAIG,IAAwB,CAAG,IAAI,CACnC,GAAIC,KAA8B,CAAG,IAAI,CAEzC,GAAId,OAAO,CAAG,CAAC,EAAI,CAACM,WAAW,CAAE,CAE/BQ,IAAI,CAAI7C,MAAM,CAAkBb,EAAE,CAAC2D,kBAAkB,EAAE,CACtD9C,MAAM,CAAkBb,EAAE,CAAC4D,gBAAgB,CAACrF,MAAM,CAACsF,YAAY,CAAEH,IAAI,CAAC,CACvE,GAAId,OAAO,CAAG,CAAC,CAAE,CACd/B,MAAM,CAAkBb,EAAE,CAAC8D,8BAA8B,CAACvF,MAAM,CAACsF,YAAY,CAAEjB,OAAO,CAAEI,MAAM,CAAEI,KAAK,CAAEC,MAAM,CAChH,CAAC,IAAM,CACJxC,MAAM,CAAkBb,EAAE,CAAC+D,mBAAmB,CAACxF,MAAM,CAACsF,YAAY,CAAEb,MAAM,CAAEI,KAAK,CAAEC,MAAM,CAC5F,CACF,CAEA,GAAIH,WAAW,CAAE,CACfO,GAAG,CAAI5C,MAAM,CAAkBb,EAAE,CAAC2C,aAAa,EAAE,CAChD9B,MAAM,CAAkBb,EAAE,CAACgE,aAAa,CAACzF,MAAM,CAAC0F,QAAQ,CAAC,CACzDpD,MAAM,CAAkBb,EAAE,CAACkE,WAAW,CAACzC,IAAI,CAAEgC,GAAG,CAAC,CAElD,GAAIpE,WAAW,CAACoC,IAAI,CAAC,CAAE,CACpBZ,MAAM,CAAkBb,EAAE,CAACmE,YAAY,CAAC1C,IAAI,CAAED,IAAI,CAAC4C,aAAa,EAAI,CAAC,CAAEpB,MAAM,CAAEI,KAAK,CAAEC,MAAM,CAAEE,KAAK,CACtG,CAAC,IAAM,CACJ1C,MAAM,CAAkBb,EAAE,CAACqE,YAAY,CAAC5C,IAAI,CAAED,IAAI,CAAC4C,aAAa,EAAI,CAAC,CAAEpB,MAAM,CAAEI,KAAK,CAAEC,MAAM,CAC/F,CACF,CAEA,KAAMtD,UAAS,CAAIC,EAA0B,EAAK,CAChDA,EAAE,CAACsE,aAAa,CAACb,GAAG,CAAC,CACrBzD,EAAE,CAACuE,kBAAkB,CAACb,IAAI,CAC5B,CAAC,CAED,KAAMc,QAAO,CAAG,CACdxE,EAAE,CAAGa,MAAM,CAAkBb,EAAE,CAAEyD,GAAG,CAAEC,IAAI,CAAEjC,IAAI,CAAEuB,MAAM,CAAEI,KAAK,CAAEC,MAAM,CAAEE,KAAK,CAAEX,OAAO,CACvF7B,OAAO,EAAS,CACdhB,SAAS,CAAC,IAAI,CAACC,EAAE,CACnB,CACF,CAAkB,CAElB,GAAI1B,cAAc,CAAE,CACjBuB,YAAY,CAAkBmB,QAAQ,CAACwD,OAAO,CAAE,CAAEzE,SAAS,CAAEC,EAAE,CAAGa,MAAM,CAAkBb,EAAG,CAAC,CACjG,CAEA,MAAOwE,QACT,CAYA,MAAO,SAASC,cAAa,CAAC5D,MAAc,CAAEW,IAAuB,CAAG,CAAC,CAAC,CAAW,CAEnF,KAAMkD,IAAG,CAAI7D,MAAM,CAAkBb,EAAE,CAACyE,aAAa,EAAG,CACxD,GAAIE,UAAS,CAAGnD,IAAI,CAACmD,SAAS,EAAIpG,MAAM,CAACqG,OAAO,CAChD,GAAIpD,IAAI,CAACqD,YAAY,CAAE,CACrB,GAAIrD,IAAI,CAACqD,YAAY,GAAKtG,MAAM,CAACqG,OAAO,CAAE,CACxCD,SAAS,CAAGA,SAAS,GAAKpG,MAAM,CAACqG,OAAO,CAAGrG,MAAM,CAACuG,sBAAsB,CAAGvG,MAAM,CAACwG,qBACpF,CAAC,IAAM,CACLJ,SAAS,CAAGA,SAAS,GAAKpG,MAAM,CAACqG,OAAO,CAAGrG,MAAM,CAACyG,qBAAqB,CAAGzG,MAAM,CAAC0G,oBACnF,CACF,CAECpE,MAAM,CAAkBb,EAAE,CAACkF,iBAAiB,CAACR,GAAG,CAAEnG,MAAM,CAAC4G,kBAAkB,CAAER,SAAS,CAAC,CACvF9D,MAAM,CAAkBb,EAAE,CAACkF,iBAAiB,CAACR,GAAG,CAAEnG,MAAM,CAAC6G,kBAAkB,CAAE5D,IAAI,CAAC6D,SAAS,EAAI9G,MAAM,CAACqG,OAAO,CAAC,CAC9G/D,MAAM,CAAkBb,EAAE,CAACkF,iBAAiB,CAACR,GAAG,CAAEnG,MAAM,CAAC+G,cAAc,CAAE9D,IAAI,CAAC+D,YAAY,EAAIhH,MAAM,CAACiH,aAAa,CAAC,CACnH3E,MAAM,CAAkBb,EAAE,CAACkF,iBAAiB,CAACR,GAAG,CAAEnG,MAAM,CAACkH,cAAc,CAAEjE,IAAI,CAACkE,YAAY,EAAInH,MAAM,CAACiH,aAAa,CAAC,CACnH3E,MAAM,CAAkBb,EAAE,CAACkF,iBAAiB,CAACR,GAAG,CAAEnG,MAAM,CAACoH,cAAc,CAAEnE,IAAI,CAACoE,YAAY,EAAIrH,MAAM,CAACiH,aAAa,CAAC,CACnH3E,MAAM,CAAkBb,EAAE,CAAC6F,iBAAiB,CAACnB,GAAG,CAAEnG,MAAM,CAACuH,eAAe,CAAEtE,IAAI,CAACuE,WAAW,EAAI,EAAE,CAAC,CACjGlF,MAAM,CAAkBb,EAAE,CAAC6F,iBAAiB,CAACnB,GAAG,CAAEnG,MAAM,CAACyH,eAAe,CAAExE,IAAI,CAACyE,WAAW,EAAI,CAAC,CAAC,CACjG,GAAIzE,IAAI,CAAC0E,OAAO,CAAE,CACfrF,MAAM,CAAkBb,EAAE,CAAC6F,iBAAiB,CAACnB,GAAG,CAAEnG,MAAM,CAAC4H,oBAAoB,CAAE5H,MAAM,CAAC6H,sBAAsB,CAAC,CAC7GvF,MAAM,CAAkBb,EAAE,CAAC6F,iBAAiB,CAACnB,GAAG,CAAEnG,MAAM,CAAC8H,oBAAoB,CAAE7E,IAAI,CAAC0E,OAAO,CAC9F,CACA,GAAI,CAAC1E,IAAI,CAAC8E,aAAa,EAAI,CAAC,EAAI,CAAC,CAAE,CAChCzF,MAAM,CAAkBb,EAAE,CAAC6F,iBAAiB,CAC3CnB,GAAG,CACHnG,MAAM,CAACgI,0BAA0B,CACjCC,IAAI,CAACC,GAAG,CAACjF,IAAI,CAAC8E,aAAa,EAAI,CAAC,CAAGzF,MAAM,CAAkBb,EAAE,CAAC0G,YAAY,CAACnI,MAAM,CAACoI,8BAA8B,CAAC,CAAC,CAEtH,CAEA,KAAM5G,UAAS,CAAIC,EAA0B,EAAK,CAChDA,EAAE,CAAC4G,aAAa,CAAClC,GAAG,CACtB,CAAC,CAED,KAAMmC,QAAO,CAAG,CACdnC,GAAG,CACH1E,EAAE,CAAGa,MAAM,CAAkBb,EAAE,CAC/Be,OAAO,EAAS,CACdhB,SAAS,CAAC,IAAI,CAACC,EAAE,CACnB,CACF,CAAkB,CAElB,GAAI1B,cAAc,CAAE,CACjBuB,YAAY,CAAkBmB,QAAQ,CAAC6F,OAAO,CAAE,CAAE9G,SAAS,CAAEC,EAAE,CAAGa,MAAM,CAAkBb,EAAG,CAAC,CACjG,CAEA,MAAO6G,QACT,CAYA,MAAO,SAASC,aAAY,CAACjG,MAAc,CAAEW,IAAsB,CAAU,CAC3E,KAAMC,KAAI,CAAGD,IAAI,CAACE,KAAK,GAAK9C,WAAW,CAACmI,MAAM,CAAGxI,MAAM,CAACyI,aAAa,CAAGzI,MAAM,CAAC0I,eAAe,CAE9F,KAAMvC,IAAG,CAAI7D,MAAM,CAAkBb,EAAE,CAAC8G,YAAY,CAACrF,IAAI,CAAE,CAC1DZ,MAAM,CAAkBb,EAAE,CAACkH,YAAY,CAACxC,GAAG,CAAElD,IAAI,CAAC2F,IAAI,CAAC,CACvDtG,MAAM,CAAkBb,EAAE,CAACoH,aAAa,CAAC1C,GAAG,CAAC,CAE9C,GAAIrG,UAAU,CAAE,CACdgJ,OAAO,CAACC,MAAM,CACXzG,MAAM,CAAkBb,EAAE,CAACuH,kBAAkB,CAAC7C,GAAG,CAAEnG,MAAM,CAACiJ,cAAc,CAAC,EAAIpG,YAAY,CAACP,MAAM,CAAC,CACjG,qBAAoBW,IAAI,CAACE,KAAK,GAAK9C,WAAW,CAACmI,MAAM,CAAG,QAAQ,CAAG,UAAW,YAAYlG,MAAM,CAAkBb,EAAE,CAACyH,gBAAgB,CAAC/C,GAAG,CAAE,EAAC,CAEjJ,CAEA,KAAM3E,UAAS,CAAIC,EAA0B,EAAK,CAChDA,EAAE,CAAC0H,YAAY,CAAChD,GAAG,CACrB,CAAC,CAED,KAAMiD,OAAM,CAAG,CACb3H,EAAE,CAAGa,MAAM,CAAkBb,EAAE,CAC/B0E,GAAG,CACH3D,OAAO,EAAS,CACdhB,SAAS,CAAC,IAAI,CAACC,EAAE,CACnB,CACF,CAAiB,CAEjB,GAAI1B,cAAc,CAAE,CACjBuB,YAAY,CAAkBmB,QAAQ,CAAC2G,MAAM,CAAE,CAAE5H,SAAS,CAAEC,EAAE,CAAGa,MAAM,CAAkBb,EAAG,CAAC,CAChG,CAEA,MAAO2H,OACT,CAYA,MAAO,SAASC,iBAAgB,CAAC/G,MAAc,CAAEW,IAA0B,CAAG,CAAC,CAAC,CAAc,CAC5F,GAAIqG,KAA6B,CAAG,IAAI,CACxC,KAAMC,MAAkC,CAAG,EAAE,CAC7C,KAAMvE,MAAK,CAAG/B,IAAI,CAACuG,YAAY,CAAIvG,IAAI,CAACuG,YAAY,CAACvD,OAAO,CAAqB,IAAI,CACrF,KAAMwD,YAAW,CAAIzE,KAAK,EAAIpE,UAAU,CAACoE,KAAK,CAACP,MAAM,CAAC,EAAK,KAAK,CAEhE,GAAIxB,IAAI,CAACyG,MAAM,EAAIzG,IAAI,CAACyG,MAAM,CAACC,MAAM,CAAE,CAErCL,IAAI,CAAIhH,MAAM,CAAkBb,EAAE,CAACmI,iBAAiB,EAAE,CACrDtH,MAAM,CAAkBb,EAAE,CAACoI,eAAe,CAAC7J,MAAM,CAAC8J,WAAW,CAAER,IAAI,CAAC,CAErE,IAAK,GAAIS,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAG9G,IAAI,CAACyG,MAAM,CAACC,MAAM,CAAE,EAAEI,CAAC,CAAE,CAC3C,GAAK9G,IAAI,CAACyG,MAAM,CAACK,CAAC,CAAC,CAACC,IAAI,CAAC/D,OAAO,CAAmB5B,OAAO,CAAG,CAAC,CAAE,CAE7D/B,MAAM,CAAkBb,EAAE,CAACwI,uBAAuB,CAACjK,MAAM,CAAC8J,WAAW,CAAE9J,MAAM,CAACkK,iBAAiB,CAAGH,CAAC,CAAE/J,MAAM,CAACsF,YAAY,CACtHrC,IAAI,CAACyG,MAAM,CAACK,CAAC,CAAC,CAACC,IAAI,CAAC/D,OAAO,CAAmBd,IAAI,CACvD,CAAC,IAAM,CACLgF,kBAAkB,CAAE7H,MAAM,CAAkBb,EAAE,CAAEzB,MAAM,CAACkK,iBAAiB,CAAGH,CAAC,CAAE9G,IAAI,CAACyG,MAAM,CAACK,CAAC,CAAC,CAACC,IAAI,CACnG,CACF,CAGA,GAAI/G,IAAI,CAACyG,MAAM,CAACC,MAAM,CAAG,CAAC,CAAE,CACzBrH,MAAM,CAAkBb,EAAE,CAAC2I,WAAW,CAACnH,IAAI,CAACyG,MAAM,CAACW,GAAG,CAAC,CAACC,CAAC,CAAEP,CAAC,GAAK/J,MAAM,CAACkK,iBAAiB,CAAGH,CAAC,CAAC,CACjG,CAGA,GAAI/E,KAAK,CAAE,CACT,GAAIA,KAAK,CAACG,IAAI,CAAE,CACb7C,MAAM,CAAkBb,EAAE,CAACwI,uBAAuB,CAACjK,MAAM,CAAC8J,WAAW,CAAEL,WAAW,CAAGzJ,MAAM,CAACuK,wBAAwB,CAAGvK,MAAM,CAACwK,gBAAgB,CAC7IxK,MAAM,CAACsF,YAAY,CAAEN,KAAK,CAACG,IAAI,CACnC,CAAC,IAAM,CACL,GAAIrF,UAAU,EAAI,CAACiB,cAAc,CAACiE,KAAK,CAACP,MAAM,CAAC,CAAE,CAC/CqE,OAAO,CAAC2B,KAAK,CAAC,8BAA8B,CAAEzF,KAAK,CACrD,CAEAmF,kBAAkB,CAAE7H,MAAM,CAAkBb,EAAE,CAAEgI,WAAW,CAAGzJ,MAAM,CAACuK,wBAAwB,CAAGvK,MAAM,CAACwK,gBAAgB,CAAEvH,IAAI,CAACuG,YAAY,CAC5I,CACF,CAEA,GAAI1J,UAAU,CAAE,CACdgJ,OAAO,CAACC,MAAM,CACXzG,MAAM,CAAkBb,EAAE,CAACiJ,sBAAsB,CAAC1K,MAAM,CAAC8J,WAAW,CAAC,GAAK9J,MAAM,CAAC2K,oBAAoB,EAAI9H,YAAY,CAACP,MAAM,CAAC,CAC9H,uCAAuC,CAE3C,CAIA,IAAK,GAAIyH,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAG9G,IAAI,CAACyG,MAAM,CAACC,MAAM,CAAE,EAAEI,CAAC,CAAE,CAC3CR,KAAK,CAACqB,IAAI,CAAE3H,IAAI,CAACyG,MAAM,CAACK,CAAC,CAAC,CAACC,IAAI,CAAC/D,OAAO,CAAmB5B,OAAO,CAAG,CAAC,CACnEwG,wBAAwB,CAAEvI,MAAM,CAAkBb,EAAE,CAAEzB,MAAM,CAACkK,iBAAiB,CAAEjH,IAAI,CAACyG,MAAM,CAACK,CAAC,CAAC,CAACC,IAAI,CAAC,CAAG,IAAI,CAC/G,CACAT,KAAK,CAACqB,IAAI,CAAC5F,KAAK,EAAIA,KAAK,CAACX,OAAO,CAAG,CAAC,EAAIW,KAAK,CAACE,GAAG,CAChD2F,wBAAwB,CAAEvI,MAAM,CAAkBb,EAAE,CAAEgI,WAAW,CAE/DzJ,MAAM,CAACuK,wBAAwB,CAAGvK,MAAM,CAACwK,gBAAgB,CAAEvH,IAAI,CAACuG,YAAY,CAAE,CAAG,IAAI,CAC3F,CAEA,KAAMhI,UAAS,CAAIC,EAA0B,EAAK,CAChDA,EAAE,CAACW,iBAAiB,CAACkH,IAAI,CAAC,CAC1B,IAAK,KAAMwB,GAAE,GAAIvB,MAAK,CAAE,CACtB9H,EAAE,CAACW,iBAAiB,CAAC0I,EAAE,CACzB,CACF,CAAC,CAED,KAAMvI,KAAI,CAAG,CACXd,EAAE,CAAGa,MAAM,CAAkBb,EAAE,CAC/B6H,IAAI,CAAEC,KAAK,CAAEvE,KAAK,CAClB+F,KAAK,CAAE9H,IAAI,CAACyG,MAAM,CAAGzG,IAAI,CAACyG,MAAM,CAACW,GAAG,CAAEW,CAAC,EAAKA,CAAC,CAAChB,IAAI,CAAC/D,OAAwB,CAAC,CAAG,EAAE,CACjFgF,WAAW,CAAEhI,IAAI,CAACyG,MAAM,CAAGzG,IAAI,CAACyG,MAAM,CAACW,GAAG,CAAEW,CAAC,EAAKA,CAAC,CAACE,KAAK,CAAC,CAAG,EAAE,CAC/DC,UAAU,CAAElI,IAAI,CAACkI,UAAU,CAC3BC,UAAU,CAAEnI,IAAI,CAACmI,UAAU,CAC3BC,YAAY,CAAEpI,IAAI,CAACoI,YAAY,CAC/B7I,OAAO,EAAS,CACdhB,SAAS,CAAC,IAAI,CAACC,EAAE,CACnB,CACF,CAAqB,CAErB,GAAI1B,cAAc,CAAE,CACjBuB,YAAY,CAAkBmB,QAAQ,CAACF,IAAI,CAAE,CAAEf,SAAS,CAAEC,EAAE,CAAGa,MAAM,CAAkBb,EAAG,CAAC,CAC9F,CAEA,MAAOc,KACT,CAYA,MAAO,SAAS+I,sBAAqB,CAAChJ,MAAc,CAAEW,IAA+B,CAAmB,CACtG,MAAO,CACLsI,OAAO,CAAEtI,IAAI,CAACsI,OAAO,CAAClB,GAAG,CAAC,CAACmB,KAAK,CAAEC,OAAO,IAAM,CAAEA,OAAO,CAAE,GAAGD,KAAM,CAAC,CAAC,CAAC,CACtEhJ,OAAO,EAAS,CAEhB,CACF,CACF,CAQA,MAAO,SAASkJ,gBAAe,CAACpJ,MAAc,CAAEW,IAAyB,CAAa,CACpF,MAAO,CACLsI,OAAO,CAAEtI,IAAI,CAACsI,OAAO,CAAClB,GAAG,CAAC,CAACmB,KAAK,CAAEC,OAAO,IAAM,CAAEA,OAAO,CAAE,GAAGD,KAAM,CAAC,CAAC,CAAC,CACtEhJ,OAAO,EAAS,CAEhB,CACF,CACF,CAYA,MAAO,SAASmJ,qBAAoB,CAACrJ,MAAc,CAAEW,IAA8B,CAAkB,CAEnG,KAAM2I,IAAG,CAAGC,oBAAoB,CAACvJ,MAAM,CAAGW,IAAI,CAAC6I,MAAM,CAAkB3F,GAAG,CAAIlD,IAAI,CAAC8I,QAAQ,CAAkB5F,GAAG,CAAE,CAClH,KAAM6F,MAAuB,CAAG,EAAE,CAClC,KAAMC,aAAoC,CAAG,CAAC,CAAC,CAG/C,GAAIC,SAAQ,CAAG,CAAC,CAChB,GAAIC,SAAQ,CAAG,CAAC,CAChB,GAAIlJ,IAAI,CAACmJ,UAAU,CAAE,CACnB,IAAK,GAAIrC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAG9G,IAAI,CAACmJ,UAAU,CAACzC,MAAM,CAAE,EAAEI,CAAC,CAAE,CAC/C,KAAMwB,QAAO,CAAItI,IAAI,CAACmJ,UAAU,CAACrC,CAAC,CAAC,CAA2BwB,OAAO,CACrES,KAAK,CAACpB,IAAI,CAAC,EAAE,CAAC,CAEd,IAAK,GAAIyB,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGd,OAAO,CAAC5B,MAAM,CAAE,EAAE0C,CAAC,CAAE,CACvC,KAAMb,MAAK,CAAGD,OAAO,CAACc,CAAC,CAAC,CACxB,GAAIC,IAAG,CAAG,IAAI,CACd,GAAIC,MAAK,CAAGvM,MAAM,CAACwM,aAAa,CAEhC,GAAIhB,KAAK,CAACtI,IAAI,GAAKhD,WAAW,CAACuM,MAAM,CAAE,CACrCF,KAAK,CAAIjK,MAAM,CAAkBb,EAAE,CAACiL,oBAAoB,CAACd,GAAG,CAAEJ,KAAK,CAACmB,KAAK,CAAC,CACzErK,MAAM,CAAkBb,EAAE,CAACmL,mBAAmB,CAAChB,GAAG,CAAEW,KAAK,CAAEL,QAAQ,EAAE,CACxE,CAAC,IAAM,IAAIV,KAAK,CAACtI,IAAI,GAAKhD,WAAW,CAAC2M,OAAO,CAAE,CAC7CP,GAAG,CAAIhK,MAAM,CAAkBb,EAAE,CAACqL,kBAAkB,CAAClB,GAAG,CAAEJ,KAAK,CAACmB,KAAK,CAAC,CACtEV,YAAY,CAACT,KAAK,CAACmB,KAAK,CAAC,CAAGR,QAAQ,EACtC,CAEAH,KAAK,CAACjC,CAAC,CAAC,CAACyB,KAAK,CAACC,OAAO,CAAC,CAAG,CACxB,GAAGD,KAAK,CACRc,GAAG,CACHC,KAAK,CACLQ,IAAI,CAAEvB,KAAK,CAACtI,IAAI,GAAKhD,WAAW,CAACuM,MAAM,CAAGP,QAAQ,CAAG,CAAC,CACpDV,KAAK,CAACtI,IAAI,GAAKhD,WAAW,CAAC2M,OAAO,CAAGV,QAAQ,CAAG,CAAC,CAAG,CACxD,CACF,CACF,CAGA,IAAK,GAAIpC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAG9G,IAAI,CAACmJ,UAAU,CAACzC,MAAM,CAAE,EAAEI,CAAC,CAAE,CAC/C,KAAMwB,QAAO,CAAItI,IAAI,CAACmJ,UAAU,CAACrC,CAAC,CAAC,CAA2BwB,OAAO,CACrE,IAAK,GAAIc,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGd,OAAO,CAAC5B,MAAM,CAAE,EAAE0C,CAAC,CAAE,CACvC,GAAId,OAAO,CAACc,CAAC,CAAC,CAACnJ,IAAI,GAAKhD,WAAW,CAAC8M,OAAO,CAAE,CAC3C,GAAIf,YAAY,CAACV,OAAO,CAACc,CAAC,CAAC,CAACM,KAAK,CAAC,CAAE,CAClCX,KAAK,CAACjC,CAAC,CAAC,CAACwB,OAAO,CAACc,CAAC,CAAC,CAACZ,OAAO,CAAC,CAACsB,IAAI,CAAGd,YAAY,CAACV,OAAO,CAACc,CAAC,CAAC,CAACM,KAAK,CACnE,CACF,CACF,CACF,CACF,CAEA,KAAMnL,UAAS,CAAIC,EAA0B,EAAK,CAChDA,EAAE,CAACwL,aAAa,CAACrB,GAAG,CACtB,CAAC,CAED,KAAMsB,SAAQ,CAAG,CACfzL,EAAE,CAAGa,MAAM,CAAkBb,EAAE,CAC/BmK,GAAG,CACHuB,OAAO,CAAElK,IAAI,CAACkK,OAAO,CACrBnB,KAAK,CACL9J,KAAK,CAAEkL,mBAAmB,CAACnK,IAAI,CAAC,CAChCT,OAAO,EAAS,CACdhB,SAAS,CAAC,IAAI,CAACC,EAAE,CACnB,CACF,CAAyB,CAGzB,GAAI1B,cAAc,CAAE,CACjBuB,YAAY,CAAkBmB,QAAQ,CAACyK,QAAQ,CAAE,CAAE1L,SAAS,CAAEC,EAAE,CAAGa,MAAM,CAAkBb,EAAG,CAAC,CAClG,CAEA,MAAOyL,SACT,CAcA,MAAO,SAASG,WAAU,CAAC/K,MAAc,CAAE6B,MAAc,CAAEmJ,GAAe,CAAEC,MAAY,CAAG,CAAC,CAAU,CACpG,KAAMC,OAAM,CAAG,CAAEC,MAAM,CAAExN,YAAY,CAACyN,OAAQ,CAAC,CAE/CC,gBAAgB,CAAErL,MAAM,CAAkBb,EAAE,CAAG0C,MAAM,CAAkBjB,IAAI,CAAGiB,MAAM,CAAkBL,GAAG,CAAGyJ,MAAM,CAAED,GAAG,CAACM,UAAU,CAAC,CAChIC,IAAI,CACHC,IAAI,EAAI,CACNR,GAAG,CAACS,GAAG,CAACD,IAAI,CAAC,CACbN,MAAM,CAACC,MAAM,CAAGxN,YAAY,CAAC+N,IAC/B,CAAC,CACD,IAAOR,MAAM,CAACC,MAAM,CAAGxN,YAAY,CAACgO,KAAM,CAC3C,CACH,MAAOT,OACT,CASA,MAAO,SAASU,YAAW,CAAC5L,MAAc,CAAE6B,MAAc,CAAE2J,IAAqB,CAAEP,MAAY,CAAG,CAAC,CAAQ,CACxGjL,MAAM,CAAkBb,EAAE,CAACsC,UAAU,CAAEI,MAAM,CAAkBjB,IAAI,CAAGiB,MAAM,CAAkBL,GAAG,CAAC,CAClGxB,MAAM,CAAkBb,EAAE,CAAC0M,aAAa,CAAEhK,MAAM,CAAkBjB,IAAI,CAAEqK,MAAM,CAAEO,IAAI,CACvF,CAWA,MAAO,SAASM,WAAU,CACxB9L,MAAc,CAAE+L,GAAW,CAAEC,GAAW,CAAErK,IAAU,CAAIoK,GAAG,CAAkBpK,IAAI,CAAEsK,SAAe,CAAG,CAAC,CAAEC,SAAe,CAAG,CAAC,CACrH,CACLlM,MAAM,CAAkBb,EAAE,CAACsC,UAAU,CAAC/D,MAAM,CAACyO,gBAAgB,CAAGJ,GAAG,CAAkBvK,GAAG,CAAC,CACzFxB,MAAM,CAAkBb,EAAE,CAACsC,UAAU,CAAC/D,MAAM,CAAC0O,iBAAiB,CAAGJ,GAAG,CAAkBxK,GAAG,CAAC,CAC1FxB,MAAM,CAAkBb,EAAE,CAACkN,iBAAiB,CAAC3O,MAAM,CAACyO,gBAAgB,CAAEzO,MAAM,CAAC0O,iBAAiB,CAAEH,SAAS,CAAEC,SAAS,CAAEvK,IAAI,CAC7H,CAQA,MAAO,SAAS2K,eAAc,CAACtM,MAAc,CAAE2D,OAAgB,CAAE4I,IAAgB,CAAG7O,MAAM,CAAC8O,SAAS,CAAQ,CACzGxM,MAAM,CAAkBb,EAAE,CAACgE,aAAa,CAACzF,MAAM,CAAC0F,QAAQ,CAAC,CACzDpD,MAAM,CAAkBb,EAAE,CAACkE,WAAW,CAAEM,OAAO,CAAmB/C,IAAI,CAAG+C,OAAO,CAAmBf,GAAG,CAAC,CACvG5C,MAAM,CAAkBb,EAAE,CAACoN,IAAI,CAAC7O,MAAM,CAAC+O,oBAAoB,CAAEF,IAAI,CAAC,CAClEvM,MAAM,CAAkBb,EAAE,CAACmN,cAAc,CAAE3I,OAAO,CAAmB/C,IAAI,CAC5E,CAUA,MAAO,SAAS8L,aAAY,CAC1B1M,MAAc,CACd,CAAE2D,OAAO,CAAEgJ,QAAQ,CAAG,CAAC,CAAEC,MAAM,CAAE,CAACC,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAC,CAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAoB,CAAC,CAC1EvB,IAAqB,CACrB,CAAEP,MAAM,CAAG,CAAC,CAAE+B,WAAW,CAAEC,YAAY,CAAG,CAAmB,CAAC,CAC9D,CAAC1K,KAAK,CAAEC,MAAM,CAAEE,KAAK,CAAW,CAAG,CAAEiB,OAAO,CAAmBpB,KAAK,CAAGsK,CAAC,CAAGlJ,OAAO,CAAmBnB,MAAM,CAAGsK,CAAC,CAAGnJ,OAAO,CAAmBjB,KAAK,CAAGqK,CAAC,CAAC,CAChJ,CACN,KAAMG,SAAQ,CAAG/O,aAAa,CAAEwF,OAAO,CAAmBxB,MAAM,CAAC,CACjE,KAAMgL,OAAM,CAAG9O,WAAW,CAAEsF,OAAO,CAAmBxB,MAAM,CAAC,CAC7D,KAAMiL,OAAM,CAAIzJ,OAAO,CAAmB/C,IAAI,GAAKlD,MAAM,CAACiF,gBAAgB,CAC1E,KAAM0K,OAAM,CAAGD,MAAM,CAAG1P,MAAM,CAAC4P,2BAA2B,CAAGP,CAAC,CAAIpJ,OAAO,CAAmB/C,IAAI,CAE/FZ,MAAM,CAAkBb,EAAE,CAACgE,aAAa,CAACzF,MAAM,CAAC0F,QAAQ,CAAC,CACzDpD,MAAM,CAAkBb,EAAE,CAACkE,WAAW,CAAEM,OAAO,CAAmB/C,IAAI,CAAG+C,OAAO,CAAmBf,GAAG,CAAC,CAExG,KAAM2K,UAAS,CAAGnP,WAAW,CAAEuF,OAAO,CAAmBxB,MAAM,CAAC,CAChE,KAAMqL,YAAW,CAAGP,YAAY,EAAIzK,MAAM,CAC1C,KAAMiL,aAAY,CAAG9H,IAAI,CAAC+H,KAAK,CAACV,WAAW,CAAGO,SAAS,CAAC,CACxD,KAAMI,cAAa,CAAG1C,MAAM,CAAGA,MAAM,CAAG+B,WAAW,CAClDhN,MAAM,CAAkBb,EAAE,CAACyO,WAAW,CAAClQ,MAAM,CAACmQ,mBAAmB,CAAEL,WAAW,CAAC,CAC/ExN,MAAM,CAAkBb,EAAE,CAACyO,WAAW,CAAClQ,MAAM,CAACoQ,iBAAiB,CAAEL,YAAY,CAAC,CAC9EzN,MAAM,CAAkBb,EAAE,CAACyO,WAAW,CAAClQ,MAAM,CAACqQ,kBAAkB,CAAEpI,IAAI,CAAC+H,KAAK,CAAEzC,MAAM,CAAG+B,WAAW,CAAIO,SAAS,CAAC,CAAC,CACjHvN,MAAM,CAAkBb,EAAE,CAACyO,WAAW,CAAClQ,MAAM,CAACsQ,gBAAgB,CAAE,CAAC,CAAC,CAClEhO,MAAM,CAAkBb,EAAE,CAACyO,WAAW,CAAClQ,MAAM,CAACuQ,kBAAkB,CAAE,CAAC,CAAC,CAErE,GAAIzP,WAAW,CAAEmF,OAAO,CAAmB/C,IAAI,CAAC,CAAE,CAC/CZ,MAAM,CAAkBb,EAAE,CAAC+O,aAAa,CAACb,MAAM,CAAEV,QAAQ,CAAEE,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAExK,KAAK,CAAEC,MAAM,CAAEE,KAAK,CAAGiB,OAAO,CAAmBxB,MAAM,CAAEgL,MAAM,CAAE3B,IAAI,CAAEmC,aAAa,CAC3J,CAAC,IAAM,IAAIP,MAAM,CAAE,CACjB,IAAK,GAAIe,MAAK,CAAGpB,CAAC,CAAEoB,KAAK,CAAGpB,CAAC,CAAGrK,KAAK,CAAE,EAAEyL,KAAK,CAAE,CAC7CnO,MAAM,CAAkBb,EAAE,CAACyO,WAAW,CAAClQ,MAAM,CAACsQ,gBAAgB,CAAEG,KAAK,CAAGV,YAAY,CAAGD,WAAW,CAAC,CACnGxN,MAAM,CAAkBb,EAAE,CAACiP,aAAa,CAACf,MAAM,CAAGc,KAAK,CAAExB,QAAQ,CAAEE,CAAC,CAAEC,CAAC,CAAEvK,KAAK,CAAEC,MAAM,CAAE0K,QAAQ,CAAEC,MAAM,CAAE3B,IAAI,CAAEmC,aAAa,CAChI,CACF,CAAC,IAAM,CACJ3N,MAAM,CAAkBb,EAAE,CAACiP,aAAa,CAACf,MAAM,CAAEV,QAAQ,CAAEE,CAAC,CAAEC,CAAC,CAAEvK,KAAK,CAAEC,MAAM,CAAE0K,QAAQ,CAAEC,MAAM,CAAE3B,IAAI,CAAEmC,aAAa,CACxH,CACF,CASA,MAAO,SAASU,2BAA0B,CACxCrO,MAAc,CACd,CAAE+L,GAAG,CAAEa,MAAM,CAAE,CAAC0B,IAAI,CAAEC,IAAI,CAAC,CAAG,CAAC,CAAC,CAAE,CAAC,CAA0B,CAAC,CAC9D,CAAE5K,OAAO,CAAEgJ,QAAQ,CAAG,CAAC,CAAEC,MAAM,CAAE,CAACC,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAC,CAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAoB,CAAC,CAC1E,CAACxK,KAAK,CAAEC,MAAM,CAAW,CAAG,CAACuJ,GAAG,CAACxJ,KAAK,CAAG+L,IAAI,CAAEvC,GAAG,CAACvJ,MAAM,CAAG+L,IAAI,CAAC,CAC3D,CACN,KAAMpB,OAAM,CAAG9O,WAAW,CAAEsF,OAAO,CAAmBxB,MAAM,CAAC,CAC7D,KAAMiL,OAAM,CAAIzJ,OAAO,CAAmB/C,IAAI,GAAKlD,MAAM,CAACiF,gBAAgB,CAC1E,KAAM0K,OAAM,CAAGD,MAAM,CAAG1P,MAAM,CAAC4P,2BAA2B,CAAGP,CAAC,CAAIpJ,OAAO,CAAmB/C,IAAI,CAE/FZ,MAAM,CAAkBb,EAAE,CAACgE,aAAa,CAACzF,MAAM,CAAC0F,QAAQ,CAAC,CACzDpD,MAAM,CAAkBb,EAAE,CAACkE,WAAW,CAAEM,OAAO,CAAmB/C,IAAI,CAAG+C,OAAO,CAAmBf,GAAG,CAAC,CAEvG5C,MAAM,CAAkBb,EAAE,CAACyO,WAAW,CAAClQ,MAAM,CAACqQ,kBAAkB,CAAEO,IAAI,CAAC,CACvEtO,MAAM,CAAkBb,EAAE,CAACyO,WAAW,CAAClQ,MAAM,CAACsQ,gBAAgB,CAAEO,IAAI,CAAC,CACrEvO,MAAM,CAAkBb,EAAE,CAACyO,WAAW,CAAClQ,MAAM,CAACuQ,kBAAkB,CAAE,CAAC,CAAC,CACpEjO,MAAM,CAAkBb,EAAE,CAACyO,WAAW,CAAClQ,MAAM,CAACmQ,mBAAmB,CAAE,CAAC,CAAC,CAEtE,GAAIrP,WAAW,CAAEmF,OAAO,CAAmB/C,IAAI,CAAC,CAAE,CAC/CZ,MAAM,CAAkBb,EAAE,CAAC+O,aAAa,CAACb,MAAM,CAAEV,QAAQ,CAAEE,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAExK,KAAK,CAAEC,MAAM,CAAE,CAAC,CAAGmB,OAAO,CAAmBxB,MAAM,CAAEgL,MAAM,CAAEpB,GAAG,CACvI,CAAC,IAAM,CACJ/L,MAAM,CAAkBb,EAAE,CAACiP,aAAa,CAACf,MAAM,CAAEV,QAAQ,CAAEE,CAAC,CAAEC,CAAC,CAAEvK,KAAK,CAAEC,MAAM,CAAErE,aAAa,CAAEwF,OAAO,CAAmBxB,MAAM,CAAC,CAAEgL,MAAM,CAAEpB,GAAG,CAChJ,CACF,CASA,MAAO,SAASyC,YAAW,CACzBxO,MAAc,CACd,CAAE2D,OAAO,CAAEgJ,QAAQ,CAAG,CAAC,CAAEC,MAAM,CAAE,CAACC,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAC,CAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAoB,CAAC,CAC1E,CAAEpJ,OAAO,CAAE8K,UAAU,CAAE9B,QAAQ,CAAE+B,WAAW,CAAG,CAAC,CAAE9B,MAAM,CAAE,CAAC+B,IAAI,CAAEC,IAAI,CAAEC,IAAI,CAAC,CAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAoB,CAAC,CAC5G,CAACtM,KAAK,CAAEC,MAAM,CAAEE,KAAK,CAAW,CAAG,CAAEiB,OAAO,CAAmBpB,KAAK,CAAGsK,CAAC,CAAGlJ,OAAO,CAAmBnB,MAAM,CAAGsK,CAAC,CAAGnJ,OAAO,CAAmBjB,KAAK,CAAGqK,CAAC,CAAC,CAChJ,CAEN,KAAMK,OAAM,CAAIqB,UAAU,CAAmB7N,IAAI,GAAKlD,MAAM,CAACiF,gBAAgB,CAC7E,KAAM0K,OAAM,CAAGD,MAAM,CAAG1P,MAAM,CAAC4P,2BAA2B,CAAGuB,IAAI,CAAIJ,UAAU,CAAmB7N,IAAI,CACrGZ,MAAM,CAAkBb,EAAE,CAACgE,aAAa,CAACzF,MAAM,CAAC0F,QAAQ,CAAC,CACzDpD,MAAM,CAAkBb,EAAE,CAACkE,WAAW,CAAEoL,UAAU,CAAmB7N,IAAI,CAAG6N,UAAU,CAAmB7L,GAAG,CAAC,CAG7G5C,MAAM,CAAkBb,EAAE,CAAC4L,UAAU,CAACrN,MAAM,CAACkK,iBAAiB,CAAC,CAC/D5H,MAAM,CAAkBb,EAAE,CAACoI,eAAe,CAAC7J,MAAM,CAAC8J,WAAW,CAAGxH,MAAM,CAAkBJ,KAAK,CAACG,eAAe,CAAC,CAE/G,GAAIvB,WAAW,CAAEmF,OAAO,CAAmB/C,IAAI,CAAC,EAAK+C,OAAO,CAAmB/C,IAAI,GAAKlD,MAAM,CAACiF,gBAAgB,CAAE,CAC/G,IAAK,GAAIwL,MAAK,CAAGpB,CAAC,CAAEoB,KAAK,CAAGpB,CAAC,CAAGrK,KAAK,CAAE,EAAEyL,KAAK,CAAE,CAC9CtG,kBAAkB,CAAE7H,MAAM,CAAkBb,EAAE,CAAEzB,MAAM,CAACkK,iBAAiB,CAAE,CAAEjE,OAAO,CAAEgJ,QAAQ,CAAEwB,KAAM,CAAC,CAAC,CACvG,GAAI3Q,UAAU,CAAE,CACdgJ,OAAO,CAACC,MAAM,CACXzG,MAAM,CAAkBb,EAAE,CAACiJ,sBAAsB,CAAC1K,MAAM,CAAC8J,WAAW,CAAC,GAAK9J,MAAM,CAAC2K,oBAAoB,EAAKrI,MAAM,CAAkBb,EAAE,CAACqB,aAAa,EAAE,CACrJ,uDAAuD,CAE3D,CACA,GAAIhC,WAAW,CAAEiQ,UAAU,CAAmB7N,IAAI,CAAC,CAAE,CAClDZ,MAAM,CAAkBb,EAAE,CAAC2P,iBAAiB,CAACzB,MAAM,EAAID,MAAM,CAAGe,KAAK,CAAG,CAAC,CAAC,CAAEO,WAAW,CAAEC,IAAI,CAAEC,IAAI,CAAEC,IAAI,CAAEhC,CAAC,CAAEC,CAAC,CAAEvK,KAAK,CAAEC,MAAM,CACjI,CAAC,IAAM,CACJxC,MAAM,CAAkBb,EAAE,CAAC4P,iBAAiB,CAAC1B,MAAM,EAAID,MAAM,CAAGe,KAAK,CAAG,CAAC,CAAC,CAAEO,WAAW,CAAEC,IAAI,CAAEC,IAAI,CAAE/B,CAAC,CAAEC,CAAC,CAAEvK,KAAK,CAAEC,MAAM,CAC3H,CACF,CACF,CAAC,IAAM,CACL,KAAM2L,MAAK,CAAG,CAAC,CACftG,kBAAkB,CAAE7H,MAAM,CAAkBb,EAAE,CAAEzB,MAAM,CAACkK,iBAAiB,CAAE,CAAEjE,OAAO,CAAEgJ,QAAQ,CAAEwB,KAAM,CAAC,CAAC,CACvG,GAAI3Q,UAAU,CAAE,CACdgJ,OAAO,CAACC,MAAM,CACXzG,MAAM,CAAkBb,EAAE,CAACiJ,sBAAsB,CAAC1K,MAAM,CAAC8J,WAAW,CAAC,GAAK9J,MAAM,CAAC2K,oBAAoB,EAAKrI,MAAM,CAAkBb,EAAE,CAACqB,aAAa,EAAE,CACrJ,uDAAuD,CAE3D,CACA,GAAIhC,WAAW,CAAEiQ,UAAU,CAAmB7N,IAAI,CAAC,CAAE,CAClDZ,MAAM,CAAkBb,EAAE,CAAC2P,iBAAiB,CAACzB,MAAM,EAAID,MAAM,CAAGe,KAAK,CAAG,CAAC,CAAC,CAAEO,WAAW,CAAEC,IAAI,CAAEC,IAAI,CAAEC,IAAI,CAAEhC,CAAC,CAAEC,CAAC,CAAEvK,KAAK,CAAEC,MAAM,CACjI,CAAC,IAAM,CACJxC,MAAM,CAAkBb,EAAE,CAAC4P,iBAAiB,CAAC1B,MAAM,EAAID,MAAM,CAAGe,KAAK,CAAG,CAAC,CAAC,CAAEO,WAAW,CAAEC,IAAI,CAAEC,IAAI,CAAE/B,CAAC,CAAEC,CAAC,CAAEvK,KAAK,CAAEC,MAAM,CAC3H,CACF,CAGCxC,MAAM,CAAkBb,EAAE,CAACoI,eAAe,CACzC7J,MAAM,CAAC8J,WAAW,CAEjBxH,MAAM,CAAkBC,IAAI,CAAID,MAAM,CAAkBC,IAAI,CAAE+G,IAAI,CAAG,IAAI,CAE9E,CAUA,MAAO,SAASgI,oBAAmB,CACjChP,MAAc,CACd,CAAE2D,OAAO,CAAEgJ,QAAQ,CAAG,CAAC,CAAEC,MAAM,CAAE,CAACC,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAC,CAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAoB,CAAC,CAC1Ef,GAAW,CACX,CAAEf,MAAM,CAAG,CAAC,CAAE+B,WAAW,CAAEC,YAAY,CAAG,CAAmB,CAAC,CAC9D,CAAC1K,KAAK,CAAEC,MAAM,CAAEE,KAAK,CAAW,CAAG,CAAEiB,OAAO,CAAmBpB,KAAK,CAAGsK,CAAC,CAAGlJ,OAAO,CAAmBnB,MAAM,CAAGsK,CAAC,CAAGnJ,OAAO,CAAmBjB,KAAK,CAAGqK,CAAC,CAAC,CAChJ,CACL/M,MAAM,CAAkBb,EAAE,CAACsC,UAAU,CAAC/D,MAAM,CAACuR,iBAAiB,CAAEjD,GAAG,CAAC,CACpEhM,MAAM,CAAkBb,EAAE,CAAC4L,UAAU,CAACrN,MAAM,CAACkK,iBAAiB,CAAC,CAC/D5H,MAAM,CAAkBb,EAAE,CAACoI,eAAe,CAAC7J,MAAM,CAAC8J,WAAW,CAAGxH,MAAM,CAAkBJ,KAAK,CAACG,eAAe,CAAC,CAI/G,KAAMa,KAAI,CAAGvC,WAAW,CAAEsF,OAAO,CAAmBxB,MAAM,CAAC,CAC3D,KAAMA,OAAM,CAAGhE,aAAa,CAAEwF,OAAO,CAAmBxB,MAAM,CAAC,CAC/D,KAAMoL,UAAS,CAAGnP,WAAW,CAAEuF,OAAO,CAAmBxB,MAAM,CAAC,CAChE,KAAMqL,YAAW,CAAGP,YAAY,EAAIzK,MAAM,CAC1C,KAAMiL,aAAY,CAAG9H,IAAI,CAAC+H,KAAK,CAACV,WAAW,CAAGO,SAAS,CAAC,CACxD,KAAMI,cAAa,CAAG1C,MAAM,CAAGA,MAAM,CAAG+B,WAAW,CAClDhN,MAAM,CAAkBb,EAAE,CAACyO,WAAW,CAAClQ,MAAM,CAACwR,eAAe,CAAEzB,YAAY,CAAC,CAC5EzN,MAAM,CAAkBb,EAAE,CAACyO,WAAW,CAAClQ,MAAM,CAACyR,gBAAgB,CAAExJ,IAAI,CAAC+H,KAAK,CAAEzC,MAAM,CAAG+B,WAAW,CAAIO,SAAS,CAAC,CAAC,CAC/GvN,MAAM,CAAkBb,EAAE,CAACyO,WAAW,CAAClQ,MAAM,CAAC0R,cAAc,CAAE,CAAC,CAAC,CAEjE,GAAI5Q,WAAW,CAAEmF,OAAO,CAAmB/C,IAAI,CAAC,EAAK+C,OAAO,CAAmB/C,IAAI,GAAKlD,MAAM,CAACiF,gBAAgB,CAAE,CAC/G,IAAK,GAAIwL,MAAK,CAAGpB,CAAC,CAAEoB,KAAK,CAAGpB,CAAC,CAAGrK,KAAK,CAAE,EAAEyL,KAAK,CAAE,CAC9CtG,kBAAkB,CAAE7H,MAAM,CAAkBb,EAAE,CAAEzB,MAAM,CAACkK,iBAAiB,CAAE,CAAEjE,OAAO,CAAEgJ,QAAQ,CAAEwB,KAAM,CAAC,CAAC,CACvG,GAAI3Q,UAAU,CAAE,CACdgJ,OAAO,CAACC,MAAM,CACXzG,MAAM,CAAkBb,EAAE,CAACiJ,sBAAsB,CAAC1K,MAAM,CAAC8J,WAAW,CAAC,GAAK9J,MAAM,CAAC2K,oBAAoB,EAAKrI,MAAM,CAAkBb,EAAE,CAACqB,aAAa,EAAE,CACrJ,uDAAuD,CAE3D,CACCR,MAAM,CAAkBb,EAAE,CAACkQ,UAAU,CAACxC,CAAC,CAAEC,CAAC,CAAEvK,KAAK,CAAEC,MAAM,CAAEL,MAAM,CAAEvB,IAAI,CAAE+M,aAAa,CAAG,CAACQ,KAAK,CAAGpB,CAAC,EAAIC,WAAW,CAAGQ,WAAW,CACnI,CACF,CAAC,IAAM,CACL,KAAMW,MAAK,CAAG,CAAC,CACftG,kBAAkB,CAAE7H,MAAM,CAAkBb,EAAE,CAAEzB,MAAM,CAACkK,iBAAiB,CAAE,CAAEjE,OAAO,CAAEgJ,QAAQ,CAAEwB,KAAM,CAAC,CAAC,CACvG,GAAI3Q,UAAU,CAAE,CACdgJ,OAAO,CAACC,MAAM,CACXzG,MAAM,CAAkBb,EAAE,CAACiJ,sBAAsB,CAAC1K,MAAM,CAAC8J,WAAW,CAAC,GAAK9J,MAAM,CAAC2K,oBAAoB,EAAKrI,MAAM,CAAkBb,EAAE,CAACqB,aAAa,EAAE,CACrJ,uDAAuD,CAE3D,CACCR,MAAM,CAAkBb,EAAE,CAACkQ,UAAU,CAACxC,CAAC,CAAEC,CAAC,CAAEvK,KAAK,CAAEC,MAAM,CAAEL,MAAM,CAAEvB,IAAI,CAAE+M,aAAa,CACzF,CAGC3N,MAAM,CAAkBb,EAAE,CAACoI,eAAe,CACzC7J,MAAM,CAAC8J,WAAW,CAEjBxH,MAAM,CAAkBC,IAAI,CAAID,MAAM,CAAkBC,IAAI,CAAE+G,IAAI,CAAG,IAAI,CAE9E,CAWA,MAAO,SAASsI,gBAAe,CAACtP,MAAc,CAAEC,IAAgB,CAAQ,CACtE,GAAIsC,MAAK,CAAIvC,MAAM,CAAkBb,EAAE,CAACoQ,kBAAkB,CAC1D,GAAI/M,OAAM,CAAIxC,MAAM,CAAkBb,EAAE,CAACqQ,mBAAmB,CAC5D,GAAKvP,IAAI,CAAsBwI,KAAK,CAACpB,MAAM,CAAE,CAC3C9E,KAAK,CAAItC,IAAI,CAAsBwI,KAAK,CAAC,CAAC,CAAC,CAAClG,KAAK,CACjDC,MAAM,CAAIvC,IAAI,CAAsBwI,KAAK,CAAC,CAAC,CAAC,CAACjG,MAC/C,CAGCxC,MAAM,CAAkBb,EAAE,CAACoI,eAAe,CAAC7J,MAAM,CAAC8J,WAAW,CAAGvH,IAAI,CAAsB+G,IAAI,CAAC,CAG/FhH,MAAM,CAAkBb,EAAE,CAACsQ,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAElN,KAAK,CAAEC,MAAM,CAAC,CACxDxC,MAAM,CAAkBb,EAAE,CAACuQ,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC,CAC5C,GAAK1P,MAAM,CAAkBJ,KAAK,CAAC+P,OAAO,CAAE,CACzC3P,MAAM,CAAkBJ,KAAK,CAAC+P,OAAO,CAAG,KAAK,CAC9CC,QAAQ,CAAE5P,MAAM,CAAkBb,EAAE,CAAEzB,MAAM,CAACmS,YAAY,CAAE,KAAK,CAClE,CAIA,GAAIC,UAAS,CAAG,CAAC,CACjB,GAAI,CAACC,KAAK,CAAE9P,IAAI,CAAsB6I,UAAU,CAAE,CAAE,CAClDgH,SAAS,EAAIpS,MAAM,CAACsS,gBAAgB,CACnChQ,MAAM,CAAkBb,EAAE,CAAC2J,UAAU,CAAE7I,IAAI,CAAsB6I,UAAU,CAAE,CAC9EmH,cAAc,CAAEjQ,MAAM,CAAkBb,EAAE,CAAGa,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CAACsQ,UAAU,CAAE,IAAI,CAAC,CACjGlQ,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CAACsQ,UAAU,CAAG,IACpD,CACA,GAAI,CAACH,KAAK,CAAE9P,IAAI,CAAsB8I,YAAY,CAAE,CAAE,CACpD+G,SAAS,EAAIpS,MAAM,CAACyS,kBAAkB,CACrCnQ,MAAM,CAAkBb,EAAE,CAAC4J,YAAY,CAAE9I,IAAI,CAAsB8I,YAAY,CAAE,CAClFqH,gBAAgB,CAAEpQ,MAAM,CAAkBb,EAAE,CAAGa,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CAACyQ,gBAAgB,CAAExR,SAAS,CAAC,CAC9GmB,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CAACyQ,gBAAgB,CAAGxR,SAC1D,CACAyR,cAAc,CAAEtQ,MAAM,CAAkBb,EAAE,CAAGa,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CAAC2Q,cAAc,CAAEzS,UAAU,CAAC0S,GAAG,CAAC,CAC/GxQ,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CAAC2Q,cAAc,CAAGzS,UAAU,CAAC0S,GAAG,CAEpE,GAAKvQ,IAAI,CAAsBwI,KAAK,CAACpB,MAAM,CAAE,CAC3C,IAAK,GAAII,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAIxH,IAAI,CAAsBwI,KAAK,CAACpB,MAAM,CAAE,EAAEI,CAAC,CAAE,CAChE,GAAKxH,IAAI,CAAsB0I,WAAW,CAAClB,CAAC,CAAC,CAAE,CAC7C,KAAM7G,KAAI,CAAG1C,WAAW,CAAE+B,IAAI,CAAsBwI,KAAK,CAAChB,CAAC,CAAC,CAACtF,MAAM,CAAC,CACpE,GAAIvB,IAAI,GAAKlD,MAAM,CAAC+S,GAAG,CAAE,CACtBzQ,MAAM,CAAkBb,EAAE,CAACuR,aAAa,CAAChT,MAAM,CAACiT,KAAK,CAAElJ,CAAC,CAAGxH,IAAI,CAAsB0I,WAAW,CAAClB,CAAC,CAAC,CACtG,CAAC,IAAM,IAAI7G,IAAI,GAAKlD,MAAM,CAACkT,YAAY,CAAE,CACtC5Q,MAAM,CAAkBb,EAAE,CAAC0R,cAAc,CAACnT,MAAM,CAACiT,KAAK,CAAElJ,CAAC,CAAGxH,IAAI,CAAsB0I,WAAW,CAAClB,CAAC,CAAC,CACvG,CAAC,IAAM,CACJzH,MAAM,CAAkBb,EAAE,CAAC2R,aAAa,CAACpT,MAAM,CAACiT,KAAK,CAAElJ,CAAC,CAAGxH,IAAI,CAAsB0I,WAAW,CAAClB,CAAC,CAAC,CACtG,CACF,CACF,CACF,CAAC,IAAM,IAAKxH,IAAI,CAAsB4I,UAAU,CAAE,CAChDiH,SAAS,EAAIpS,MAAM,CAACqT,gBAAgB,CACnC/Q,MAAM,CAAkBb,EAAE,CAAC0J,UAAU,CAAC,GAAI5I,IAAI,CAAsB4I,UAAW,CAClF,CAGA,GAAIiH,SAAS,CAAE,CACZ9P,MAAM,CAAkBb,EAAE,CAACyJ,KAAK,CAACkH,SAAS,CAC7C,CAEC9P,MAAM,CAAkBC,IAAI,CAAGA,IAClC,CAOA,MAAO,SAAS+Q,iBAAgB,CAAChR,MAAc,CAAEW,IAAiC,CAAG,CAAC,CAAC,CAAQ,CAE5FX,MAAM,CAAkBb,EAAE,CAACoI,eAAe,CAAC7J,MAAM,CAAC8J,WAAW,CAAE,IAAI,CAAC,CAGpExH,MAAM,CAAkBb,EAAE,CAACsQ,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAGzP,MAAM,CAAkBb,EAAE,CAACoQ,kBAAkB,CAAGvP,MAAM,CAAkBb,EAAE,CAACqQ,mBAAmB,CAAC,CAC1IxP,MAAM,CAAkBb,EAAE,CAACuQ,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC,CAC5C,GAAK1P,MAAM,CAAkBJ,KAAK,CAAC+P,OAAO,CAAE,CACzC3P,MAAM,CAAkBJ,KAAK,CAAC+P,OAAO,CAAG,KAAK,CAC9CC,QAAQ,CAAE5P,MAAM,CAAkBb,EAAE,CAAEzB,MAAM,CAACmS,YAAY,CAAE,KAAK,CAClE,CAIA,GAAIC,UAAS,CAAG,CAAC,CACjB,GAAI,CAACC,KAAK,CAACpP,IAAI,CAACmI,UAAU,CAAE,CAAE,CAC5BgH,SAAS,EAAIpS,MAAM,CAACsS,gBAAgB,CACnChQ,MAAM,CAAkBb,EAAE,CAAC2J,UAAU,CAACnI,IAAI,CAACmI,UAAU,CAAE,CACxDmH,cAAc,CAAEjQ,MAAM,CAAkBb,EAAE,CAAGa,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CAACsQ,UAAU,CAAE,IAAI,CAAC,CACjGlQ,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CAACsQ,UAAU,CAAG,IACpD,CACA,GAAI,CAACH,KAAK,CAACpP,IAAI,CAACoI,YAAY,CAAE,CAAE,CAC9B+G,SAAS,EAAIpS,MAAM,CAACyS,kBAAkB,CACrCnQ,MAAM,CAAkBb,EAAE,CAAC4J,YAAY,CAACpI,IAAI,CAACoI,YAAY,CAAE,CAC5DqH,gBAAgB,CAAEpQ,MAAM,CAAkBb,EAAE,CAAGa,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CAACyQ,gBAAgB,CAAExR,SAAS,CAAC,CAC9GmB,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CAACyQ,gBAAgB,CAAGxR,SAC1D,CACA,GAAI8B,IAAI,CAACkI,UAAU,CAAE,CACnBiH,SAAS,EAAIpS,MAAM,CAACqT,gBAAgB,CACnC/Q,MAAM,CAAkBb,EAAE,CAAC0J,UAAU,CAAC,GAAGlI,IAAI,CAACkI,UAAW,CAAC,CAC3DyH,cAAc,CAAEtQ,MAAM,CAAkBb,EAAE,CAAGa,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CAAC2Q,cAAc,CAAEzS,UAAU,CAAC0S,GAAG,CAAC,CAC/GxQ,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CAAC2Q,cAAc,CAAGzS,UAAU,CAAC0S,GACnE,CAGA,GAAIV,SAAS,CAAE,CACZ9P,MAAM,CAAkBb,EAAE,CAACyJ,KAAK,CAACkH,SAAS,CAC7C,CAEC9P,MAAM,CAAkBC,IAAI,CAAG,IAClC,CAMA,MAAO,SAASgR,iBAAgB,CAACjR,MAAc,CAAQ,CACrD,GAAKA,MAAM,CAAkBC,IAAI,CAAE,CAGjC,IAAK,GAAIwH,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAIzH,MAAM,CAAkBC,IAAI,CAAEwI,KAAK,CAACpB,MAAM,CAAE,EAAEI,CAAC,CAAE,CACpE,GAAKzH,MAAM,CAAkBC,IAAI,CAAEgH,KAAK,CAACQ,CAAC,CAAC,CAAE,CAC3CyJ,eAAe,CAAElR,MAAM,CAAkBb,EAAE,CAAGa,MAAM,CAAkBC,IAAI,CAAE+G,IAAI,CAAGhH,MAAM,CAAkBC,IAAI,CAAEgH,KAAK,CAACQ,CAAC,CAAC,CACtHzH,MAAM,CAAkBC,IAAI,CAAEwI,KAAK,CAAChB,CAAC,CAAC,CAAE/J,MAAM,CAACqT,gBAAgB,CAAErT,MAAM,CAACkK,iBAAiB,CAAGH,CAAC,CAClG,CACF,CACA,KAAM0J,QAAO,CAAInR,MAAM,CAAkBC,IAAI,CAAEgH,KAAK,CAAEjH,MAAM,CAAkBC,IAAI,CAAEgH,KAAK,CAACI,MAAM,CAAG,CAAC,CAAC,CACrG,GAAKrH,MAAM,CAAkBC,IAAI,CAAEyC,KAAK,EAAIyO,OAAO,CAAE,CACnDD,eAAe,CAAElR,MAAM,CAAkBb,EAAE,CAAGa,MAAM,CAAkBC,IAAI,CAAE+G,IAAI,CAAEmK,OAAO,CAEtFnR,MAAM,CAAkBC,IAAI,CAAEyC,KAAK,CAAGhF,MAAM,CAACsS,gBAAgB,CAAGtS,MAAM,CAACyS,kBAAkB,CAC9F,CAEF,CACCnQ,MAAM,CAAkBC,IAAI,CAAG,IAClC,CAOA,MAAO,SAASmR,kBAAiB,CAACpR,MAAc,CAAE4K,QAAwB,CAAQ,CAEhF,GAAK5K,MAAM,CAAkBJ,KAAK,CAACgL,QAAQ,GAAKA,QAAQ,CAAE,CACxD,MACF,CAIA,GAAI,CAAE5K,MAAM,CAAkBJ,KAAK,CAACgL,QAAQ,EAAK5K,MAAM,CAAkBJ,KAAK,CAACgL,QAAQ,CAAEtB,GAAG,GAAMsB,QAAQ,CAA0BtB,GAAG,CAAE,CACtItJ,MAAM,CAAkBb,EAAE,CAACkS,UAAU,CAAEzG,QAAQ,CAA0BtB,GAAG,CAC/E,CAGAgI,kBAAkB,CAAEtR,MAAM,CAAkBb,EAAE,CAAGa,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CAAGgL,QAAQ,CAA0BhL,KAAK,CAAGI,MAAM,CAAkBJ,KAAK,CAAC2R,UAAU,CAAC,CAC1KlR,MAAM,CAACC,MAAM,CAAEN,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CAAGgL,QAAQ,CAA0BhL,KAAK,CAAC,CAG7F,KAAM4R,cAAqB,CAAG,EAAE,CAChC,IAAK,KAAM,CAAEC,UAAW,CAAC,EAAKzR,OAAM,CAAkBJ,KAAK,CAACiL,OAAO,CAAE,CACnE,IAAK,KAAM,CAAE6G,GAAI,CAAC,EAAID,WAAU,CAAE,CAChCD,aAAa,CAACE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAG,CAC1B,CACF,CACC1R,MAAM,CAAkBJ,KAAK,CAACiL,OAAO,CAAG8G,KAAK,CAAE/G,QAAQ,CAA0BC,OAAO,CAACxD,MAAM,CAAC,CACjG,IAAK,GAAIoD,KAAI,CAAG,CAAC,CAAEA,IAAI,CAAIG,QAAQ,CAA0BC,OAAO,CAACxD,MAAM,CAAE,EAAEoD,IAAI,CAAE,CACnF,KAAM,CAAEgH,UAAU,CAAEG,MAAM,CAAEC,QAAQ,CAAG,CAAE,CAAC,CAAIjH,QAAQ,CAA0BC,OAAO,CAACJ,IAAI,CAAC,CAC7F,KAAMqH,SAA2B,CAAG,EAAE,CACrC9R,MAAM,CAAkBJ,KAAK,CAACiL,OAAO,CAACJ,IAAI,CAAC,CAAG,CAC7CjJ,GAAG,CAAE,IAAI,CAAEiQ,UAAU,CAAEK,QAAQ,CAAEF,MAAM,CAAEG,IAAI,CAAEF,QAAQ,CAAE5G,MAAM,CAAE,CAAC,CAAE+G,cAAc,CAAE,CACtF,CAAC,CACD,IAAK,KAAM,CAAE7P,MAAM,CAAE8I,MAAM,CAAEgH,cAAe,CAAC,EAAIR,WAAU,CAAE,CAC3DD,aAAa,CAACS,cAAc,CAAC,CAAG,CAACT,aAAa,CAACS,cAAc,CAAC,EAAI,CAAC,EAAI,CAAC,CACxEH,QAAQ,CAACxJ,IAAI,CAAC,CACZzG,MAAM,CAAE4I,IAAI,CACZiH,GAAG,CAAE,CACHO,cAAc,CACdvT,UAAU,CAACyD,MAAM,CAAC,CAClBxD,UAAU,CAACwD,MAAM,CAAC,CAClBvD,gBAAgB,CAACuD,MAAM,CAAC,CACxByP,MAAM,CACN3G,MAAM,CACP,CACD8G,IAAI,CAAEF,QACR,CAAC,CACH,CACF,CAIA,IAAK,GAAIpK,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAG+J,aAAa,CAACnK,MAAM,CAAE,EAAEI,CAAC,CAAE,CAC7C,GAAI+J,aAAa,CAAC/J,CAAC,CAAC,GAAK,CAAC,CAAE,CACzBzH,MAAM,CAAkBb,EAAE,CAAC+S,uBAAuB,CAACzK,CAAC,CACvD,CAAC,IAAM,IAAI+J,aAAa,CAAC/J,CAAC,CAAC,GAAK,CAAC,CAAE,CAChCzH,MAAM,CAAkBb,EAAE,CAACgT,wBAAwB,CAAC1K,CAAC,CACxD,CACF,CAGCzH,MAAM,CAAkBJ,KAAK,CAACgL,QAAQ,CAAGA,QAC5C,CAOA,MAAO,SAASwH,SAAQ,CAACpS,MAAc,CAAE6B,MAAc,CAAQ,CAC7D,GAAKA,MAAM,CAAkBL,GAAG,GAAMxB,MAAM,CAAkBJ,KAAK,CAACqK,KAAK,CAAE,CACxEjK,MAAM,CAAkBb,EAAE,CAACsC,UAAU,CAAC/D,MAAM,CAACuD,oBAAoB,CAAIjB,MAAM,CAAkBJ,KAAK,CAACqK,KAAK,CAAIpI,MAAM,CAAkBL,GAAG,CAC1I,CACF,CAQA,MAAO,SAAS6Q,UAAS,CAACrS,MAAc,CAAEyK,IAAY,CAAE5I,MAAc,CAAEoJ,MAAY,CAAG,CAAC,CAAQ,CAC9F,KAAMqH,IAAG,CAAItS,MAAM,CAAkBJ,KAAK,CAACiL,OAAO,CAACJ,IAAI,CAAC,CACxD,GAAI6H,GAAG,GAAKA,GAAG,CAAC9Q,GAAG,GAAMK,MAAM,CAAkBL,GAAG,EAAI8Q,GAAG,CAACrH,MAAM,GAAKA,MAAM,CAAC,CAAE,CAC9EqH,GAAG,CAAC9Q,GAAG,CAAIK,MAAM,CAAkBL,GAAG,CACtC8Q,GAAG,CAACrH,MAAM,CAAGA,MAAM,CACnBqH,GAAG,CAACN,cAAc,CAAG,CAAC,CACtBO,aAAa,CAAEvS,MAAM,CAAkBb,EAAE,CAAEmT,GAAG,CAAErH,MAAM,CACxD,CACF,CASA,MAAO,SAASuH,aAAY,CAACxS,MAAc,CAAEyK,IAAU,CAAEgI,SAAoB,CAAEC,OAAkB,CAAG,EAAE,CAAQ,CAC5G,GAAI,CAAE1S,MAAM,CAAkBJ,KAAK,CAACgL,QAAQ,CAAE,CAC5C,MACF,CAEA,IAAK,GAAInD,EAAC,CAAG,CAAC,CAAEkL,SAAS,CAAG,CAAC,CAAElL,CAAC,CAAIgL,SAAS,CAAqBxJ,OAAO,CAAC5B,MAAM,CAAE,EAAEI,CAAC,CAAE,CACrF,KAAMmL,QAAO,CAAIH,SAAS,CAAqBxJ,OAAO,CAACxB,CAAC,CAAC,CAEzD,KAAMoL,YAAW,CAAI7S,MAAM,CAAkBJ,KAAK,CAACgL,QAAQ,CAAElB,KAAK,CAACe,IAAI,CAAC,EAAKzK,MAAM,CAAkBJ,KAAK,CAACgL,QAAQ,CAAElB,KAAK,CAACe,IAAI,CAAC,CAACmI,OAAO,CAACzJ,OAAO,CAAC,CACjJ,GAAI,CAAC0J,WAAW,CAAE,CAChB,GAAIrV,UAAU,CAAE,CACdgJ,OAAO,CAACsM,IAAI,CAAE,8BAA6BF,OAAO,CAACzJ,OAAQ,WAAUsB,IAAK,EAAC,CAC7E,CACA,QACF,CAEA,GAAIjN,UAAU,CAAE,CACd,GAAIoV,OAAO,CAAC/Q,MAAM,CAAE,CAClB2E,OAAO,CAACC,MAAM,CAACoM,WAAW,CAACjS,IAAI,GAAKhD,WAAW,CAACuM,MAAM,CACnD,kCAAiC0I,WAAW,CAACxI,KAAM,cAAawI,WAAW,CAAC1J,OAAQ,WAAUsB,IAAK,EAAC,CAAC,CAExGjE,OAAO,CAACC,MAAM,CAAEmM,OAAO,CAAC/Q,MAAM,CAAkBjB,IAAI,GAAKlD,MAAM,CAACqD,cAAc,CAC3E,gDAA+C8R,WAAW,CAACxI,KAAM,cAAawI,WAAW,CAAC1J,OAAQ,WAAUsB,IAAK,EAAC,CAAC,CAEtH,KAAMsI,SAAQ,CAAI/S,MAAM,CAAkBb,EAAE,CAAC6T,8BAA8B,CAExEhT,MAAM,CAAkBJ,KAAK,CAACgL,QAAQ,CAAEtB,GAAG,CAC5CuJ,WAAW,CAAC5I,KAAK,CACjBvM,MAAM,CAACuV,uBAAuB,CAC/B,CACD,KAAMC,UAAS,CAAIlT,MAAM,CAAkBb,EAAE,CAAC0G,YAAY,CAACnI,MAAM,CAACyV,+BAA+B,CAAC,CAClG3M,OAAO,CAACC,MAAM,CAAEmM,OAAO,CAAC/Q,MAAM,CAAkBF,IAAI,EAAIoR,QAAQ,CAC7D,oCAAmCF,WAAW,CAACxI,KAAM,cAAawI,WAAW,CAAC1J,OAAQ,WAAUsB,IAAK,8BAA6BsI,QAAS,sCAAqCG,SAAU,WAAWN,OAAO,CAAC/Q,MAAM,CAAkBF,IAAK,EAAC,CAChP,CAAC,IAAM,IAAIiR,OAAO,CAACjP,OAAO,CAAE,CAC1B6C,OAAO,CAACC,MAAM,CAACoM,WAAW,CAACjS,IAAI,GAAKhD,WAAW,CAAC2M,OAAO,CACpD,mCAAkCsI,WAAW,CAACxI,KAAM,cAAawI,WAAW,CAAC1J,OAAQ,WAAUsB,IAAK,EAAC,CAC1G,CAAC,IAAM,IAAImI,OAAO,CAAC5M,OAAO,CAAE,CAC1BQ,OAAO,CAACC,MAAM,CAACoM,WAAW,CAACjS,IAAI,GAAKhD,WAAW,CAAC8M,OAAO,CACpD,mCAAkCmI,WAAW,CAACxI,KAAM,cAAawI,WAAW,CAAC1J,OAAQ,WAAUsB,IAAK,EAAC,CAC1G,CAAC,IAAM,CACLjE,OAAO,CAACC,MAAM,CAAC,KAAK,CAAG,2DAA0DoM,WAAW,CAACxI,KAAM,cAAawI,WAAW,CAAC1J,OAAQ,WAAUsB,IAAK,EAAC,CACtJ,CACF,CAEA,GAAImI,OAAO,CAAC/Q,MAAM,CAAE,CAClB,GAAIoJ,OAAM,CAAG2H,OAAO,CAACQ,YAAY,EAAI,CAAC,CACtC,GAAIP,WAAW,CAACQ,mBAAmB,CAAE,CACnCpI,MAAM,EAAIyH,OAAO,CAACC,SAAS,CAAC,EAAI,CAAC,CACjC,EAAEA,SACJ,CAEC3S,MAAM,CAAkBb,EAAE,CAACmU,eAAe,CACzC5V,MAAM,CAACqD,cAAc,CACrB8R,WAAW,CAACpI,IAAI,CACfmI,OAAO,CAAC/Q,MAAM,CAAkBL,GAAG,CACpCyJ,MAAM,CACN2H,OAAO,CAACW,UAAU,EAAMX,OAAO,CAAC/Q,MAAM,CAAkBF,IAAI,CAAGsJ,MAAO,CAE1E,CAAC,IAAM,IAAI2H,OAAO,CAACjP,OAAO,CAAE,CACzB3D,MAAM,CAAkBb,EAAE,CAACgE,aAAa,CAACzF,MAAM,CAAC0F,QAAQ,CAAGyP,WAAW,CAACpI,IAAI,CAAC,CAC5EzK,MAAM,CAAkBb,EAAE,CAACkE,WAAW,CAAEuP,OAAO,CAACjP,OAAO,CAAmB/C,IAAI,CAAGgS,OAAO,CAACjP,OAAO,CAAmBf,GAAG,CAAC,CACvH5C,MAAM,CAAkBb,EAAE,CAACqU,SAAS,CAACX,WAAW,CAAC7I,GAAG,CAAE6I,WAAW,CAACpI,IAAI,CACzE,CAAC,IAAM,IAAImI,OAAO,CAAC5M,OAAO,CAAE,CACzBhG,MAAM,CAAkBb,EAAE,CAACsU,WAAW,CAACZ,WAAW,CAACpI,IAAI,CAAGmI,OAAO,CAAC5M,OAAO,CAAmBnC,GAAG,CAClG,CACF,CACF,CAUA,MAAO,SAAS6P,KAAI,CAAC1T,MAAc,CAAE2T,WAAmB,CAAEC,aAAa,CAAG,CAAC,CAAEC,WAAW,CAAG,CAAC,CAAEC,aAAmB,CAAG,CAAC,CAAQ,CAC3H,IAAK,KAAMxB,IAAG,GAAKtS,OAAM,CAAkBJ,KAAK,CAACiL,OAAO,CAAE,CACxD,GAAIyH,GAAG,CAACP,IAAI,EAAIO,GAAG,CAACN,cAAc,GAAK8B,aAAa,CAAE,CACpDxB,GAAG,CAACN,cAAc,CAAG8B,aAAa,CAClCvB,aAAa,CAAEvS,MAAM,CAAkBb,EAAE,CAAEmT,GAAG,CAAEwB,aAAa,CAAGxB,GAAG,CAACV,MAAM,CAC5E,CACF,CACC5R,MAAM,CAAkBb,EAAE,CAAC4U,mBAAmB,CAAE/T,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CAACoU,QAAQ,CAAEH,WAAW,CAAEF,WAAW,CAAEC,aAAa,CACxI,CAUA,MAAO,SAASK,YAAW,CAACjU,MAAc,CAAEkU,UAAkB,CAAEN,aAAa,CAAG,CAAC,CAAEO,UAAU,CAAG,CAAC,CAAEL,aAAmB,CAAG,CAAC,CAAQ,CAChI,IAAK,KAAMxB,IAAG,GAAKtS,OAAM,CAAkBJ,KAAK,CAACiL,OAAO,CAAE,CACxD,GAAIyH,GAAG,CAACP,IAAI,EAAIO,GAAG,CAACN,cAAc,GAAK8B,aAAa,CAAE,CACpDxB,GAAG,CAACN,cAAc,CAAG8B,aAAa,CAClCvB,aAAa,CAAEvS,MAAM,CAAkBb,EAAE,CAAEmT,GAAG,CAAEwB,aAAa,CAAGxB,GAAG,CAACV,MAAM,CAC5E,CACF,CACC5R,MAAM,CAAkBb,EAAE,CAACiV,qBAAqB,CAC9CpU,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CAACoU,QAAQ,CAAEE,UAAU,CAAGlU,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CAACyU,WAAW,CAC3GF,UAAU,CAAG5V,aAAa,CAAEyB,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CAACyU,WAAW,CAAC,CAAET,aAAa,CAE/F,CAYA,MAAO,SAASU,YAAW,CAACtU,MAAc,CAAE6M,CAAS,CAAEC,CAAS,CAAEvK,KAAa,CAAEC,MAAc,CAAE+R,QAAQ,CAAG,CAAC,CAAEC,QAAQ,CAAG,CAAC,CAAQ,CAChIxU,MAAM,CAAkBb,EAAE,CAACsQ,QAAQ,CAAC5C,CAAC,CAAEC,CAAC,CAAEvK,KAAK,CAAEC,MAAM,CAAC,CACxDxC,MAAM,CAAkBb,EAAE,CAACuQ,UAAU,CAAC6E,QAAQ,CAAEC,QAAQ,CAC3D,CAUA,MAAO,SAASC,eAAc,CAACzU,MAAc,CAAE6M,CAAS,CAAEC,CAAS,CAAEvK,KAAa,CAAEC,MAAc,CAAQ,CACxG,GAAI,CAAExC,MAAM,CAAkBJ,KAAK,CAAC+P,OAAO,CAAE,CAC3CC,QAAQ,CAAE5P,MAAM,CAAkBb,EAAE,CAAEzB,MAAM,CAACmS,YAAY,CAAE,IAAI,CAAC,CAC/D7P,MAAM,CAAkBJ,KAAK,CAAC+P,OAAO,CAAG,IAC3C,CACC3P,MAAM,CAAkBb,EAAE,CAACwQ,OAAO,CAAC9C,CAAC,CAAEC,CAAC,CAAEvK,KAAK,CAAEC,MAAM,CACzD,CAOA,MAAO,SAASkS,cAAa,CAAC1U,MAAc,CAAEyI,KAAY,CAAQ,CAC/DzI,MAAM,CAAkBb,EAAE,CAACwV,UAAU,CAAC,GAAGlM,KAAK,CACjD,CAOA,MAAO,SAASmM,cAAa,CAAC5U,MAAc,CAAE6U,GAAS,CAAQ,CAC7D,GAAK7U,MAAM,CAAkBJ,KAAK,CAAC2R,UAAU,GAAKsD,GAAG,CAAE,CACrD,KAAM,CAAEC,mBAAmB,CAAEC,kBAAkB,CAAEC,eAAgB,CAAC,CAAIhV,MAAM,CAAkBJ,KAAK,CAACA,KAAK,CACxGI,MAAM,CAAkBb,EAAE,CAAC8V,mBAAmB,CAACvX,MAAM,CAACwX,KAAK,CAAEJ,mBAAmB,CAAED,GAAG,CAAEG,eAAe,CAAC,CACvGhV,MAAM,CAAkBb,EAAE,CAAC8V,mBAAmB,CAACvX,MAAM,CAACyX,IAAI,CAAEJ,kBAAkB,CAAEF,GAAG,CAAEG,eAAe,CAAC,CACrGhV,MAAM,CAAkBJ,KAAK,CAAC2R,UAAU,CAAGsD,GAC9C,CACF,CAkGA,QAAShV,gBAAe,CAACV,EAA0B,CAAe,CAChE,KAAMS,MAAK,CAAGkL,mBAAmB,EAAE,CAGnC3L,EAAE,CAACwV,UAAU,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzBrD,kBAAkB,CAACnS,EAAE,CAAES,KAAK,CAAEA,KAAK,CAAE,CAAC,CAAE,IAAI,CAAC,CAC7C,IAAK,GAAI6H,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAG1I,kBAAkB,CAAE,EAAE0I,CAAC,CAAE,CAC3CtI,EAAE,CAACgT,wBAAwB,CAAC1K,CAAC,CAC/B,CAGAtI,EAAE,CAACyO,WAAW,CAAClQ,MAAM,CAAC0X,cAAc,CAAE,CAAC,CAAC,CACxCjW,EAAE,CAACyO,WAAW,CAAClQ,MAAM,CAAC2X,gBAAgB,CAAE,CAAC,CAAC,CAE1C,MAAO,CACLtV,eAAe,CAAEZ,EAAE,CAACmI,iBAAiB,EAAE,CACvCuD,OAAO,CAAE,EAAE,CACXjL,KAAK,CACLgL,QAAQ,CAAE,IAAI,CACdX,KAAK,CAAE,IAAI,CACXsH,UAAU,CAAE,CAAC,CACb5B,OAAO,CAAE,KACX,CACF,CAEA,QAASpG,qBAAoB,CAACvJ,MAAc,CAAEwJ,MAAmB,CAAEC,QAAqB,CAAgB,CAEtG,KAAMH,IAAG,CAAItJ,MAAM,CAAkBb,EAAE,CAACmW,aAAa,EAAG,CACvDtV,MAAM,CAAkBb,EAAE,CAACoW,YAAY,CAACjM,GAAG,CAAEE,MAAM,CAAC,CACpDxJ,MAAM,CAAkBb,EAAE,CAACoW,YAAY,CAACjM,GAAG,CAAEG,QAAQ,CAAC,CACtDzJ,MAAM,CAAkBb,EAAE,CAACqW,WAAW,CAAClM,GAAG,CAAC,CAE5C,GAAI9L,UAAU,CAAE,CACdgJ,OAAO,CAACC,MAAM,CACXzG,MAAM,CAAkBb,EAAE,CAACsW,mBAAmB,CAACnM,GAAG,CAAE5L,MAAM,CAACgY,WAAW,CAAC,EAAInV,YAAY,CAACP,MAAM,CAAC,CAC/F,2BAA2BA,MAAM,CAAkBb,EAAE,CAACwW,iBAAiB,CAACrM,GAAG,CAAE,EAAC,CAEnF,CAEA,MAAOA,IACT,CAEA,QAASzB,mBAAkB,CACzB1I,EAA0B,CAAEyW,UAAkB,CAAE,CAAEjS,OAAO,CAAEwK,KAAK,CAAG,CAAC,CAAExB,QAAQ,CAAG,CAAe,CAAC,CAC3F,CACN,GAAInO,WAAW,CAAEmF,OAAO,CAAmB/C,IAAI,CAAC,CAAE,CAChDzB,EAAE,CAAC0W,uBAAuB,CAACnY,MAAM,CAAC8J,WAAW,CAAEoO,UAAU,CAAGjS,OAAO,CAAmBf,GAAG,CAAE+J,QAAQ,CAAEwB,KAAK,CAC5G,CAAC,IAAM,CACL,KAAM2H,UAAS,CAAKnS,OAAO,CAAmB/C,IAAI,GAAKlD,MAAM,CAACiF,gBAAgB,CAC5EjF,MAAM,CAAC4P,2BAA2B,CAAGa,KAAK,CAAIxK,OAAO,CAAmB/C,IAAI,CAC9EzB,EAAE,CAAC4W,oBAAoB,CAACrY,MAAM,CAAC8J,WAAW,CAAEoO,UAAU,CAAEE,SAAS,CAAGnS,OAAO,CAAmBf,GAAG,CAAE+J,QAAQ,CAC7G,CACF,CAEA,QAASpE,yBAAwB,CAC/BpJ,EAA0B,CAAEyW,UAAkB,CAAElO,IAAiB,CACxC,CACzB,KAAMc,GAAE,CAAGrJ,EAAE,CAACmI,iBAAiB,EAAE,CACjCnI,EAAE,CAACoI,eAAe,CAAC7J,MAAM,CAAC8J,WAAW,CAAEgB,EAAE,CAAC,CAC1CX,kBAAkB,CAAC1I,EAAE,CAAEyW,UAAU,CAAElO,IAAI,CAAC,CACxC,GAAIlK,UAAU,CAAE,CACdgJ,OAAO,CAACC,MAAM,CACZtH,EAAE,CAACiJ,sBAAsB,CAAC1K,MAAM,CAAC8J,WAAW,CAAC,GAAK9J,MAAM,CAAC2K,oBAAoB,EAAIlJ,EAAE,CAACqB,aAAa,EAAE,CACnG,+DAA+D,CAEnE,CACA,MAAOgI,GACT,CAEA,QAAS0I,gBAAe,CACtB/R,EAA0B,CAAE6W,IAA6B,CAAEC,EAA2B,CACtFC,GAAkB,CAAEC,IAAY,CAAEP,UAAgB,CAAGlY,MAAM,CAACkK,iBAAiB,CACvE,CACNzI,EAAE,CAACoI,eAAe,CAAC7J,MAAM,CAAC0Y,gBAAgB,CAAEJ,IAAI,CAAC,CACjD7W,EAAE,CAACoI,eAAe,CAAC7J,MAAM,CAAC2Y,gBAAgB,CAAEJ,EAAE,CAAC,CAC/C9W,EAAE,CAAC4L,UAAU,CAAC6K,UAAU,CAAC,CACzBzW,EAAE,CAAC+R,eAAe,CAChB,CAAC,CAAE,CAAC,CAAEgF,GAAG,CAAC3T,KAAK,CAAE2T,GAAG,CAAC1T,MAAM,CAC3B,CAAC,CAAE,CAAC,CAAE0T,GAAG,CAAC3T,KAAK,CAAE2T,GAAG,CAAC1T,MAAM,CAC3B2T,IAAI,CAAEzY,MAAM,CAACqG,OAAO,CAExB,CAEA,QAAS+G,oBAAmB,CAACnK,IAAyB,CAAG,CAAC,CAAC,CAAuB,CAChF,KAAM2V,UAAS,CAAG3V,IAAI,CAAC2V,SAAS,EAAI,CAAC,CAAC,CACtC,KAAMpP,aAAY,CAAGvG,IAAI,CAACuG,YAAY,EAAI,CAAC,CAAC,CAC5C,KAAM,CAAEqP,YAAY,CAAG,CAAC,CAAC,CAAEC,WAAW,CAAG,CAAC,CAAE,CAAC,CAAGtP,YAAY,CAC5D,KAAM,CAAElF,WAAW,CAAG,CAAC,CAAEyU,eAAe,CAAG,KAAM,CAAC,CAAG9V,IAAI,CAAC+V,WAAW,EAAI,CAAC,CAAC,CAC3E,KAAMC,QAAO,CAAGhW,IAAI,CAACgW,OAAO,EAAI,CAAC,CAAC,CAClC,GAAIpG,eAAc,CAAGoG,OAAO,CAACC,SAAS,EAAI9Y,UAAU,CAAC0S,GAAG,CACxD,GAAImE,WAAU,CAAGgC,OAAO,CAAChC,UAAU,EAAI,CAAC,CAAC,CACzC,GAAIkC,WAAU,CAAGF,OAAO,CAAChC,UAAU,EAAI,CAAC,CAAC,CACzC,GAAIgC,OAAO,CAACA,OAAO,EAAIA,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAAE,CACzCpG,cAAc,CAAGoG,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACC,SAAS,EAAIrG,cAAc,CAC/DoE,UAAU,CAAGgC,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAAChC,UAAU,EAAIA,UAAU,CACxDkC,UAAU,CAAGF,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACE,UAAU,EAAIA,UAChD,CAEA,MAAO,CACL7U,WAAW,CACXyU,eAAe,CAEfzC,QAAQ,CAAEsC,SAAS,CAACtC,QAAQ,EAAItW,MAAM,CAACoZ,SAAS,CAChDzC,WAAW,CAAEiC,SAAS,CAACjC,WAAW,EAAI3W,MAAM,CAACqZ,cAAc,CAC3DC,SAAS,CAAEV,SAAS,CAACU,SAAS,EAAItZ,MAAM,CAACuZ,GAAG,CAC5CC,QAAQ,CAAEZ,SAAS,CAACY,QAAQ,EAAIxZ,MAAM,CAACyZ,IAAI,CAE3CzU,KAAK,CAAE,CAAC,CAAC/B,IAAI,CAACuG,YAAY,CAC1BgJ,UAAU,CAAEhJ,YAAY,CAACgJ,UAAU,EAAI,KAAK,CAC5CkH,WAAW,CAAElQ,YAAY,CAAC/E,MAAM,EAAIzE,MAAM,CAAC2Z,iBAAiB,CAC5DC,YAAY,CAAEpQ,YAAY,CAACoQ,YAAY,EAAI5Z,MAAM,CAAC6Z,MAAM,CACxDC,SAAS,CAAEtQ,YAAY,CAACsQ,SAAS,EAAI,CAAC,CACtCC,mBAAmB,CAAEvQ,YAAY,CAACuQ,mBAAmB,EAAI,CAAC,CAE1DC,OAAO,CAAE,CAAC,EAAExQ,YAAY,CAACqP,YAAY,EAAIrP,YAAY,CAACsP,WAAW,CAAC,CAClE1B,mBAAmB,CAAEyB,YAAY,CAAClR,OAAO,EAAI3H,MAAM,CAAC6Z,MAAM,CAC1DI,kBAAkB,CAAEpB,YAAY,CAACqB,MAAM,EAAIla,MAAM,CAACma,IAAI,CACtDC,uBAAuB,CAAEvB,YAAY,CAACwB,WAAW,EAAIra,MAAM,CAACma,IAAI,CAChEG,kBAAkB,CAAEzB,YAAY,CAAC0B,MAAM,EAAIva,MAAM,CAACma,IAAI,CACtD9C,kBAAkB,CAAEyB,WAAW,CAACnR,OAAO,EAAI3H,MAAM,CAAC6Z,MAAM,CACxDW,iBAAiB,CAAE1B,WAAW,CAACoB,MAAM,EAAIla,MAAM,CAACma,IAAI,CACpDM,sBAAsB,CAAE3B,WAAW,CAACuB,WAAW,EAAIra,MAAM,CAACma,IAAI,CAC9DO,iBAAiB,CAAE5B,WAAW,CAACyB,MAAM,EAAIva,MAAM,CAACma,IAAI,CACpD7C,eAAe,CAAE9N,YAAY,CAAC8N,eAAe,EAAIlW,YAAY,CAC7DuR,gBAAgB,CAAEnJ,YAAY,CAACmJ,gBAAgB,EAAIvR,YAAY,CAE/DuZ,KAAK,CAAE,CAAC,CAAC1X,IAAI,CAACgW,OAAO,CACrBpG,cAAc,CACd+H,YAAY,CAAE3D,UAAU,CAAC4D,SAAS,EAAI7a,MAAM,CAAC8a,QAAQ,CACrDC,mBAAmB,CAAE9D,UAAU,CAAC+D,SAAS,EAAIhb,MAAM,CAACib,GAAG,CACvDC,mBAAmB,CAAEjE,UAAU,CAACkE,SAAS,EAAInb,MAAM,CAACob,IAAI,CACxDC,YAAY,CAAElC,UAAU,CAAC0B,SAAS,EAAI7a,MAAM,CAAC8a,QAAQ,CACrDQ,mBAAmB,CAAEnC,UAAU,CAAC6B,SAAS,EAAIhb,MAAM,CAACib,GAAG,CACvDM,mBAAmB,CAAEpC,UAAU,CAACgC,SAAS,EAAInb,MAAM,CAACob,IACtD,CACF,CAEA,QAASxH,mBAAkB,CACzBnS,EAA0B,CAAE+Z,SAA8B,CAAEtZ,KAA0B,CAAE2R,UAAU,CAAG,CAAC,CACtG4H,KAAK,CAAG,KAAK,CACP,CAEN,GAAIC,EAAC,CAAG,KAAK,CAAEC,CAAC,CAAG,CAAC,CAAEC,EAAE,CAAG,CAAC,CAAEC,EAAE,CAAG,CAAC,CAAEC,EAAE,CAAG,CAAC,CAG5CH,CAAC,CAAGzZ,KAAK,CAACoX,SAAS,CACnB,GAAImC,KAAK,EAAKD,SAAS,CAAClC,SAAS,GAAKqC,CAAE,CAAE,CACxCla,EAAE,CAAC6X,SAAS,CAACqC,CAAC,CAChB,CACAA,CAAC,CAAGzZ,KAAK,CAACsX,QAAQ,CAClB,GAAIiC,KAAK,EAAKD,SAAS,CAAChC,QAAQ,GAAKmC,CAAE,CAAE,CACvC,GAAKD,CAAC,CAAIC,CAAC,GAAK3b,MAAM,CAACyZ,IAAK,CAAG,CAC7BhY,EAAE,CAACsa,QAAQ,CAACJ,CAAC,CACf,CACAzJ,QAAQ,CAACzQ,EAAE,CAAEzB,MAAM,CAACgc,SAAS,CAAEN,CAAC,CAClC,CAGAA,CAAC,CAAGxZ,KAAK,CAAC6W,eAAe,CACzB,GAAI0C,KAAK,EAAKD,SAAS,CAACzC,eAAe,GAAK2C,CAAE,CAAE,CAC9CxJ,QAAQ,CAACzQ,EAAE,CAAEzB,MAAM,CAACic,wBAAwB,CAAEP,CAAC,CACjD,CAGAA,CAAC,CAAG,CAAC,CAACxZ,KAAK,CAAC8C,KAAK,CACjB,GAAIyW,KAAK,EAAKD,SAAS,CAACxW,KAAK,GAAK0W,CAAE,CAAE,CACpCxJ,QAAQ,CAACzQ,EAAE,CAAEzB,MAAM,CAACkc,UAAU,CAAER,CAAC,CACnC,CAEA,GAAID,KAAK,EAAIC,CAAC,CAAE,CACdnJ,cAAc,CAAC9Q,EAAE,CAAE+Z,SAAS,CAAChJ,UAAU,CAAEtQ,KAAK,CAACsQ,UAAU,CAAEiJ,KAAK,CAAC,CAEjEE,CAAC,CAAGzZ,KAAK,CAAC0X,YAAY,CACtB,GAAI6B,KAAK,EAAKD,SAAS,CAAC5B,YAAY,GAAK+B,CAAE,CAAE,CAC3Cla,EAAE,CAAC0a,SAAS,CAACR,CAAC,CAChB,CACF,CAEAA,CAAC,CAAGzZ,KAAK,CAAC6X,mBAAmB,CAC7B6B,EAAE,CAAG1Z,KAAK,CAAC4X,SAAS,CACpB,GAAI2B,KAAK,EAAKD,SAAS,CAACzB,mBAAmB,GAAK4B,CAAE,EAAKH,SAAS,CAAC1B,SAAS,GAAK8B,EAAG,CAAE,CAClF1J,QAAQ,CAACzQ,EAAE,CAAEzB,MAAM,CAACoc,mBAAmB,CAAE,EAAE,CAACT,CAAC,EAAI,CAACC,EAAE,CAAC,CAAC,CACtDna,EAAE,CAAC4a,aAAa,CAACV,CAAC,CAAEC,EAAE,CACxB,CAGAF,CAAC,CAAG,CAAC,CAACxZ,KAAK,CAAC8X,OAAO,CACnB,GAAIyB,KAAK,EAAKD,SAAS,CAACxB,OAAO,GAAK0B,CAAE,CAAE,CACtCxJ,QAAQ,CAACzQ,EAAE,CAAEzB,MAAM,CAACsc,YAAY,CAAEZ,CAAC,CACrC,CAEA,GAAID,KAAK,EAAIC,CAAC,CAAE,CACdC,CAAC,CAAGzZ,KAAK,CAACoV,eAAe,CACzBoE,CAAC,CAAGD,KAAK,EAAKD,SAAS,CAAClE,eAAe,GAAKqE,CAAE,CAE9CC,EAAE,CAAG1Z,KAAK,CAACkV,mBAAmB,CAC9B,GAAIsE,CAAC,EAAKF,SAAS,CAACpE,mBAAmB,GAAKwE,EAAG,CAAE,CAC/Cna,EAAE,CAAC8V,mBAAmB,CAACvX,MAAM,CAACwX,KAAK,CAAEoE,EAAE,CAAE/H,UAAU,CAAE8H,CAAC,CACxD,CACAC,EAAE,CAAG1Z,KAAK,CAACmV,kBAAkB,CAC7B,GAAIqE,CAAC,EAAKF,SAAS,CAACnE,kBAAkB,GAAKuE,EAAG,CAAE,CAC9Cna,EAAE,CAAC8V,mBAAmB,CAACvX,MAAM,CAACyX,IAAI,CAAEmE,EAAE,CAAE/H,UAAU,CAAE8H,CAAC,CACvD,CAEAA,CAAC,CAAGzZ,KAAK,CAAC+X,kBAAkB,CAC5B2B,EAAE,CAAG1Z,KAAK,CAACkY,uBAAuB,CAClCyB,EAAE,CAAG3Z,KAAK,CAACoY,kBAAkB,CAC7B,GAAImB,KAAK,EACND,SAAS,CAACvB,kBAAkB,GAAK0B,CAAE,EACnCH,SAAS,CAACpB,uBAAuB,GAAKwB,EAAG,EACzCJ,SAAS,CAAClB,kBAAkB,GAAKuB,EAAG,CACrC,CACApa,EAAE,CAAC8a,iBAAiB,CAACvc,MAAM,CAACwX,KAAK,CAAEmE,CAAC,CAAEC,EAAE,CAAEC,EAAE,CAC9C,CACAF,CAAC,CAAGzZ,KAAK,CAACsY,iBAAiB,CAC3BoB,EAAE,CAAG1Z,KAAK,CAACuY,sBAAsB,CACjCoB,EAAE,CAAG3Z,KAAK,CAACwY,iBAAiB,CAC5B,GAAIe,KAAK,EACND,SAAS,CAAChB,iBAAiB,GAAKmB,CAAE,EAClCH,SAAS,CAACf,sBAAsB,GAAKmB,EAAG,EACxCJ,SAAS,CAACd,iBAAiB,GAAKmB,EAAG,CACpC,CACApa,EAAE,CAAC8a,iBAAiB,CAACvc,MAAM,CAACyX,IAAI,CAAEkE,CAAC,CAAEC,EAAE,CAAEC,EAAE,CAC7C,CAEAnJ,gBAAgB,CAACjR,EAAE,CAAE+Z,SAAS,CAAC7I,gBAAgB,CAAEzQ,KAAK,CAACyQ,gBAAgB,CAAE8I,KAAK,CAChF,CAGAC,CAAC,CAAGxZ,KAAK,CAACyY,KAAK,CACf,GAAIc,KAAK,EAAKD,SAAS,CAACb,KAAK,GAAKe,CAAE,CAAE,CACpCxJ,QAAQ,CAACzQ,EAAE,CAAEzB,MAAM,CAACwc,KAAK,CAAEd,CAAC,CAC9B,CAEA,GAAID,KAAK,EAAIC,CAAC,CAAE,CACdC,CAAC,CAAGzZ,KAAK,CAAC6Y,mBAAmB,CAC7Ba,EAAE,CAAG1Z,KAAK,CAACgZ,mBAAmB,CAC9BW,EAAE,CAAG3Z,KAAK,CAACoZ,mBAAmB,CAC9BQ,EAAE,CAAG5Z,KAAK,CAACqZ,mBAAmB,CAC9B,GAAIE,KAAK,EACND,SAAS,CAACT,mBAAmB,GAAKY,CAAE,EACpCH,SAAS,CAACN,mBAAmB,GAAKU,EAAG,EACrCJ,SAAS,CAACF,mBAAmB,GAAKO,EAAG,EACrCL,SAAS,CAACD,mBAAmB,GAAKO,EAAG,CACtC,CACAra,EAAE,CAACgb,iBAAiB,CAACd,CAAC,CAAEC,EAAE,CAAEC,EAAE,CAAEC,EAAE,CACpC,CAEAH,CAAC,CAAGzZ,KAAK,CAAC0Y,YAAY,CACtBgB,EAAE,CAAG1Z,KAAK,CAACmZ,YAAY,CACvB,GAAII,KAAK,EAAKD,SAAS,CAACZ,YAAY,GAAKe,CAAE,EAAKH,SAAS,CAACH,YAAY,GAAKO,EAAG,CAAE,CAC9Ena,EAAE,CAACib,qBAAqB,CAACf,CAAC,CAAEC,EAAE,CAChC,CAEAhJ,cAAc,CAACnR,EAAE,CAAE+Z,SAAS,CAAC3I,cAAc,CAAE3Q,KAAK,CAAC2Q,cAAc,CAAE4I,KAAK,CAC1E,CACF,CAEA,QAAS7I,eAAc,CAACnR,EAA0B,CAAEkb,QAAoB,CAAElE,IAAgB,CAAEgD,KAAK,CAAG,KAAK,CAAQ,CAC/G,GAAIA,KAAK,EAAIkB,QAAQ,GAAKlE,IAAI,CAAE,CAC9BhX,EAAE,CAACmb,SAAS,CACV,CAAC,EAAEnE,IAAI,CAAGrY,UAAU,CAACyc,GAAG,CAAC,CACzB,CAAC,EAAEpE,IAAI,CAAGrY,UAAU,CAAC0c,KAAK,CAAC,CAC3B,CAAC,EAAErE,IAAI,CAAGrY,UAAU,CAAC2c,IAAI,CAAC,CAC1B,CAAC,EAAEtE,IAAI,CAAGrY,UAAU,CAAC4c,KAAK,CAAC,CAE/B,CACF,CAEA,QAASzK,eAAc,CAAC9Q,EAA0B,CAAEkb,QAAiB,CAAElE,IAAa,CAAEgD,KAAK,CAAG,KAAK,CAAQ,CACzG,GAAIA,KAAK,EAAIkB,QAAQ,GAAKlE,IAAI,CAAE,CAC9BhX,EAAE,CAACwb,SAAS,CAACxE,IAAI,CACnB,CACF,CAEA,QAAS/F,iBAAgB,CAACjR,EAA0B,CAAEkb,QAAc,CAAElE,IAAU,CAAEgD,KAAK,CAAG,KAAK,CAAQ,CACrG,GAAIA,KAAK,EAAIkB,QAAQ,GAAKlE,IAAI,CAAE,CAC9BhX,EAAE,CAACyb,WAAW,CAACzE,IAAI,CACrB,CACF,CAEA,QAASvG,SAAQ,CAACzQ,EAA0B,CAAE0b,IAAY,CAAEC,MAAe,CAAQ,CACjFA,MAAM,CAAG3b,EAAE,CAAC2b,MAAM,CAACD,IAAI,CAAC,CAAG1b,EAAE,CAAC4b,OAAO,CAACF,IAAI,CAC5C,CAEA,QAAStI,cAAa,CAACpT,EAA0B,CAAE0C,MAA8B,CAAEoJ,MAAY,CAAQ,CACrG9L,EAAE,CAACsC,UAAU,CAAC/D,MAAM,CAACwD,YAAY,CAAEW,MAAM,CAACL,GAAG,CAAC,CAC9C,IAAK,GAAIiG,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAG5F,MAAM,CAAC4P,UAAU,CAACpK,MAAM,CAAE,EAAEI,CAAC,CAAE,CACjD,KAAM,CAAEiK,GAAG,CAAEK,IAAK,CAAC,CAAGlQ,MAAM,CAAC4P,UAAU,CAAChK,CAAC,CAAC,CAC1C,KAAMuT,OAAyD,CAAG,CAAC,GAAGtJ,GAAG,CAAC,CAC1EsJ,MAAM,CAAC,CAAC,CAAC,EAAI/P,MAAM,CACnB9L,EAAE,CAAC8b,mBAAmB,CAAC,GAAGD,MAAM,CAAC,CACjC7b,EAAE,CAAC+b,mBAAmB,CAACxJ,GAAG,CAAC,CAAC,CAAC,CAAEK,IAAI,CACrC,CACF,CAEA,QAASoJ,gBAAe,CAAChc,EAA0B,CAAEic,IAAe,CAAEC,KAAW,CAAEC,QAAc,CAAiB,CAChH,MAAO,IAAIC,QAAO,CAAC,CAACC,OAAO,CAAEC,MAAM,GAAK,CACtC,QAASC,KAAI,EAAG,CACd,KAAMC,IAAG,CAAGxc,EAAE,CAACyc,cAAc,CAACR,IAAI,CAAEC,KAAK,CAAE,CAAC,CAAC,CAC7C,GAAIM,GAAG,EAAIje,MAAM,CAACme,WAAW,CAAE,CAC7BJ,MAAM,EACR,CAAC,IAAM,IAAIE,GAAG,EAAIje,MAAM,CAACoe,eAAe,CAAE,CACxCC,UAAU,CAACL,IAAI,CAAEJ,QAAQ,CAC3B,CAAC,IAAM,CACLE,OAAO,EACT,CACF,CACAE,IAAI,EACN,CAAC,CACH,CAEA,QAASrQ,iBAAgB,CAAClM,EAA0B,CAAEkO,MAAY,CAAExL,MAAmB,CAAEoK,SAAe,CAAE5E,MAAY,CAAuB,CAE3I,KAAM+T,KAAI,CAAGjc,EAAE,CAAC6c,SAAS,CAAC7c,EAAE,CAAC8c,0BAA0B,CAAE,CAAC,CAAE,CAC5D9c,EAAE,CAAC+c,KAAK,EAAE,CAEV,MAAOf,gBAAe,CAAChc,EAAE,CAAEic,IAAI,CAAE,CAAC,CAAE,EAAE,CAAC,CACpCe,OAAO,CAAC,IAAMhd,EAAE,CAACid,UAAU,CAAChB,IAAI,CAAC,CAAC,CAClC7P,IAAI,CAAC,IAAM,CACV,KAAMC,KAAI,CAAG,GAAI6Q,WAAU,CAAChV,MAAM,CAAC,CACnClI,EAAE,CAACsC,UAAU,CAAC4L,MAAM,CAAExL,MAAM,CAAC,CAC7B1C,EAAE,CAACkM,gBAAgB,CAACgC,MAAM,CAAEpB,SAAS,CAAET,IAAI,CAAE,CAAC,CAAEnE,MAAM,CAAC,CACvD,MAAOmE,KACT,CAAC,CACL"}