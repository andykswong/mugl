{"version":3,"sources":["../../js/wasm/wasm.ts"],"names":["BindingType","FutureStatus","SamplerBindingType","TextureDimension","TextureSampleType","WebGL","Arena","dataView","decodeStr","toWebGLContextAttributes","contexts","futures","images","imageMap","canvases","canvasMap","canvasContextMap","resources","deviceContextMap","API","getMemory","context","memory","getDeviceMemory","resource","deleteResource","id","get","destroy","delete","set_context_memory","free_context","get_future_status","future","f","status","Pending","Done","create_image","ptr","len","img","Image","crossOrigin","src","add","get_image_by_id","image","document","getElementById","delete_image","get_image_width","width","get_image_height","height","get_canvas_by_id","canvas","canvasId","get_canvas_width","get_canvas_height","webgl_request_device","attrs","features","device","requestWebGL2Device","deviceId","webgl_generate_mipmap","tex","hint","generateMipmap","reset_device","resetDevice","delete_device","is_device_lost","isDeviceLost","get_device_features","getDeviceFeatures","create_buffer","size","usage","ret","createBuffer","delete_buffer","create_texture","depth","mipLevelCount","sampleCount","dimension","format","createTexture","delete_texture","create_sampler","addressModeU","addressModeV","addressModeW","magFilter","minFilter","mipmapFilter","lodMinClamp","lodMaxClamp","compare","maxAnisotropy","createSampler","delete_sampler","create_shader","codePtr","codeLen","createShader","code","delete_shader","create_bind_group_layout","entriesPtr","entriesLen","entries","i","base","ptr0","getUint32","len0","type","getUint8","bufferDynamicOffset","samplerType","Filtering","textureSampleType","Float","textureDimension","D2","textureMultisampled","Buffer","Sampler","Texture","RangeError","push","label","binding","visibility","createBindGroupLayout","delete_bind_group_layout","create_bind_group","layout","buffer","bufferOffset","bufferSize","sampler","texture","getFloat64","createBindGroup","delete_bind_group","create_render_pipeline","vertex","fragment","attributesPtr","attributesLen","buffersPtr","buffersLen","bindGroupsPtr","bindGroupsLen","topology","indexFormat","frontFace","cullMode","alphaToCoverage","hasDepthStencil","depthStencilFormat","depthWrite","depthCompare","stencilFrontCompare","stencilFrontFailOp","stencilFrontDepthFailOp","stencilFrontPassOp","stencilBackCompare","stencilBackFailOp","stencilBackDepthFailOp","stencilBackPassOp","stencilReadMask","stencilWriteMask","depthBias","depthBiasSlopeScale","depthBiasClamp","colorsPtr","colorsLen","colorWriteMask","blendColorOperation","blendColorSrcFactor","blendColorDstFactor","blendAlphaOperation","blendAlphaSrcFactor","blendAlphaDstFactor","attributes","offset","shaderLocation","buffers","start","slice","stride","stepMode","bindGroups","targets","writeMask","blendColor","operation","srcFactor","dstFactor","blendAlpha","createRenderPipeline","primitive","multisample","depthStencil","stencilFront","failOp","depthFailOp","passOp","stencilBack","delete_render_pipeline","create_render_pass","clearDepth","clearStencil","clearColorRed","clearColorGreen","clearColorBlue","clearColorAlpha","isOffscreen","depthStencilTexture","depthStecilMipLevel","depthStecilSlice","desc","clearColor","isNaN","colors","clear","getFloat32","view","mipLevel","createRenderPass","delete_render_pass","read_buffer","outPtr","readBuffer","Uint8Array","write_buffer","dataPtr","writeBuffer","copy_buffer","dst","srcOffset","dstOffset","copyBuffer","write_texture","x","y","z","dataLen","bytesPerRow","rowsPerImage","writeTexture","origin","copy_external_image_to_texture","srcX","srcY","dstX","dstY","dstZ","copyExternalImageToTexture","copy_texture","srcMipLevel","srcZ","dstMipLevel","copyTexture","copy_texture_to_buffer","copyTextureToBuffer","begin_render_pass","pass","beginRenderPass","begin_default_pass","beginDefaultPass","submit_render_pass","submitRenderPass","set_render_pipeline","pipeline","setRenderPipeline","set_index","index","setIndex","set_vertex","slot","setVertex","set_bind_group","bindGroup","offsetsPtr","offsetsLen","setBindGroup","Uint32Array","draw","vertexCount","instanceCount","firstVertex","firstInstance","draw_indexed","indexCount","firstIndex","drawIndexed","set_viewport","minDepth","maxDepth","setViewport","set_scissor_rect","setScissorRect","set_blend_const","red","green","blue","alpha","setBlendConst","set_stencil_ref","ref","setStencilRef"],"mappings":"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","sourcesContent":["import {\n  AddressMode, BindGroup, BindGroupLayout, BindGroupLayoutEntry, BindingType, Buffer, BufferUsage, Canvas, Color,\n  ColorAttachment, ColorTargetState, CompareFunction, CullMode, Device, FilterMode, Float, FrontFace, Future, FutureStatus, GPU,\n  ImageSource, IndexFormat, MipmapHint, PrimitiveTopology, RenderPass, RenderPassDescriptor, RenderPipeline, Resource,\n  Sampler, SamplerBindingType, Shader, ShaderStage, StencilOperation, Texture, TextureDimension, TextureFormat,\n  TextureSampleType, TextureUsage, UInt, VertexAttribute, VertexBufferLayout, WebGL\n} from '../gpu';\nimport { Arena } from '../store';\nimport { dataView, decodeStr, toWebGLContextAttributes } from './deserialize';\n\nexport type ContextId = number;\nexport type FutureId = number;\nexport type ImageSourceId = number;\nexport type CanvasId = number;\nexport type ResourceId = number;\n\nconst contexts: Record<ContextId, { memory: WebAssembly.Memory | null }> = {};\nconst futures = new Arena<Future>();\nconst images = new Arena<ImageSource>();\nconst imageMap: Record<string, ImageSourceId> = {};\nconst canvases = new Arena<Canvas>();\nconst canvasMap: Record<string, CanvasId> = {};\nconst canvasContextMap: Record<CanvasId, ContextId> = {};\nconst resources = new Arena<Resource>();\nconst deviceContextMap: Record<ResourceId, ContextId> = {};\n\nconst API: GPU = WebGL;\n\nfunction getMemory(context: ContextId): WebAssembly.Memory {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return contexts[context].memory!;\n}\n\nfunction getDeviceMemory(resource: ResourceId): WebAssembly.Memory {\n  return getMemory(deviceContextMap[resource]);\n}\n\nfunction deleteResource(id: ResourceId): void {\n  const resource = resources.get(id);\n  if (resource) {\n    resource.destroy();\n    resources.delete(id);\n  }\n}\n\nexport function set_context_memory(context: ContextId, memory: WebAssembly.Memory): void {\n  (contexts[context] = contexts[context] || { memory: null }).memory = memory;\n}\n\nexport function free_context(context: ContextId): void {\n  delete contexts[context];\n}\n\nexport function get_future_status(future: FutureId): FutureStatus {\n  const f = futures.get(future);\n  if (f) {\n    if (f.status !== FutureStatus.Pending) {\n      futures.delete(future);\n    }\n    return f.status;\n  }\n  return FutureStatus.Done;\n}\n\nexport function create_image(context: ContextId, ptr: UInt, len: UInt): ImageSourceId {\n  const img = new Image();\n  img.crossOrigin = 'anonymous';\n  img.src = decodeStr(getMemory(context), ptr, len);\n  return images.add(img);\n}\n\nexport function get_image_by_id(context: ContextId, ptr: UInt, len: UInt): ImageSourceId {\n  const id = decodeStr(getMemory(context), ptr, len);\n  if (imageMap[id]) {\n    return imageMap[id];\n  }\n  const image = document.getElementById(id) as ImageSource;\n  if (!image) {\n    return 0 as ImageSourceId;\n  }\n  return (imageMap[id] = images.add(image));\n}\n\nexport function delete_image(img: ImageSourceId): void {\n  images.delete(img);\n}\n\nexport function get_image_width(img: ImageSourceId): UInt {\n  return images.get(img)?.width || 0;\n}\n\nexport function get_image_height(img: ImageSourceId): UInt {\n  return images.get(img)?.height || 0;\n}\n\nexport function get_canvas_by_id(context: ContextId, ptr: UInt, len: UInt): CanvasId {\n  const id = decodeStr(getMemory(context), ptr, len);\n  if (canvasMap[id]) {\n    return canvasMap[id];\n  }\n  const canvas = document.getElementById(id) as Canvas;\n  if (!canvas) {\n    return 0 as CanvasId;\n  }\n  const canvasId = canvasMap[id] = canvases.add(canvas);\n  canvasContextMap[canvasId] = context;\n  return canvasId;\n}\n\nexport function get_canvas_width(canvas: CanvasId): UInt {\n  return canvases.get(canvas)?.width || 0;\n}\n\nexport function get_canvas_height(canvas: CanvasId): UInt {\n  return canvases.get(canvas)?.height || 0;\n}\n\nexport function webgl_request_device(canvasId: CanvasId, attrs: UInt, features: UInt): ResourceId {\n  const canvas = canvases.get(canvasId);\n  if (canvas) {\n    const device = WebGL.requestWebGL2Device(canvas, toWebGLContextAttributes(attrs), features);\n    if (device) {\n      const deviceId = resources.add(device);\n      deviceContextMap[deviceId] = canvasContextMap[canvasId];\n      return deviceId;\n    }\n  }\n  return 0 as ResourceId;\n}\n\nexport function webgl_generate_mipmap(device: ResourceId, tex: ResourceId, hint: MipmapHint): void {\n  WebGL.generateMipmap(resources.get(device) as Device, resources.get(tex) as Texture, hint);\n}\n\nexport function reset_device(device: ResourceId): void {\n  API.resetDevice(resources.get(device) as Device);\n}\n\nexport function delete_device(device: ResourceId): void {\n  deleteResource(device);\n  delete deviceContextMap[device];\n}\n\nexport function is_device_lost(device: ResourceId): boolean {\n  return API.isDeviceLost(resources.get(device) as Device);\n}\n\nexport function get_device_features(device: ResourceId): UInt {\n  return API.getDeviceFeatures(resources.get(device) as Device);\n}\n\nexport function create_buffer(device: ResourceId, size: UInt, usage: BufferUsage): ResourceId {\n  const ret = API.createBuffer(resources.get(device) as Device, {\n    size: size >>> 0,\n    usage: usage >>> 0,\n  });\n  return resources.add(ret);\n}\n\nexport { deleteResource as delete_buffer };\n\nexport function create_texture(\n  device: ResourceId,\n  width: UInt, height: UInt, depth: UInt,\n  mipLevelCount: UInt,\n  sampleCount: UInt,\n  dimension: TextureDimension,\n  format: TextureFormat,\n  usage: TextureUsage\n): ResourceId {\n  const ret = API.createTexture(resources.get(device) as Device, {\n    size: [width >>> 0, height >>> 0, depth >>> 0],\n    mipLevelCount: mipLevelCount >>> 0,\n    sampleCount: sampleCount >>> 0,\n    dimension: dimension >>> 0,\n    format: format >>> 0,\n    usage: usage >>> 0,\n  });\n  return resources.add(ret);\n}\n\nexport { deleteResource as delete_texture };\n\nexport function create_sampler(\n  device: ResourceId,\n  addressModeU: AddressMode, addressModeV: AddressMode, addressModeW: AddressMode,\n  magFilter: FilterMode, minFilter: FilterMode, mipmapFilter: FilterMode,\n  lodMinClamp: Float, lodMaxClamp: Float,\n  compare: CompareFunction,\n  maxAnisotropy: UInt\n): ResourceId {\n  const ret = API.createSampler(resources.get(device) as Device, {\n    addressModeU: addressModeU >>> 0,\n    addressModeV: addressModeV >>> 0,\n    addressModeW: addressModeW >>> 0,\n    magFilter: magFilter >>> 0,\n    minFilter: minFilter >>> 0,\n    mipmapFilter: mipmapFilter >>> 0,\n    lodMinClamp,\n    lodMaxClamp,\n    compare: compare >>> 0,\n    maxAnisotropy: maxAnisotropy >>> 0,\n  });\n  return resources.add(ret);\n}\n\nexport { deleteResource as delete_sampler };\n\nexport function create_shader(device: ResourceId, codePtr: UInt, codeLen: UInt, usage: ShaderStage): ResourceId {\n  const ret = API.createShader(resources.get(device) as Device, {\n    code: decodeStr(getDeviceMemory(device), codePtr, codeLen),\n    usage: usage >>> 0,\n  });\n  return resources.add(ret);\n}\n\nexport { deleteResource as delete_shader };\n\nexport function create_bind_group_layout(device: ResourceId, entriesPtr: UInt, entriesLen: UInt): ResourceId {\n  const memory = getDeviceMemory(device);\n  const entries: BindGroupLayoutEntry[] = [];\n  for (let i = 0; i < entriesLen; i++) {\n    const base = entriesPtr + i * 32;\n    const ptr0 = dataView(memory).getUint32(base + 0, true);\n    const len0 = dataView(memory).getUint32(base + 4, true);\n    const type = dataView(memory).getUint8(base + 16);\n    let bufferDynamicOffset = false;\n    let samplerType = SamplerBindingType.Filtering;\n    let textureSampleType = TextureSampleType.Float;\n    let textureDimension = TextureDimension.D2;\n    let textureMultisampled = false;\n\n    switch (type) {\n      case BindingType.Buffer:\n        bufferDynamicOffset = !!dataView(memory).getUint8(base + 20);\n        break;\n      case BindingType.Sampler:\n        samplerType = dataView(memory).getUint32(base + 20, true) >>> 0;\n        break;\n      case BindingType.Texture:\n        textureSampleType = dataView(memory).getUint32(base + 20, true) >>> 0;\n        textureDimension = dataView(memory).getUint32(base + 24, true) >>> 0;\n        textureMultisampled = !!dataView(memory).getUint8(base + 28);\n        break;\n      default:\n        throw new RangeError('invalid variant discriminant for BindingType');\n    }\n    entries.push({\n      label: decodeStr(memory, ptr0, len0),\n      binding: dataView(memory).getUint32(base + 8, true) >>> 0,\n      visibility: dataView(memory).getUint32(base + 12, true) >>> 0,\n      type,\n      bufferDynamicOffset,\n      samplerType,\n      textureSampleType,\n      textureDimension,\n      textureMultisampled,\n    });\n  }\n  const ret = API.createBindGroupLayout(resources.get(device) as Device, { entries });\n  return resources.add(ret);\n}\n\nexport { deleteResource as delete_bind_group_layout };\n\nexport function create_bind_group(device: ResourceId, layout: ResourceId, entriesPtr: UInt, entriesLen: UInt): ResourceId {\n  const memory = getDeviceMemory(device);\n  const entries = [];\n  for (let i = 0; i < entriesLen; i++) {\n    const base = entriesPtr + i * 24;\n    const type = dataView(memory).getUint8(base + 4);\n    let buffer: Buffer | null = null;\n    let bufferOffset = 0;\n    let bufferSize = 0;\n    let sampler: Sampler | null = null;\n    let texture: Texture | null = null;\n\n    switch (type) {\n      case BindingType.Buffer:\n        buffer = resources.get(dataView(memory).getFloat64(base + 8, true) as ResourceId) as Buffer;\n        bufferOffset = dataView(memory).getUint32(base + 16, true);\n        bufferSize = dataView(memory).getUint32(base + 20, true);\n        break;\n      case BindingType.Sampler:\n        sampler = resources.get(dataView(memory).getFloat64(base + 8, true) as ResourceId) as Sampler;\n        break;\n      case BindingType.Texture:\n        texture = resources.get(dataView(memory).getFloat64(base + 8, true) as ResourceId) as Texture;\n        break;\n      default:\n        throw new RangeError('invalid variant discriminant for BindingResource');\n    }\n    entries.push({\n      binding: dataView(memory).getUint32(base + 0, true),\n      buffer,\n      bufferOffset,\n      bufferSize,\n      sampler,\n      texture\n    });\n  }\n  const ret = API.createBindGroup(resources.get(device) as Device, {\n    layout: resources.get(layout) as BindGroupLayout,\n    entries,\n  });\n  return resources.add(ret);\n}\n\nexport { deleteResource as delete_bind_group };\n\nexport function create_render_pipeline(\n  device: ResourceId,\n  vertex: ResourceId, fragment: ResourceId,\n  attributesPtr: UInt, attributesLen: UInt,\n  buffersPtr: UInt, buffersLen: UInt,\n  bindGroupsPtr: UInt, bindGroupsLen: UInt,\n  topology: PrimitiveTopology, indexFormat: IndexFormat, frontFace: FrontFace, cullMode: CullMode,\n  sampleCount: UInt, alphaToCoverage: UInt,\n  hasDepthStencil: UInt, depthStencilFormat: TextureFormat, depthWrite: UInt, depthCompare: CompareFunction,\n  stencilFrontCompare: CompareFunction, stencilFrontFailOp: StencilOperation, stencilFrontDepthFailOp: StencilOperation, stencilFrontPassOp: StencilOperation,\n  stencilBackCompare: CompareFunction, stencilBackFailOp: StencilOperation, stencilBackDepthFailOp: StencilOperation, stencilBackPassOp: StencilOperation,\n  stencilReadMask: UInt, stencilWriteMask: UInt, depthBias: Float, depthBiasSlopeScale: Float, depthBiasClamp: Float,\n  colorsPtr: UInt, colorsLen: UInt,\n  colorWriteMask: UInt, blendColorOperation: UInt, blendColorSrcFactor: UInt, blendColorDstFactor: UInt, blendAlphaOperation: UInt, blendAlphaSrcFactor: UInt, blendAlphaDstFactor: UInt\n): ResourceId {\n  const memory = getDeviceMemory(device);\n  const attributes: VertexAttribute[] = [];\n  for (let i = 0; i < attributesLen; i++) {\n    const base = attributesPtr + i * 12;\n    attributes.push({\n      format: dataView(memory).getUint32(base + 0, true),\n      offset: dataView(memory).getUint32(base + 4, true),\n      shaderLocation: dataView(memory).getUint32(base + 8, true),\n    });\n  }\n\n  const buffers: VertexBufferLayout[] = [];\n  for (let i = 0; i < buffersLen; i++) {\n    const base = buffersPtr + i * 16;\n    const start = dataView(memory).getUint32(base + 0, true);\n    const len = dataView(memory).getUint32(base + 4, true);\n    buffers.push({\n      attributes: attributes.slice(start, start + len),\n      stride: dataView(memory).getUint32(base + 8, true),\n      stepMode: dataView(memory).getUint32(base + 12, true),\n    });\n  }\n\n  const bindGroups: BindGroupLayout[] = [];\n  for (let i = 0; i < bindGroupsLen; i++) {\n    const base = bindGroupsPtr + i * 8;\n    bindGroups.push(resources.get(dataView(memory).getFloat64(base + 0, true) as ResourceId) as BindGroupLayout);\n  }\n\n  const targets: ColorTargetState[] = [];\n  for (let i = 0; i < colorsLen; i++) {\n    const base = colorsPtr + i * 32;\n    targets.push({\n      format: dataView(memory).getUint32(base + 0, true) >>> 0,\n      writeMask: dataView(memory).getUint32(base + 4, true) >>> 0,\n      blendColor: {\n        operation: dataView(memory).getUint32(base + 8, true) >>> 0,\n        srcFactor: dataView(memory).getUint32(base + 12, true) >>> 0,\n        dstFactor: dataView(memory).getUint32(base + 16, true) >>> 0,\n      },\n      blendAlpha: {\n        operation: dataView(memory).getUint32(base + 20, true) >>> 0,\n        srcFactor: dataView(memory).getUint32(base + 24, true) >>> 0,\n        dstFactor: dataView(memory).getUint32(base + 28, true) >>> 0,\n      }\n\n    });\n  }\n\n  const ret = API.createRenderPipeline(resources.get(device) as Device, {\n    vertex: resources.get(vertex) as Shader,\n    fragment: resources.get(fragment) as Shader,\n    buffers,\n    bindGroups,\n    primitive: {\n      topology: topology >>> 0,\n      indexFormat: indexFormat >>> 0,\n      frontFace: frontFace >>> 0,\n      cullMode: cullMode >>> 0,\n    },\n    multisample: {\n      sampleCount: sampleCount >>> 0,\n      alphaToCoverage: !!alphaToCoverage,\n    },\n    depthStencil: hasDepthStencil ? {\n      format: depthStencilFormat >>> 0,\n      depthWrite: !!depthWrite,\n      depthCompare: depthCompare >>> 0,\n      stencilFront: {\n        compare: stencilFrontCompare >>> 0,\n        failOp: stencilFrontFailOp >>> 0,\n        depthFailOp: stencilFrontDepthFailOp >>> 0,\n        passOp: stencilFrontPassOp >>> 0,\n      },\n      stencilBack: {\n        compare: stencilBackCompare >>> 0,\n        failOp: stencilBackFailOp >>> 0,\n        depthFailOp: stencilBackDepthFailOp >>> 0,\n        passOp: stencilBackPassOp >>> 0,\n      },\n      stencilReadMask: stencilReadMask >>> 0,\n      stencilWriteMask: stencilWriteMask >>> 0,\n      depthBias,\n      depthBiasSlopeScale,\n      depthBiasClamp,\n    } : null,\n    targets: {\n      writeMask: colorWriteMask >>> 0,\n      blendColor: {\n        operation: blendColorOperation >>> 0,\n        srcFactor: blendColorSrcFactor >>> 0,\n        dstFactor: blendColorDstFactor >>> 0,\n      },\n      blendAlpha: {\n        operation: blendAlphaOperation >>> 0,\n        srcFactor: blendAlphaSrcFactor >>> 0,\n        dstFactor: blendAlphaDstFactor >>> 0,\n      },\n      targets,\n    }\n\n  });\n\n  return resources.add(ret);\n}\n\nexport { deleteResource as delete_render_pipeline };\n\nexport function create_render_pass(\n  device: ResourceId,\n  clearDepth: Float, clearStencil: Float,\n  clearColorRed: Float, clearColorGreen: Float, clearColorBlue: Float, clearColorAlpha: Float,\n  isOffscreen: UInt,\n  depthStencilTexture: ResourceId, depthStecilMipLevel: UInt, depthStecilSlice: UInt,\n  colorsPtr: UInt, colorsLen: UInt\n): ResourceId {\n  const memory = getDeviceMemory(device);\n  let desc: RenderPassDescriptor;\n  switch (isOffscreen) {\n    case 0:  // Default pass\n      desc = {\n        clearDepth,\n        clearStencil,\n        clearColor: isNaN(clearColorRed) ? null : [clearColorRed, clearColorGreen, clearColorBlue, clearColorAlpha],\n      };\n      break;\n    case 1: { // Offscreen pass\n      const colors: ColorAttachment[] = [];\n      for (let i = 0; i < colorsLen; i++) {\n        const base = colorsPtr + i * 32;\n        const clear: Color = [\n          dataView(memory).getFloat32(base + 16, true),\n          dataView(memory).getFloat32(base + 20, true),\n          dataView(memory).getFloat32(base + 24, true),\n          dataView(memory).getFloat32(base + 28, true)\n        ];\n        colors.push({\n          view: {\n            texture: resources.get(dataView(memory).getFloat64(base + 0, true) as ResourceId) as Texture,\n            mipLevel: dataView(memory).getUint32(base + 8, true),\n            slice: dataView(memory).getUint32(base + 12, true),\n          },\n          clear: isNaN(clear[0]) ? null : clear,\n        });\n      }\n      desc = {\n        clearDepth,\n        clearStencil,\n        colors,\n        depthStencil: {\n          texture: resources.get(depthStencilTexture) as Texture,\n          mipLevel: depthStecilMipLevel >>> 0,\n          slice: depthStecilSlice >>> 0,\n        }\n\n      };\n      break;\n    }\n    default:\n      throw new RangeError('invalid variant discriminant for RenderPassDescriptor');\n  }\n  const ret = API.createRenderPass(resources.get(device) as Device, desc);\n  return resources.add(ret);\n}\n\nexport { deleteResource as delete_render_pass };\n\nexport function read_buffer(device: ResourceId, buffer: ResourceId, offset: UInt, outPtr: UInt, size: UInt): FutureId {\n  const ret = API.readBuffer(\n    resources.get(device) as Device,\n    resources.get(buffer) as Buffer,\n    new Uint8Array(getDeviceMemory(device).buffer.slice(outPtr, outPtr + size * 1),\n      offset >>> 0)\n  );\n  return futures.add(ret);\n}\n\nexport function write_buffer(device: ResourceId, buffer: ResourceId, dataPtr: UInt, size: UInt, offset: UInt): void {\n  API.writeBuffer(resources.get(device) as Device, resources.get(buffer) as Buffer, new Uint8Array(getDeviceMemory(device).buffer.slice(dataPtr, dataPtr + size * 1)), offset >>> 0);\n}\n\nexport function copy_buffer(device: ResourceId, src: ResourceId, dst: ResourceId, size: UInt, srcOffset: UInt, dstOffset: UInt): void {\n  API.copyBuffer(resources.get(device) as Device, resources.get(src) as Buffer, resources.get(dst) as Buffer, size >>> 0, srcOffset >>> 0, dstOffset >>> 0);\n}\n\nexport function write_texture(\n  device: ResourceId,\n  texture: ResourceId, mipLevel: UInt, x: UInt, y: UInt, z: UInt,\n  dataPtr: UInt, dataLen: UInt,\n  offset: UInt, bytesPerRow: UInt, rowsPerImage: UInt,\n  width: UInt, height: UInt, depth: UInt\n) {\n  API.writeTexture(resources.get(device) as Device, {\n    texture: resources.get(texture) as Texture,\n    mipLevel: mipLevel >>> 0,\n    origin: [x >>> 0, y >>> 0, z >>> 0],\n  },\n    new Uint8Array(getDeviceMemory(device).buffer.slice(dataPtr, dataPtr + dataLen * 1)), {\n    offset: offset >>> 0,\n    bytesPerRow: bytesPerRow >>> 0,\n    rowsPerImage: rowsPerImage >>> 0,\n  },\n    [width >>> 0, height >>> 0, depth >>> 0]);\n}\n\nexport function copy_external_image_to_texture(\n  device: ResourceId,\n  src: ImageSourceId, srcX: UInt, srcY: UInt,\n  dst: ResourceId, mipLevel: UInt, dstX: UInt, dstY: UInt, dstZ: UInt,\n  width: UInt, height: UInt\n): void {\n  API.copyExternalImageToTexture(resources.get(device) as Device,\n    {\n      src: images.get(src) as TexImageSource,\n      origin: [srcX >>> 0, srcY >>> 0],\n    },\n    {\n      texture: resources.get(dst) as Texture,\n      mipLevel: mipLevel >>> 0,\n      origin: [dstX >>> 0, dstY >>> 0, dstZ >>> 0],\n    },\n    [width >>> 0, height >>> 0]);\n}\n\nexport function copy_texture(\n  device: ResourceId,\n  src: ResourceId, srcMipLevel: UInt, srcX: UInt, srcY: UInt, srcZ: UInt,\n  dst: ResourceId, dstMipLevel: UInt, dstX: UInt, dstY: UInt, dstZ: UInt,\n  width: UInt, height: UInt, depth: UInt\n) {\n  API.copyTexture(resources.get(device) as Device,\n    {\n      texture: resources.get(src) as Texture,\n      mipLevel: srcMipLevel >>> 0,\n      origin: [srcX >>> 0, srcY >>> 0, srcZ >>> 0],\n    },\n    {\n      texture: resources.get(dst) as Texture,\n      mipLevel: dstMipLevel >>> 0,\n      origin: [dstX >>> 0, dstY >>> 0, dstZ >>> 0],\n    },\n    [width >>> 0, height >>> 0, depth >>> 0]);\n}\n\nexport function copy_texture_to_buffer(\n  device: ResourceId,\n  src: ResourceId, srcMipLevel: UInt, srcX: UInt, srcY: UInt, srcZ: UInt,\n  dst: ResourceId,\n  offset: UInt, bytesPerRow: UInt, rowsPerImage: UInt,\n  width: UInt, height: UInt, depth: UInt\n): void {\n  API.copyTextureToBuffer(resources.get(device) as Device,\n    {\n      texture: resources.get(src) as Texture,\n      mipLevel: srcMipLevel >>> 0,\n      origin: [srcX >>> 0, srcY >>> 0, srcZ >>> 0],\n    },\n    resources.get(dst) as Buffer,\n    {\n      offset: offset >>> 0,\n      bytesPerRow: bytesPerRow >>> 0,\n      rowsPerImage: rowsPerImage >>> 0,\n    },\n    [width >>> 0, height >>> 0, depth >>> 0]);\n}\n\n\nexport function begin_render_pass(device: ResourceId, pass: ResourceId): void {\n  API.beginRenderPass(resources.get(device) as Device, resources.get(pass) as RenderPass);\n}\n\nexport function begin_default_pass(\n  device: ResourceId,\n  clearDepth: Float, clearStencil: Float,\n  clearColorRed: Float, clearColorGreen: Float, clearColorBlue: Float, clearColorAlpha: Float,\n): void {\n  API.beginDefaultPass(resources.get(device) as Device, {\n    clearColor: isNaN(clearColorRed) ? null : [clearColorRed, clearColorGreen, clearColorBlue, clearColorAlpha],\n    clearDepth,\n    clearStencil,\n  });\n}\n\nexport function submit_render_pass(device: ResourceId): void {\n  API.submitRenderPass(resources.get(device) as Device);\n}\n\nexport function set_render_pipeline(device: ResourceId, pipeline: ResourceId): void {\n  API.setRenderPipeline(resources.get(device) as Device, resources.get(pipeline) as RenderPipeline);\n}\n\nexport function set_index(device: ResourceId, index: ResourceId): void {\n  API.setIndex(resources.get(device) as Device, resources.get(index) as Buffer);\n}\n\nexport function set_vertex(device: ResourceId, slot: UInt, vertex: ResourceId, offset: UInt): void {\n  API.setVertex(resources.get(device) as Device, slot >>> 0, resources.get(vertex) as Buffer, offset >>> 0);\n}\n\nexport function set_bind_group(device: ResourceId, slot: UInt, bindGroup: ResourceId, offsetsPtr: UInt, offsetsLen: UInt): void {\n  API.setBindGroup(\n    resources.get(device) as Device, slot >>> 0,\n    resources.get(bindGroup) as BindGroup,\n    new Uint32Array(getDeviceMemory(device).buffer.slice(offsetsPtr, offsetsPtr + offsetsLen * 4)) as unknown as UInt[]\n  );\n}\n\nexport function draw(device: ResourceId, vertexCount: UInt, instanceCount: UInt, firstVertex: UInt, firstInstance: UInt): void {\n  API.draw(resources.get(device) as Device, vertexCount >>> 0, instanceCount >>> 0, firstVertex >>> 0, firstInstance >>> 0);\n}\n\nexport function draw_indexed(device: ResourceId, indexCount: UInt, instanceCount: UInt, firstIndex: UInt, firstInstance: UInt): void {\n  API.drawIndexed(resources.get(device) as Device, indexCount >>> 0, instanceCount >>> 0, firstIndex >>> 0, firstInstance >>> 0);\n}\n\nexport function set_viewport(device: ResourceId, x: UInt, y: UInt, width: UInt, height: UInt, minDepth: UInt, maxDepth: UInt): void {\n  API.setViewport(resources.get(device) as Device, x >>> 0, y >>> 0, width >>> 0, height >>> 0, minDepth >>> 0, maxDepth >>> 0);\n}\n\nexport function set_scissor_rect(device: ResourceId, x: UInt, y: UInt, width: UInt, height: UInt): void {\n  API.setScissorRect(resources.get(device) as Device, x >>> 0, y >>> 0, width >>> 0, height >>> 0);\n}\n\nexport function set_blend_const(device: ResourceId, red: Float, green: Float, blue: Float, alpha: Float): void {\n  API.setBlendConst(resources.get(device) as Device, [red, green, blue, alpha]);\n}\n\nexport function set_stencil_ref(device: ResourceId, ref: UInt): void {\n  API.setStencilRef(resources.get(device) as Device, ref >>> 0);\n}\n"],"file":"wasm.js"}