{"version":3,"sources":["../../js/wasm/wasm.ts"],"names":["BindingType","SamplerBindingType","TextureDimension","TextureSampleType","WebGL","IdArena","dataView","decodeStr","toWebGLContextAttributes","API","WebAssemblyGL","futures","images","imageMap","canvases","canvasMap","resources","deleteResource","id","resource","get","destroy","delete","self","memory","future","f","done","ptr","len","img","Image","crossOrigin","src","add","image","document","getElementById","width","height","canvas","canvasId","attrs","features","device","requestWebGL2Device","tex","hint","generateMipmap","resetDevice","isDeviceLost","getDeviceFeatures","size","usage","ret","createBuffer","depth","mipLevelCount","sampleCount","dimension","format","createTexture","addressModeU","addressModeV","addressModeW","magFilter","minFilter","mipmapFilter","lodMinClamp","lodMaxClamp","compare","maxAnisotropy","createSampler","codePtr","codeLen","createShader","code","entriesPtr","entriesLen","entries","i","base","ptr0","getUint32","len0","type","getUint8","bufferDynamicOffset","samplerType","Filtering","textureSampleType","Float","textureDimension","D2","textureMultisampled","Buffer","Sampler","Texture","RangeError","push","label","binding","visibility","createBindGroupLayout","layout","buffer","bufferOffset","bufferSize","sampler","texture","getFloat64","createBindGroup","vertex","fragment","attributesPtr","attributesLen","buffersPtr","buffersLen","bindGroupsPtr","bindGroupsLen","topology","indexFormat","frontFace","cullMode","alphaToCoverage","hasDepthStencil","depthStencilFormat","depthWrite","depthCompare","stencilFrontCompare","stencilFrontFailOp","stencilFrontDepthFailOp","stencilFrontPassOp","stencilBackCompare","stencilBackFailOp","stencilBackDepthFailOp","stencilBackPassOp","stencilReadMask","stencilWriteMask","depthBias","depthBiasSlopeScale","depthBiasClamp","colorsPtr","colorsLen","colorWriteMask","blendColorOperation","blendColorSrcFactor","blendColorDstFactor","blendAlphaOperation","blendAlphaSrcFactor","blendAlphaDstFactor","attributes","offset","shaderLocation","buffers","start","slice","stride","stepMode","bindGroups","targets","writeMask","blendColor","operation","srcFactor","dstFactor","blendAlpha","createRenderPipeline","primitive","multisample","depthStencil","stencilFront","failOp","depthFailOp","passOp","stencilBack","clearDepth","clearStencil","clearColorRed","clearColorGreen","clearColorBlue","clearColorAlpha","isOffscreen","depthStencilTexture","depthStecilMipLevel","depthStecilSlice","desc","clearColor","isNaN","colors","clear","getFloat32","view","mipLevel","createRenderPass","outPtr","readBuffer","Uint8Array","dataPtr","writeBuffer","dst","srcOffset","dstOffset","copyBuffer","x","y","z","dataLen","bytesPerRow","rowsPerImage","writeTexture","origin","srcX","srcY","dstX","dstY","dstZ","copyExternalImageToTexture","srcMipLevel","srcZ","dstMipLevel","copyTexture","copyTextureToBuffer","pass","beginRenderPass","beginDefaultPass","submitRenderPass","pipeline","setRenderPipeline","index","setIndex","slot","setVertex","bindGroup","offsetsPtr","offsetsLen","setBindGroup","Uint32Array","vertexCount","instanceCount","firstVertex","firstInstance","draw","indexCount","firstIndex","drawIndexed","minDepth","maxDepth","setViewport","setScissorRect","red","green","blue","alpha","setBlendConst","ref","setStencilRef"],"mappings":"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","sourcesContent":["import {\n  AddressMode, BindGroup, BindGroupLayout, BindGroupLayoutEntry, BindingType, Buffer, BufferUsage, Canvas, Color,\n  ColorAttachment, ColorTargetState, CompareFunction, CullMode, Device, FilterMode, Float, FrontFace, Future, GPU,\n  ImageSource, IndexFormat, MipmapHint, PrimitiveTopology, RenderPass, RenderPassDescriptor, RenderPipeline, Resource,\n  Sampler, SamplerBindingType, Shader, ShaderStage, StencilOperation, Texture, TextureDimension, TextureFormat,\n  TextureSampleType, TextureUsage, UInt, VertexAttribute, VertexBufferLayout, WebGL\n} from '../gpu';\nimport { Id, IdArena } from './id';\nimport { dataView, decodeStr, toWebGLContextAttributes } from './deserialize';\n\nexport type FutureId = Id<'Future'>;\nexport type ImageSourceId = Id<'Image'>;\nexport type CanvasId = Id<'Canvas'>;\nexport type ResourceId = Id<'GPUResource'>;\n\nconst API: GPU = WebGL;\n\n/**\n * mugl WebGL binding for WebAssembly.\n */\nexport function WebAssemblyGL(): WebAssembly.ModuleImports {\n  const futures = new IdArena<'Future', Future>();\n  const images = new IdArena<'Image', ImageSource>();\n  const imageMap: Record<string, ImageSourceId> = {};\n  const canvases = new IdArena<'Canvas', Canvas>();\n  const canvasMap: Record<string, CanvasId> = {};\n  const resources = new IdArena<'GPUResource', Resource>();\n\n  function deleteResource(id: ResourceId): void {\n    const resource = resources.get(id);\n    if (resource) {\n      resource.destroy();\n      resources.delete(id);\n    }\n  }\n\n  const self = {\n    memory: null as unknown as WebAssembly.Memory,\n\n    ['is-future-done'](future: FutureId): boolean {\n      const f = futures.get(future);\n      if (f) {\n        if (!f.done) {\n          return false;\n        } else {\n          futures.delete(future);\n        }\n      }\n      return true;\n    },\n\n    ['create-image'](ptr: UInt, len: UInt): ImageSourceId {\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.src = decodeStr(self.memory, ptr, len);\n      return images.add(img);\n    },\n    ['get-image-by-id'](ptr: UInt, len: UInt): ImageSourceId {\n      const id = decodeStr(self.memory, ptr, len);\n      if (imageMap[id]) {\n        return imageMap[id];\n      }\n      const image = document.getElementById(id) as ImageSource;\n      if (!image) {\n        return 0 as ImageSourceId;\n      }\n      return (imageMap[id] = images.add(image));\n    },\n    ['delete-image'](img: ImageSourceId): void {\n      images.delete(img);\n    },\n    ['get-image-width'](img: ImageSourceId): UInt {\n      return images.get(img)?.width || 0;\n    },\n    ['get-image-height'](img: ImageSourceId): UInt {\n      return images.get(img)?.height || 0;\n    },\n    ['get-canvas-by-id'](ptr: UInt, len: UInt): CanvasId {\n      const id = decodeStr(self.memory, ptr, len);\n      if (canvasMap[id]) {\n        return canvasMap[id];\n      }\n      const canvas = document.getElementById(id) as Canvas;\n      if (!canvas) {\n        return 0 as CanvasId;\n      }\n      return (canvasMap[id] = canvases.add(canvas));\n    },\n    ['get-canvas-width'](canvas: CanvasId): UInt {\n      return canvases.get(canvas)?.width || 0;\n    },\n    ['get-canvas-height'](canvas: CanvasId): UInt {\n      return canvases.get(canvas)?.height || 0;\n    },\n\n    ['webgl-request-device'](canvasId: CanvasId, attrs: UInt, features: UInt): ResourceId {\n      const canvas = canvases.get(canvasId);\n      if (canvas) {\n        const device = WebGL.requestWebGL2Device(canvas, toWebGLContextAttributes(attrs), features);\n        if (device) {\n          return resources.add(device);\n        }\n      }\n      return 0 as ResourceId;\n    },\n    ['webgl-generate-mipmap'](device: ResourceId, tex: ResourceId, hint: MipmapHint): void {\n      WebGL.generateMipmap(resources.get(device) as Device, resources.get(tex) as Texture, hint);\n    },\n\n    ['reset-device'](device: ResourceId): void {\n      API.resetDevice(resources.get(device) as Device);\n    },\n    ['delete-device']: deleteResource,\n    ['is-device-lost'](device: ResourceId): boolean {\n      return API.isDeviceLost(resources.get(device) as Device);\n    },\n    ['get-device-features'](device: ResourceId): UInt {\n      return API.getDeviceFeatures(resources.get(device) as Device);\n    },\n\n    ['create-buffer'](device: ResourceId, size: UInt, usage: BufferUsage): ResourceId {\n      const ret = API.createBuffer(resources.get(device) as Device, {\n        size: size >>> 0,\n        usage: usage >>> 0,\n      });\n      return resources.add(ret);\n    },\n    ['delete-buffer']: deleteResource,\n    ['create-texture'](\n      device: ResourceId,\n      width: UInt, height: UInt, depth: UInt,\n      mipLevelCount: UInt,\n      sampleCount: UInt,\n      dimension: TextureDimension,\n      format: TextureFormat,\n      usage: TextureUsage\n    ): ResourceId {\n      const ret = API.createTexture(resources.get(device) as Device, {\n        size: [width >>> 0, height >>> 0, depth >>> 0],\n        mipLevelCount: mipLevelCount >>> 0,\n        sampleCount: sampleCount >>> 0,\n        dimension: dimension >>> 0,\n        format: format >>> 0,\n        usage: usage >>> 0,\n      });\n      return resources.add(ret);\n    },\n    ['delete-texture']: deleteResource,\n    ['create-sampler'](\n      device: ResourceId,\n      addressModeU: AddressMode, addressModeV: AddressMode, addressModeW: AddressMode,\n      magFilter: FilterMode, minFilter: FilterMode, mipmapFilter: FilterMode,\n      lodMinClamp: Float, lodMaxClamp: Float,\n      compare: CompareFunction,\n      maxAnisotropy: UInt\n    ): ResourceId {\n      const ret = API.createSampler(resources.get(device) as Device, {\n        addressModeU: addressModeU >>> 0,\n        addressModeV: addressModeV >>> 0,\n        addressModeW: addressModeW >>> 0,\n        magFilter: magFilter >>> 0,\n        minFilter: minFilter >>> 0,\n        mipmapFilter: mipmapFilter >>> 0,\n        lodMinClamp,\n        lodMaxClamp,\n        compare: compare >>> 0,\n        maxAnisotropy: maxAnisotropy >>> 0,\n      });\n      return resources.add(ret);\n    },\n    ['delete-sampler']: deleteResource,\n    ['create-shader'](device: ResourceId, codePtr: UInt, codeLen: UInt, usage: ShaderStage): ResourceId {\n      const ret = API.createShader(resources.get(device) as Device, {\n        code: decodeStr(self.memory, codePtr, codeLen),\n        usage: usage >>> 0,\n      });\n      return resources.add(ret);\n    },\n    ['delete-shader']: deleteResource,\n\n    ['create-bind-group-layout'](device: ResourceId, entriesPtr: UInt, entriesLen: UInt): ResourceId {\n      const entries: BindGroupLayoutEntry[] = [];\n      for (let i = 0; i < entriesLen; i++) {\n        const base = entriesPtr + i * 32;\n        const ptr0 = dataView(self.memory).getUint32(base + 0, true);\n        const len0 = dataView(self.memory).getUint32(base + 4, true);\n        const type = dataView(self.memory).getUint8(base + 16);\n        let bufferDynamicOffset = false;\n        let samplerType = SamplerBindingType.Filtering;\n        let textureSampleType = TextureSampleType.Float;\n        let textureDimension = TextureDimension.D2;\n        let textureMultisampled = false;\n\n        switch (type) {\n          case BindingType.Buffer:\n            bufferDynamicOffset = !!dataView(self.memory).getUint8(base + 20);\n            break;\n          case BindingType.Sampler:\n            samplerType = dataView(self.memory).getUint32(base + 20, true) >>> 0;\n            break;\n          case BindingType.Texture:\n            textureSampleType = dataView(self.memory).getUint32(base + 20, true) >>> 0;\n            textureDimension = dataView(self.memory).getUint32(base + 24, true) >>> 0;\n            textureMultisampled = !!dataView(self.memory).getUint8(base + 28);\n            break;\n          default:\n            throw new RangeError('invalid variant discriminant for BindingType');\n        }\n        entries.push({\n          label: decodeStr(self.memory, ptr0, len0),\n          binding: dataView(self.memory).getUint32(base + 8, true) >>> 0,\n          visibility: dataView(self.memory).getUint32(base + 12, true) >>> 0,\n          type,\n          bufferDynamicOffset,\n          samplerType,\n          textureSampleType,\n          textureDimension,\n          textureMultisampled,\n        });\n      }\n      const ret = API.createBindGroupLayout(resources.get(device) as Device, { entries });\n      return resources.add(ret);\n    },\n    ['delete-bind-group-layout']: deleteResource,\n    ['create-bind-group'](device: ResourceId, layout: ResourceId, entriesPtr: UInt, entriesLen: UInt): ResourceId {\n      const entries = [];\n      for (let i = 0; i < entriesLen; i++) {\n        const base = entriesPtr + i * 24;\n        const type = dataView(self.memory).getUint8(base + 4);\n        let buffer: Buffer | null = null;\n        let bufferOffset = 0;\n        let bufferSize = 0;\n        let sampler: Sampler | null = null;\n        let texture: Texture | null = null;\n\n        switch (type) {\n          case BindingType.Buffer:\n            buffer = resources.get(dataView(self.memory).getFloat64(base + 8, true) as ResourceId) as Buffer;\n            bufferOffset = dataView(self.memory).getUint32(base + 16, true);\n            bufferSize = dataView(self.memory).getUint32(base + 20, true);\n            break;\n          case BindingType.Sampler:\n            sampler = resources.get(dataView(self.memory).getFloat64(base + 8, true) as ResourceId) as Sampler;\n            break;\n          case BindingType.Texture:\n            texture = resources.get(dataView(self.memory).getFloat64(base + 8, true) as ResourceId) as Texture;\n            break;\n          default:\n            throw new RangeError('invalid variant discriminant for BindingResource');\n        }\n        entries.push({\n          binding: dataView(self.memory).getUint32(base + 0, true),\n          buffer,\n          bufferOffset,\n          bufferSize,\n          sampler,\n          texture\n        });\n      }\n      const ret = API.createBindGroup(resources.get(device) as Device, {\n        layout: resources.get(layout) as BindGroupLayout,\n        entries,\n      });\n      return resources.add(ret);\n    },\n    ['delete-bind-group']: deleteResource,\n    ['create-render-pipeline'](\n      device: ResourceId,\n      vertex: ResourceId, fragment: ResourceId,\n      attributesPtr: UInt, attributesLen: UInt,\n      buffersPtr: UInt, buffersLen: UInt,\n      bindGroupsPtr: UInt, bindGroupsLen: UInt,\n      topology: PrimitiveTopology, indexFormat: IndexFormat, frontFace: FrontFace, cullMode: CullMode,\n      sampleCount: UInt, alphaToCoverage: UInt,\n      hasDepthStencil: UInt, depthStencilFormat: TextureFormat, depthWrite: UInt, depthCompare: CompareFunction,\n      stencilFrontCompare: CompareFunction, stencilFrontFailOp: StencilOperation, stencilFrontDepthFailOp: StencilOperation, stencilFrontPassOp: StencilOperation,\n      stencilBackCompare: CompareFunction, stencilBackFailOp: StencilOperation, stencilBackDepthFailOp: StencilOperation, stencilBackPassOp: StencilOperation,\n      stencilReadMask: UInt, stencilWriteMask: UInt, depthBias: Float, depthBiasSlopeScale: Float, depthBiasClamp: Float,\n      colorsPtr: UInt, colorsLen: UInt,\n      colorWriteMask: UInt, blendColorOperation: UInt, blendColorSrcFactor: UInt, blendColorDstFactor: UInt, blendAlphaOperation: UInt, blendAlphaSrcFactor: UInt, blendAlphaDstFactor: UInt\n    ): ResourceId {\n      const attributes: VertexAttribute[] = [];\n      for (let i = 0; i < attributesLen; i++) {\n        const base = attributesPtr + i * 12;\n        attributes.push({\n          format: dataView(self.memory).getUint32(base + 0, true),\n          offset: dataView(self.memory).getUint32(base + 4, true),\n          shaderLocation: dataView(self.memory).getUint32(base + 8, true),\n        });\n      }\n\n      const buffers: VertexBufferLayout[] = [];\n      for (let i = 0; i < buffersLen; i++) {\n        const base = buffersPtr + i * 16;\n        const start = dataView(self.memory).getUint32(base + 0, true);\n        const len = dataView(self.memory).getUint32(base + 4, true);\n        buffers.push({\n          attributes: attributes.slice(start, start + len),\n          stride: dataView(self.memory).getUint32(base + 8, true),\n          stepMode: dataView(self.memory).getUint32(base + 12, true),\n        });\n      }\n\n      const bindGroups: BindGroupLayout[] = [];\n      for (let i = 0; i < bindGroupsLen; i++) {\n        const base = bindGroupsPtr + i * 8;\n        bindGroups.push(resources.get(dataView(self.memory).getFloat64(base + 0, true) as ResourceId) as BindGroupLayout);\n      }\n\n      const targets: ColorTargetState[] = [];\n      for (let i = 0; i < colorsLen; i++) {\n        const base = colorsPtr + i * 32;\n        targets.push({\n          format: dataView(self.memory).getUint32(base + 0, true) >>> 0,\n          writeMask: dataView(self.memory).getUint32(base + 4, true) >>> 0,\n          blendColor: {\n            operation: dataView(self.memory).getUint32(base + 8, true) >>> 0,\n            srcFactor: dataView(self.memory).getUint32(base + 12, true) >>> 0,\n            dstFactor: dataView(self.memory).getUint32(base + 16, true) >>> 0,\n          },\n          blendAlpha: {\n            operation: dataView(self.memory).getUint32(base + 20, true) >>> 0,\n            srcFactor: dataView(self.memory).getUint32(base + 24, true) >>> 0,\n            dstFactor: dataView(self.memory).getUint32(base + 28, true) >>> 0,\n          },\n        });\n      }\n\n      const ret = API.createRenderPipeline(resources.get(device) as Device, {\n        vertex: resources.get(vertex) as Shader,\n        fragment: resources.get(fragment) as Shader,\n        buffers,\n        bindGroups,\n        primitive: {\n          topology: topology >>> 0,\n          indexFormat: indexFormat >>> 0,\n          frontFace: frontFace >>> 0,\n          cullMode: cullMode >>> 0,\n        },\n        multisample: {\n          sampleCount: sampleCount >>> 0,\n          alphaToCoverage: !!alphaToCoverage,\n        },\n        depthStencil: hasDepthStencil ? {\n          format: depthStencilFormat >>> 0,\n          depthWrite: !!depthWrite,\n          depthCompare: depthCompare >>> 0,\n          stencilFront: {\n            compare: stencilFrontCompare >>> 0,\n            failOp: stencilFrontFailOp >>> 0,\n            depthFailOp: stencilFrontDepthFailOp >>> 0,\n            passOp: stencilFrontPassOp >>> 0,\n          },\n          stencilBack: {\n            compare: stencilBackCompare >>> 0,\n            failOp: stencilBackFailOp >>> 0,\n            depthFailOp: stencilBackDepthFailOp >>> 0,\n            passOp: stencilBackPassOp >>> 0,\n          },\n          stencilReadMask: stencilReadMask >>> 0,\n          stencilWriteMask: stencilWriteMask >>> 0,\n          depthBias,\n          depthBiasSlopeScale,\n          depthBiasClamp,\n        } : null,\n        targets: {\n          writeMask: colorWriteMask >>> 0,\n          blendColor: {\n            operation: blendColorOperation >>> 0,\n            srcFactor: blendColorSrcFactor >>> 0,\n            dstFactor: blendColorDstFactor >>> 0,\n          },\n          blendAlpha: {\n            operation: blendAlphaOperation >>> 0,\n            srcFactor: blendAlphaSrcFactor >>> 0,\n            dstFactor: blendAlphaDstFactor >>> 0,\n          },\n          targets,\n        },\n      });\n\n      return resources.add(ret);\n    },\n    ['delete-render-pipeline']: deleteResource,\n    ['create-render-pass'](\n      device: ResourceId,\n      clearDepth: Float, clearStencil: Float,\n      clearColorRed: Float, clearColorGreen: Float, clearColorBlue: Float, clearColorAlpha: Float,\n      isOffscreen: UInt,\n      depthStencilTexture: ResourceId, depthStecilMipLevel: UInt, depthStecilSlice: UInt,\n      colorsPtr: UInt, colorsLen: UInt\n    ): ResourceId {\n      let desc: RenderPassDescriptor;\n      switch (isOffscreen) {\n        case 0:  // Default pass\n          desc = {\n            clearDepth,\n            clearStencil,\n            clearColor: isNaN(clearColorRed) ? null : [clearColorRed, clearColorGreen, clearColorBlue, clearColorAlpha],\n          };\n          break;\n        case 1: { // Offscreen pass\n          const colors: ColorAttachment[] = [];\n          for (let i = 0; i < colorsLen; i++) {\n            const base = colorsPtr + i * 32;\n            const clear: Color = [\n              dataView(self.memory).getFloat32(base + 16, true),\n              dataView(self.memory).getFloat32(base + 20, true),\n              dataView(self.memory).getFloat32(base + 24, true),\n              dataView(self.memory).getFloat32(base + 28, true)\n            ];\n            colors.push({\n              view: {\n                texture: resources.get(dataView(self.memory).getFloat64(base + 0, true) as ResourceId) as Texture,\n                mipLevel: dataView(self.memory).getUint32(base + 8, true),\n                slice: dataView(self.memory).getUint32(base + 12, true),\n              },\n              clear: isNaN(clear[0]) ? null : clear,\n            });\n          }\n          desc = {\n            clearDepth,\n            clearStencil,\n            colors,\n            depthStencil: {\n              texture: resources.get(depthStencilTexture) as Texture,\n              mipLevel: depthStecilMipLevel >>> 0,\n              slice: depthStecilSlice >>> 0,\n            },\n          };\n          break;\n        }\n        default:\n          throw new RangeError('invalid variant discriminant for RenderPassDescriptor');\n      }\n      const ret = API.createRenderPass(resources.get(device) as Device, desc);\n      return resources.add(ret);\n    },\n    ['delete-render-pass']: deleteResource,\n    ['read-buffer'](device: ResourceId, buffer: ResourceId, offset: UInt, outPtr: UInt, size: UInt): FutureId {\n      const ret = API.readBuffer(\n        resources.get(device) as Device,\n        resources.get(buffer) as Buffer,\n        new Uint8Array(self.memory.buffer.slice(outPtr, outPtr + size * 1),\n          offset >>> 0)\n      );\n      return futures.add(ret);\n    },\n    ['write-buffer'](device: ResourceId, buffer: ResourceId, dataPtr: UInt, size: UInt, offset: UInt): void {\n      API.writeBuffer(resources.get(device) as Device, resources.get(buffer) as Buffer, new Uint8Array(self.memory.buffer.slice(dataPtr, dataPtr + size * 1)), offset >>> 0);\n    },\n    ['copy-buffer'](device: ResourceId, src: ResourceId, dst: ResourceId, size: UInt, srcOffset: UInt, dstOffset: UInt): void {\n      API.copyBuffer(resources.get(device) as Device, resources.get(src) as Buffer, resources.get(dst) as Buffer, size >>> 0, srcOffset >>> 0, dstOffset >>> 0);\n    },\n    ['write-texture'](\n      device: ResourceId,\n      texture: ResourceId, mipLevel: UInt, x: UInt, y: UInt, z: UInt,\n      dataPtr: UInt, dataLen: UInt,\n      offset: UInt, bytesPerRow: UInt, rowsPerImage: UInt,\n      width: UInt, height: UInt, depth: UInt\n    ) {\n      API.writeTexture(resources.get(device) as Device, {\n        texture: resources.get(texture) as Texture,\n        mipLevel: mipLevel >>> 0,\n        origin: [x >>> 0, y >>> 0, z >>> 0],\n      }, new Uint8Array(self.memory.buffer.slice(dataPtr, dataPtr + dataLen * 1)), {\n        offset: offset >>> 0,\n        bytesPerRow: bytesPerRow >>> 0,\n        rowsPerImage: rowsPerImage >>> 0,\n      }, [width >>> 0, height >>> 0, depth >>> 0]);\n    },\n    ['copy-external-image-to-texture'](\n      device: ResourceId,\n      src: ImageSourceId, srcX: UInt, srcY: UInt,\n      dst: ResourceId, mipLevel: UInt, dstX: UInt, dstY: UInt, dstZ: UInt,\n      width: UInt, height: UInt\n    ): void {\n      API.copyExternalImageToTexture(resources.get(device) as Device, {\n        src: images.get(src) as TexImageSource,\n        origin: [srcX >>> 0, srcY >>> 0],\n      }, {\n        texture: resources.get(dst) as Texture,\n        mipLevel: mipLevel >>> 0,\n        origin: [dstX >>> 0, dstY >>> 0, dstZ >>> 0],\n      }, [width >>> 0, height >>> 0]);\n    },\n    ['copy-texture'](\n      device: ResourceId,\n      src: ResourceId, srcMipLevel: UInt, srcX: UInt, srcY: UInt, srcZ: UInt,\n      dst: ResourceId, dstMipLevel: UInt, dstX: UInt, dstY: UInt, dstZ: UInt,\n      width: UInt, height: UInt, depth: UInt\n    ) {\n      API.copyTexture(resources.get(device) as Device, {\n        texture: resources.get(src) as Texture,\n        mipLevel: srcMipLevel >>> 0,\n        origin: [srcX >>> 0, srcY >>> 0, srcZ >>> 0],\n      }, {\n        texture: resources.get(dst) as Texture,\n        mipLevel: dstMipLevel >>> 0,\n        origin: [dstX >>> 0, dstY >>> 0, dstZ >>> 0],\n      }, [width >>> 0, height >>> 0, depth >>> 0]);\n    },\n    [\"copy-texture-to-buffer\"](\n      device: ResourceId,\n      src: ResourceId, srcMipLevel: UInt, srcX: UInt, srcY: UInt, srcZ: UInt,\n      dst: ResourceId,\n      offset: UInt, bytesPerRow: UInt, rowsPerImage: UInt,\n      width: UInt, height: UInt, depth: UInt\n    ): void {\n      API.copyTextureToBuffer(resources.get(device) as Device, {\n        texture: resources.get(src) as Texture,\n        mipLevel: srcMipLevel >>> 0,\n        origin: [srcX >>> 0, srcY >>> 0, srcZ >>> 0],\n      }, resources.get(dst) as Buffer, {\n        offset: offset >>> 0,\n        bytesPerRow: bytesPerRow >>> 0,\n        rowsPerImage: rowsPerImage >>> 0,\n      }, [width >>> 0, height >>> 0, depth >>> 0]);\n    },\n\n    ['begin-render-pass'](device: ResourceId, pass: ResourceId): void {\n      API.beginRenderPass(resources.get(device) as Device, resources.get(pass) as RenderPass);\n    },\n    ['begin-default-pass'](\n      device: ResourceId,\n      clearDepth: Float, clearStencil: Float,\n      clearColorRed: Float, clearColorGreen: Float, clearColorBlue: Float, clearColorAlpha: Float,\n    ): void {\n      API.beginDefaultPass(resources.get(device) as Device, {\n        clearColor: isNaN(clearColorRed) ? null : [clearColorRed, clearColorGreen, clearColorBlue, clearColorAlpha],\n        clearDepth,\n        clearStencil,\n      });\n    },\n    ['submit-render-pass'](device: ResourceId): void {\n      API.submitRenderPass(resources.get(device) as Device);\n    },\n    ['set-render-pipeline'](device: ResourceId, pipeline: ResourceId): void {\n      API.setRenderPipeline(resources.get(device) as Device, resources.get(pipeline) as RenderPipeline);\n    },\n    ['set-index'](device: ResourceId, index: ResourceId): void {\n      API.setIndex(resources.get(device) as Device, resources.get(index) as Buffer);\n    },\n    ['set-vertex'](device: ResourceId, slot: UInt, vertex: ResourceId, offset: UInt): void {\n      API.setVertex(resources.get(device) as Device, slot >>> 0, resources.get(vertex) as Buffer, offset >>> 0);\n    },\n    ['set-bind-group'](device: ResourceId, slot: UInt, bindGroup: ResourceId, offsetsPtr: UInt, offsetsLen: UInt): void {\n      API.setBindGroup(\n        resources.get(device) as Device, slot >>> 0,\n        resources.get(bindGroup) as BindGroup,\n        new Uint32Array(self.memory.buffer.slice(offsetsPtr, offsetsPtr + offsetsLen * 4)) as unknown as UInt[]\n      );\n    },\n    ['draw'](device: ResourceId, vertexCount: UInt, instanceCount: UInt, firstVertex: UInt, firstInstance: UInt): void {\n      API.draw(resources.get(device) as Device, vertexCount >>> 0, instanceCount >>> 0, firstVertex >>> 0, firstInstance >>> 0);\n    },\n    ['draw-indexed'](device: ResourceId, indexCount: UInt, instanceCount: UInt, firstIndex: UInt, firstInstance: UInt): void {\n      API.drawIndexed(resources.get(device) as Device, indexCount >>> 0, instanceCount >>> 0, firstIndex >>> 0, firstInstance >>> 0);\n    },\n    ['set-viewport'](device: ResourceId, x: UInt, y: UInt, width: UInt, height: UInt, minDepth: UInt, maxDepth: UInt): void {\n      API.setViewport(resources.get(device) as Device, x >>> 0, y >>> 0, width >>> 0, height >>> 0, minDepth >>> 0, maxDepth >>> 0);\n    },\n    ['set-scissor-rect'](device: ResourceId, x: UInt, y: UInt, width: UInt, height: UInt): void {\n      API.setScissorRect(resources.get(device) as Device, x >>> 0, y >>> 0, width >>> 0, height >>> 0);\n    },\n    ['set-blend-const'](device: ResourceId, red: Float, green: Float, blue: Float, alpha: Float): void {\n      API.setBlendConst(resources.get(device) as Device, [red, green, blue, alpha]);\n    },\n    ['set-stencil-ref'](device: ResourceId, ref: UInt): void {\n      API.setStencilRef(resources.get(device) as Device, ref >>> 0);\n    }\n  };\n\n  return self;\n}\n"],"file":"wasm.js"}