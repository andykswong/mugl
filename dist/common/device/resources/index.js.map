{"version":3,"sources":["../../../../src/common/device/resources/index.ts"],"names":["MipmapHint","Resource","Buffer","Texture","RenderPass","Shader","Pipeline"],"mappings":"OACSA,U,mBAUT,MAAO,MAAeC,CAAAA,QAA8B,EAUpD,MAAO,MAAeC,CAAAA,MAAf,QAA8BD,CAAAA,QAA4B,EAYjE,MAAO,MAAeE,CAAAA,OAAf,QAA+BF,CAAAA,QAA6B,EAelE,MAAO,MAAeG,CAAAA,UAAf,QAAkCH,CAAAA,QAAgC,EAU1E,MAAO,MAAeI,CAAAA,MAAf,QAA8BJ,CAAAA,QAA4B,EASjE,MAAO,MAAeK,CAAAA,QAAf,QAAgCL,CAAAA,QAA8B","sourcesContent":["import { BufferProperties, PipelineProperties, RenderPassProperties, TextureData, TextureProperties } from '../descriptor';\r\nimport { MipmapHint, ShaderType } from '../enums';\r\nimport { ReadonlyExtent3D, ReadonlyOrigin3D, Uint } from '../types';\r\nimport {\r\n  Buffer as IBuffer, Pipeline as IPipeline, RenderPass as IRenderPass, Resource as IResource, Shader as IShader,\r\n  Texture as ITexture\r\n} from './resources';\r\n\r\n/**\r\n * A resource that can be destroyed.\r\n */\r\nexport abstract class Resource implements IResource {\r\n  abstract destroy(): void;\r\n}\r\n\r\n/**\r\n * A GPU buffer resource.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindBuffer\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData\r\n * @see https://gpuweb.github.io/gpuweb/#dictdef-gpubufferdescriptor\r\n */\r\nexport abstract class Buffer extends Resource implements IBuffer {\r\n  abstract get props(): BufferProperties;\r\n\r\n  // @ts-ignore: Valid AssemblyScript\r\n  abstract data(data: ArrayBufferView, offset: Uint = 0): Buffer;\r\n}\r\n\r\n/**\r\n * A GPU texture resource.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindTexture\r\n * @see https://gpuweb.github.io/gpuweb/#gputexture\r\n */\r\nexport abstract class Texture extends Resource implements ITexture {\r\n  abstract get props(): TextureProperties;\r\n\r\n  // @ts-ignore: Valid AssemblyScript\r\n  abstract data(data: TextureData, offset: ReadonlyOrigin3D = [0, 0, 0], size: ReadonlyExtent3D = [0, 0, 0], mipLevel: Uint = 0): Texture;\r\n\r\n  // @ts-ignore: Valid AssemblyScript\r\n  abstract mipmap(hint: MipmapHint = MipmapHint.None): Texture;\r\n}\r\n\r\n/**\r\n * A GPU render pass object.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindFramebuffer\r\n * @see https://gpuweb.github.io/gpuweb/#dictdef-gpurenderpassdescriptor\r\n */\r\n export abstract class RenderPass extends Resource implements IRenderPass {\r\n  abstract get props(): RenderPassProperties;\r\n\r\n  abstract resolve(): void;\r\n}\r\n\r\n/**\r\n * A GPU shader object.\r\n * @see https://www.w3.org/TR/webgpu/#shader-module-creation\r\n */\r\nexport abstract class Shader extends Resource implements IShader {\r\n  abstract get type(): ShaderType;\r\n  abstract get source(): string;\r\n}\r\n\r\n/**\r\n * A GPU render pipeline object.\r\n * @see https://gpuweb.github.io/gpuweb/#gpurenderpipeline\r\n */\r\nexport abstract class Pipeline extends Resource implements IPipeline {\r\n  abstract get props(): PipelineProperties;\r\n}\r\n"],"file":"index.js"}