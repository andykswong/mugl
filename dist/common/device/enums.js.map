{"version":3,"sources":["../../../src/common/device/enums.ts"],"names":["GLenum","AddressMode","Clamp","CLAMP_TO_EDGE","Repeat","REPEAT","Mirror","MIRRORED_REPEAT","BlendFactor","Zero","ZERO","One","ONE","SrcColor","SRC_COLOR","OneMinusSrcColor","ONE_MINUS_SRC_COLOR","SrcAlpha","SRC_ALPHA","OneMinusSrcAlpha","ONE_MINUS_SRC_ALPHA","DstColor","DST_COLOR","OneMinusDstColor","ONE_MINUS_DST_COLOR","DstAlpha","DST_ALPHA","OneMinusDstAlpha","ONE_MINUS_DST_ALPHA","SrcAlphaSaturate","SRC_ALPHA_SATURATE","BlendColor","CONSTANT_COLOR","OneMinusBlendColor","ONE_MINUS_CONSTANT_COLOR","BlendOp","Add","FUNC_ADD","Sub","FUNC_SUBTRACT","RevSub","FUNC_REVERSE_SUBTRACT","Min","MIN_EXT","Max","MAX_EXT","BufferType","Vertex","ARRAY_BUFFER","Index","ELEMENT_ARRAY_BUFFER","Uniform","UNIFORM_BUFFER","ColorMask","R","G","B","A","RGB","All","CompareFunc","Never","NEVER","Less","LESS","Equal","EQUAL","LEqual","LEQUAL","Greater","GREATER","NotEqual","NOTEQUAL","GEqual","GEQUAL","Always","ALWAYS","CubeFace","PosX","TEXTURE_CUBE_MAP_POSITIVE_X","NegX","TEXTURE_CUBE_MAP_NEGATIVE_X","PosY","TEXTURE_CUBE_MAP_POSITIVE_Y","NegY","TEXTURE_CUBE_MAP_NEGATIVE_Y","PosZ","TEXTURE_CUBE_MAP_POSITIVE_Z","NegZ","TEXTURE_CUBE_MAP_NEGATIVE_Z","CullMode","None","NONE","Front","FRONT","Back","BACK","FilterMode","Nearest","NEAREST","Linear","LINEAR","FrontFace","CCW","CW","IndexFormat","UInt16","UNSIGNED_SHORT","UInt32","UNSIGNED_INT","MipmapHint","DONT_CARE","Fast","FASTEST","Nice","NICEST","MinFilterMode","NearestMipmapNearest","NEAREST_MIPMAP_NEAREST","NearestMipmapLinear","NEAREST_MIPMAP_LINEAR","LinearMipmapNearest","LINEAR_MIPMAP_NEAREST","LinearMipmapLinear","LINEAR_MIPMAP_LINEAR","PixelFormat","Depth","Stencil","DepthStencil","RGBA8","RGBA32F","RGBA16F","R32F","R16F","RG32F","RG16F","PrimitiveType","Points","POINTS","Lines","LINES","LineStrip","LINE_STRIP","Tri","TRIANGLES","TriStrip","TRIANGLE_STRIP","ShaderType","VERTEX_SHADER","Fragment","FRAGMENT_SHADER","StencilOp","Keep","KEEP","Replace","REPLACE","Incr","INCR","Decr","DECR","Invert","INVERT","IncrWrap","INCR_WRAP","DecrWrap","DECR_WRAP","TexType","Tex2D","TEXTURE_2D","Cube","TEXTURE_CUBE_MAP","Tex3D","TEXTURE_3D","Array","TEXTURE_2D_ARRAY","UniformFormat","Float","FLOAT","Vec2","FLOAT_VEC2","Vec3","FLOAT_VEC3","Vec4","FLOAT_VEC4","Mat2","FLOAT_MAT3","Mat3","Mat4","FLOAT_MAT4","UniformType","Value","Tex","Buffer","Usage","Static","STATIC_DRAW","Dynamic","DYNAMIC_DRAW","Stream","STREAM_DRAW","VertexFormat","Float2","Float3","Float4","Char2","Char2N","UChar2","UChar2N","Char4","Char4N","UChar4","UChar4N","Short2","Short2N","Short4","Short4N","UShort2","UShort2N","UShort4","UShort4N"],"mappings":"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","sourcesContent":["import * as GLenum from '../gl/const';\r\n\r\n/**\r\n * Texture addressing wrap mode (aka UV wrap).\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getTexParameter\r\n * @see https://gpuweb.github.io/gpuweb/#enumdef-gpuaddressmode\r\n */\r\nexport enum AddressMode {\r\n  /** Clamp texture coords to (0.0 .. 1.0) */\r\n  Clamp = GLenum.CLAMP_TO_EDGE,\r\n\r\n  /** Repeat texture coords within (0.0 .. 1.0) */\r\n  Repeat = GLenum.REPEAT,\r\n\r\n  /** Mirror-repeat texture coords (0.0 .. 1.0 .. 0.0) */\r\n  Mirror = GLenum.MIRRORED_REPEAT\r\n}\r\n\r\n/**\r\n * Alpha-blending factors.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendFunc\r\n * @see https://gpuweb.github.io/gpuweb/#enumdef-gpublendfactor\r\n */\r\nexport enum BlendFactor {\r\n  /** blend factor of zero */\r\n  Zero = GLenum.ZERO,\r\n\r\n  /** blend factor of one */\r\n  One = GLenum.ONE,\r\n\r\n  /** blend factor of source color */\r\n  SrcColor = GLenum.SRC_COLOR,\r\n\r\n  /** blend factor of one minus source color */\r\n  OneMinusSrcColor = GLenum.ONE_MINUS_SRC_COLOR,\r\n\r\n  /** blend factor of source alpha */\r\n  SrcAlpha = GLenum.SRC_ALPHA,\r\n\r\n  /** blend factor of one minus source alpha */\r\n  OneMinusSrcAlpha = GLenum.ONE_MINUS_SRC_ALPHA,\r\n\r\n  /** blend factor of destination color */\r\n  DstColor = GLenum.DST_COLOR,\r\n\r\n  /** blend factor of one minus destination alpha */\r\n  OneMinusDstColor = GLenum.ONE_MINUS_DST_COLOR,\r\n\r\n  /** blend factor of destination alpha */\r\n  DstAlpha = GLenum.DST_ALPHA,\r\n\r\n  /** blend factor of one minus destination alpha */\r\n  OneMinusDstAlpha = GLenum.ONE_MINUS_DST_ALPHA,\r\n\r\n  /** blend factor of the minimum of either source alpha or one minus destination alpha */\r\n  SrcAlphaSaturate = GLenum.SRC_ALPHA_SATURATE,\r\n\r\n  /** blend factor of constant color */\r\n  BlendColor = GLenum.CONSTANT_COLOR,\r\n\r\n  /** blend factor of one minus constant color */\r\n  OneMinusBlendColor = GLenum.ONE_MINUS_CONSTANT_COLOR\r\n}\r\n\r\n/**\r\n * Blend operation.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendEquation\r\n * @see https://gpuweb.github.io/gpuweb/#enumdef-gpublendoperation\r\n */\r\nexport enum BlendOp {\r\n  /** Add source and destination pixel values */\r\n  Add = GLenum.FUNC_ADD,\r\n\r\n  /** Subtract destination from source pixel values */\r\n  Sub = GLenum.FUNC_SUBTRACT,\r\n\r\n  /** Subtract source from destination pixel values */\r\n  RevSub = GLenum.FUNC_REVERSE_SUBTRACT,\r\n\r\n  /**\r\n   * The minimum of the source and destination pixel values.\r\n   * For WebGL1, this requires EXT_blend_minmax extension.\r\n   */\r\n  Min = GLenum.MIN_EXT,\r\n\r\n  /**\r\n   * The maximum of the source and destination pixel values.\r\n   * For WebGL1, this requires EXT_blend_minmax extension.\r\n   */\r\n  Max = GLenum.MAX_EXT\r\n}\r\n\r\n/**\r\n * Buffer type (vertex or index buffers).\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindBuffer\r\n * @see https://gpuweb.github.io/gpuweb/#typedefdef-gpubufferusageflags\r\n */\r\nexport enum BufferType {\r\n  /** Vertex buffer */\r\n  Vertex = GLenum.ARRAY_BUFFER,\r\n\r\n  /** Index buffer */\r\n  Index = GLenum.ELEMENT_ARRAY_BUFFER,\r\n\r\n  /** Uniform buffer */\r\n  Uniform = GLenum.UNIFORM_BUFFER\r\n}\r\n\r\n/**\r\n * A color write mask.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/colorMask\r\n * @see https://gpuweb.github.io/gpuweb/#typedefdef-gpucolorwriteflags\r\n */\r\nexport enum ColorMask {\r\n  R = 0b0001,\r\n  G = 0b0010,\r\n  B = 0b0100,\r\n  A = 0b1000,\r\n  RGB = 0b0111,\r\n  All = 0b1111\r\n}\r\n\r\n/**\r\n * Comparision functions for depth and stencil checks.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/depthFunc\r\n * @see https://gpuweb.github.io/gpuweb/#enumdef-gpucomparefunction\r\n */\r\nexport enum CompareFunc {\r\n  /** new value never passes comparion test */\r\n  Never = GLenum.NEVER,\r\n\r\n  /** new value passses if it is less than the existing value */\r\n  Less = GLenum.LESS,\r\n\r\n  /** new value passes if it is equal to existing value */\r\n  Equal = GLenum.EQUAL,\r\n\r\n  /** new value passes if it is less than or equal to existing value */\r\n  LEqual = GLenum.LEQUAL,\r\n\r\n  /** new value passes if it is greater than existing value */\r\n  Greater = GLenum.GREATER,\r\n\r\n  /** new value passes if it is not equal to existing value */\r\n  NotEqual = GLenum.NOTEQUAL,\r\n\r\n  /** new value passes if it is greater than or equal to existing value */\r\n  GEqual = GLenum.GEQUAL,\r\n\r\n  /** new value always passes */\r\n  Always = GLenum.ALWAYS\r\n}\r\n\r\n/**\r\n * Cube map face.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\r\n */\r\nexport enum CubeFace {\r\n  /** Positive X face */\r\n  PosX = GLenum.TEXTURE_CUBE_MAP_POSITIVE_X,\r\n\r\n  /** Negative X face */\r\n  NegX = GLenum.TEXTURE_CUBE_MAP_NEGATIVE_X,\r\n\r\n  /** Positive Y face */\r\n  PosY = GLenum.TEXTURE_CUBE_MAP_POSITIVE_Y,\r\n\r\n  /** Negative Y face */\r\n  NegY = GLenum.TEXTURE_CUBE_MAP_NEGATIVE_Y,\r\n\r\n  /** Positive Z face */\r\n  PosZ = GLenum.TEXTURE_CUBE_MAP_POSITIVE_Z,\r\n\r\n  /** Negative Z face */\r\n  NegZ = GLenum.TEXTURE_CUBE_MAP_NEGATIVE_Z\r\n}\r\n\r\n/**\r\n * Specify the face to cull.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/cullFace\r\n * @see https://gpuweb.github.io/gpuweb/#dom-gpurasterizationstatedescriptor-cullmode\r\n */\r\nexport enum CullMode {\r\n  /** Disable culling */\r\n  None = GLenum.NONE,\r\n\r\n  /** Cull front face */\r\n  Front = GLenum.FRONT,\r\n\r\n  /** Cull back face */\r\n  Back = GLenum.BACK\r\n}\r\n\r\n/**\r\n * Texture sampler filter mode.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getTexParameter\r\n * @see https://gpuweb.github.io/gpuweb/#enumdef-gpufiltermode\r\n */\r\nexport enum FilterMode {\r\n  /** use nearest-filtering (aka point-filtering) */\r\n  Nearest = GLenum.NEAREST,\r\n\r\n  /** use linear filtering */\r\n  Linear = GLenum.LINEAR\r\n}\r\n\r\n/**\r\n * Identify which side is the front face by setting a winding orientation.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/frontFace\r\n * @see https://gpuweb.github.io/gpuweb/#enumdef-gpufrontface\r\n */\r\nexport enum FrontFace {\r\n  /** Counter-clockwise winding. */\r\n  CCW = GLenum.CCW,\r\n\r\n  /** Clockwise winding. */\r\n  CW = GLenum.CW\r\n}\r\n\r\n/**\r\n * Vertex index formats.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawElements\r\n * @see https://gpuweb.github.io/gpuweb/#enumdef-gpuindexformat\r\n */\r\nexport enum IndexFormat {\r\n  /** 16-bit indices */\r\n  UInt16 = GLenum.UNSIGNED_SHORT,\r\n\r\n  /** 32-bit indices. For WebGL1, this requires OES_element_index_uint extension. */\r\n  UInt32 = GLenum.UNSIGNED_INT\r\n}\r\n\r\n/**\r\n * Hint for mipmap generation.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/hint\r\n */\r\nexport enum MipmapHint {\r\n  /** No preference. */\r\n  None = GLenum.DONT_CARE,\r\n\r\n  /** The most efficient option should be chosen. */\r\n  Fast = GLenum.FASTEST,\r\n\r\n  /** The most correct, or highest quality, option should be chosen. */\r\n  Nice = GLenum.NICEST\r\n}\r\n\r\n/**\r\n * Texture sampler minification filter mode.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getTexParameter\r\n * @see https://gpuweb.github.io/gpuweb/#enumdef-gpufiltermode\r\n */\r\nexport enum MinFilterMode {\r\n  /** use nearest-filtering (aka point-filtering) */\r\n  Nearest = GLenum.NEAREST,\r\n\r\n  /** use linear filtering */\r\n  Linear = GLenum.LINEAR,\r\n\r\n  /** nearest within mipmap and between mipmaps */\r\n  NearestMipmapNearest = GLenum.NEAREST_MIPMAP_NEAREST,\r\n\r\n  /** nearest within mipmap, linear between mipmaps */\r\n  NearestMipmapLinear = GLenum.NEAREST_MIPMAP_LINEAR,\r\n\r\n  /** linear within mipmap, nearest between mipmaps */\r\n  LinearMipmapNearest = GLenum.LINEAR_MIPMAP_NEAREST,\r\n\r\n  /** linear within and between mipmaps */\r\n  LinearMipmapLinear = GLenum.LINEAR_MIPMAP_LINEAR\r\n}\r\n\r\n/**\r\n * Texture pixel format.\r\n * Lower 8 bits of the enum values encode the distinct size types;\r\n * Bits 8-15 encode the distinct formats;\r\n * Bits 16-23 encode the distinct internal formats;\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/renderbufferStorage\r\n * @see https://gpuweb.github.io/gpuweb/#enumdef-gputextureformat\r\n */\r\nexport enum PixelFormat {\r\n  /** 16-32 bits depth */\r\n  Depth = 0x01_01_04,\r\n\r\n  /** 8-bit stencil. */\r\n  Stencil = 0x02_02_05,\r\n\r\n  /** 16-24 bits depth with 8-bit stencil */\r\n  DepthStencil = 0x03_03_05,\r\n\r\n  /** RGBA with 8 bits per channel */\r\n  RGBA8 = 0x04_04_01,\r\n\r\n  /**\r\n   * RGBA with 32-bit floating point channels.\r\n   * For WebGL1, this requires OES_texture_float extension.\r\n   */\r\n  RGBA32F = 0x05_04_02,\r\n\r\n  /**\r\n   * RGBA with 16-bit floating point channels.\r\n   * For WebGL1, this requires OES_texture_half_float extension.\r\n   */\r\n  RGBA16F = 0x06_04_03,\r\n\r\n  /**\r\n   * R component only, 32-bit floating point. WebGL2 only.\r\n   */\r\n  R32F = 0x07_05_02,\r\n\r\n  /**\r\n   * R component only, 16-bit floating point. WebGL2 only.\r\n   */\r\n  R16F = 0x08_05_03,\r\n\r\n  /**\r\n   * RG component only, 32-bit floating point. WebGL2 only.\r\n   */\r\n  RG32F = 0x09_06_02,\r\n\r\n  /**\r\n   * RG component only, 16-bit floating point. WebGL2 only.\r\n   */\r\n  RG16F = 0x0A_06_03,\r\n}\r\n\r\n/**\r\n * Primitive topology.\r\n * @see https://gpuweb.github.io/gpuweb/#primitive-topology\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawElements\r\n */\r\nexport enum PrimitiveType {\r\n  /** Point list */\r\n  Points = GLenum.POINTS,\r\n\r\n  /** Line list */\r\n  Lines = GLenum.LINES,\r\n\r\n  /** Line strip */\r\n  LineStrip = GLenum.LINE_STRIP,\r\n\r\n  /** Triangle list */\r\n  Tri = GLenum.TRIANGLES,\r\n\r\n  /** Triangle strip */\r\n  TriStrip = GLenum.TRIANGLE_STRIP\r\n}\r\n\r\nexport enum ShaderType {\r\n  /** Vertex shader */\r\n  Vertex = GLenum.VERTEX_SHADER,\r\n\r\n  /** Fragment shader */\r\n  Fragment = GLenum.FRAGMENT_SHADER\r\n}\r\n\r\n/**\r\n * Stencil-buffer operation.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilOpSeparate\r\n * @see https://gpuweb.github.io/gpuweb/#enumdef-gpustenciloperation\r\n */\r\nexport enum StencilOp {\r\n  /** keep the current stencil value */\r\n  Keep = GLenum.KEEP,\r\n\r\n  /** set the stencil value to zero */\r\n  Zero = GLenum.ZERO,\r\n\r\n  /** replace the stencil value with stencil reference value */\r\n  Replace = GLenum.REPLACE,\r\n\r\n  /** increment the current stencil value, clamp to max */\r\n  Incr = GLenum.INCR,\r\n\r\n  /** decrement the current stencil value, clamp to zero */\r\n  Decr = GLenum.DECR,\r\n\r\n  /** perform a logical bitwise invert operation on the stencil value */\r\n  Invert = GLenum.INVERT,\r\n\r\n  /** increment the current stencil value, with wrap-around */\r\n  IncrWrap = GLenum.INCR_WRAP,\r\n\r\n  /** decrement the current stencil value, with wrap-around */\r\n  DecrWrap = GLenum.DECR_WRAP\r\n}\r\n\r\n/**\r\n * Texture view dimension type.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\r\n * @see https://gpuweb.github.io/gpuweb/#enumdef-gputextureviewdimension\r\n */\r\nexport enum TexType {\r\n  /** 2D texture */\r\n  Tex2D = GLenum.TEXTURE_2D,\r\n\r\n  /** Cube map texture */\r\n  Cube = GLenum.TEXTURE_CUBE_MAP,\r\n\r\n  /** 3D texture. WebGL2 only. */\r\n  Tex3D = GLenum.TEXTURE_3D,\r\n\r\n  /** 2D array texture. WebGL2 only. */\r\n  Array = GLenum.TEXTURE_2D_ARRAY\r\n}\r\n\r\n/**\r\n * Uniform value format.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniformMatrix\r\n */\r\nexport enum UniformFormat {\r\n  /** float type */\r\n  Float = GLenum.FLOAT,\r\n\r\n  /** 2D vector */\r\n  Vec2 = GLenum.FLOAT_VEC2,\r\n\r\n  /** 3D vector */\r\n  Vec3 = GLenum.FLOAT_VEC3,\r\n\r\n  /** 4D vector */\r\n  Vec4 = GLenum.FLOAT_VEC4,\r\n\r\n  /** 2x2 matrix */\r\n  Mat2 = GLenum.FLOAT_MAT3,\r\n\r\n  /** 3x3 matrix */\r\n  Mat3 = GLenum.FLOAT_MAT3,\r\n\r\n  /** 4x4 matrix */\r\n  Mat4 = GLenum.FLOAT_MAT4\r\n}\r\n\r\n/**\r\n * Uniform type (uniform value or texture).\r\n * TODO = [Feature] Support uniform buffer object\r\n */\r\nexport enum UniformType {\r\n  /** Uniform value type */\r\n  Value = 0b0001,\r\n\r\n  /** Uniform texture type */\r\n  Tex = 0b0010,\r\n\r\n  /** Uniform buffer type */\r\n  Buffer = 0b0100\r\n}\r\n\r\n/**\r\n * Buffer data usage hint.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData\r\n */\r\nexport enum Usage {\r\n  /** Data is static, cannot be modified after creation */\r\n  Static = GLenum.STATIC_DRAW,\r\n\r\n  /** Data is updated infrequently */\r\n  Dynamic = GLenum.DYNAMIC_DRAW,\r\n\r\n  /** Data is overwritten each frame */\r\n  Stream = GLenum.STREAM_DRAW\r\n}\r\n\r\n/**\r\n * Vertex component format.\r\n * Enum values encode the properties of the formats:\r\n *  - bits 0 - 7 encodes the data type\r\n *  - bits 8 - 15 encodes the number of components\r\n *  - bits 16 encodes if the type is normalized (1 for normalized, 0 otherwise)\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer\r\n * @see https://gpuweb.github.io/gpuweb/#enumdef-gpuvertexformat\r\n */\r\nexport enum VertexFormat {\r\n  /** 32-bit float, single component in X */\r\n  Float = 0x0_01_00,\r\n\r\n  /** 32-bit floats, 2 components in XY */\r\n  Float2 = 0x0_02_00,\r\n\r\n  /** 32-bit floats, 3 components in XYZ */\r\n  Float3 = 0x0_03_00,\r\n\r\n  /** 32-bit floats, 4 components in XYZW */\r\n  Float4 = 0x0_04_00,\r\n\r\n  /** 2 packed bytes, signed (-128 .. 127) */\r\n  Char2 = 0x0_02_01,\r\n\r\n  /** 2 packed bytes, signed, normalized (-1.0 .. +1.0) */\r\n  Char2N = 0x1_02_01,\r\n\r\n  /** 2 packed bytes, unsigned (0 .. 255) */\r\n  UChar2 = 0x0_02_02,\r\n\r\n  /** 2 packed bytes, unsigned, normalized (0.0 .. +1.0) */\r\n  UChar2N = 0x1_02_02,\r\n\r\n  /** 4 packed bytes, signed (-128 .. 127) */\r\n  Char4 = 0x0_04_01,\r\n\r\n  /** 4 packed bytes, signed, normalized (-1.0 .. +1.0) */\r\n  Char4N = 0x1_04_01,\r\n\r\n  /** 4 packed bytes, unsigned (0 .. 255) */\r\n  UChar4 = 0x0_04_02,\r\n\r\n  /** 4 packed bytes, unsigned, normalized (0.0 .. +1.0) */\r\n  UChar4N = 0x1_04_02,\r\n\r\n  /** 2 packed 16-bit shorts, signed (-32767 .. +32768) */\r\n  Short2 = 0x0_02_03,\r\n\r\n  /** 2 packed 16-bit shorts, signed, normalized (-1.0 .. +1.0) */\r\n  Short2N = 0x1_02_03,\r\n\r\n  /** 4 packed 16-bit shorts, signed (-32767 .. +32768) */\r\n  Short4 = 0x0_04_03,\r\n\r\n  /** 4 packed 16-bit shorts, signed, normalized (-1.0 .. +1.0) */\r\n  Short4N = 0x1_04_03,\r\n\r\n  /** 2 packed 16-bit shorts, unsigned (0 .. +65535) */\r\n  UShort2 = 0x0_02_04,\r\n\r\n  /** 2 packed 16-bit shorts, unsigned, normalized (0.0 .. +1.0) */\r\n  UShort2N = 0x1_02_04,\r\n\r\n  /** 4 packed 16-bit shorts, unsigned (0 .. +65535) */\r\n  UShort4 = 0x0_04_04,\r\n\r\n  /** 4 packed 16-bit shorts, unsigned, normalized (0.0 .. +1.0) */\r\n  UShort4N = 0x1_04_04\r\n}\r\n"],"file":"enums.js"}