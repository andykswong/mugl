{"version":3,"sources":["../../../src/js/gl2/renderpass.ts"],"names":["MUGL_DEBUG","GLenum","hasStencil","isDepthStencil","is3DTexture","GL1Feature","GLRenderPass","constructor","context","props","glfb","glrfb","gl","drawBuffersExt","feature","DrawBuffers","color","map","initTextureView","depth","withStencil","tex","format","clearColor","clearDepth","NaN","clearStencil","length","createFramebuffer","bindFramebuffer","FRAMEBUFFER","maxAtt","webgl2","i","samples","framebufferRenderbuffer","COLOR_ATTACHMENT0","RENDERBUFFER","glrb","framebufferTexture","drawBuffers","_","drawBuffersWEBGL","renderTarget","DEPTH_STENCIL_ATTACHMENT","DEPTH_ATTACHMENT","console","error","assert","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","isContextLost","push","createResolveFrameBuffer","destroy","deleteFramebuffer","resolve","blitFramebuffer","COLOR_BUFFER_BIT","depthFb","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","attachment","slice","mipLevel","type","framebufferTextureLayer","glt","texTarget","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","framebufferTexture2D","view","fb","gl2","from","to","mask","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","readBuffer","width","height","NEAREST"],"mappings":"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","sourcesContent":["import { MUGL_DEBUG } from '../../common/config';\r\nimport {\r\n  GLenum, Texture, hasStencil, Int, isDepthStencil, is3DTexture, RenderPassDescriptor, ReadonlyTextureView,\r\n  RenderPassProperties, TextureView\r\n} from '../../common';\r\nimport { GLRenderPass as IGLRenderPass, GLRenderingDevice, GL1Feature } from '../device';\r\nimport { GLTexture } from './texture';\r\n\r\nexport class GLRenderPass implements IGLRenderPass {\r\n  public readonly props: RenderPassProperties;\r\n\r\n  public glfb: WebGLFramebuffer | null = null;\r\n  public glrfb: (WebGLFramebuffer | null)[] = [];\r\n\r\n  private readonly gl: WebGLRenderingContext;\r\n\r\n  public constructor(context: GLRenderingDevice, props: RenderPassDescriptor = {}) {\r\n    const gl = this.gl = context.gl;\r\n    const drawBuffersExt: WEBGL_draw_buffers | null = context.feature(GL1Feature.DrawBuffers);\r\n\r\n    const color = (props.color?.map(initTextureView) || []) as ReadonlyTextureView[];\r\n    const depth = initTextureView(props.depth);\r\n    const withStencil = (depth && hasStencil(depth.tex.props.format)) || false;\r\n    this.props = {\r\n      color,\r\n      depth,\r\n      clearColor: props.clearColor || null,\r\n      clearDepth: props.clearDepth ?? NaN,\r\n      clearStencil: props.clearStencil ?? NaN\r\n    };\r\n\r\n    if (color.length) {\r\n      // An offscreen pass, need to create a framebuffer with color- and depth attachments\r\n      this.glfb = gl.createFramebuffer();\r\n      gl.bindFramebuffer(GLenum.FRAMEBUFFER, this.glfb);\r\n\r\n      const maxAtt = drawBuffersExt || context.webgl2 ? color.length : 1;\r\n\r\n      for (let i = 0; i < maxAtt; ++i) {\r\n        if (context.webgl2 && color[i].tex.props.samples > 1) {\r\n          // Attach multisample renderbuffer for MSAA offscreen rendering\r\n          gl.framebufferRenderbuffer(GLenum.FRAMEBUFFER, GLenum.COLOR_ATTACHMENT0 + i, GLenum.RENDERBUFFER,\r\n            (color[i].tex as GLTexture).glrb);\r\n        } else {\r\n          framebufferTexture(gl, GLenum.COLOR_ATTACHMENT0 + i, color[i]);\r\n        }\r\n      }\r\n\r\n      // TODO: [Feature] implement multiview\r\n      if (maxAtt > 1) {\r\n        if (context.webgl2) {\r\n          (gl as WebGL2RenderingContext).drawBuffers(color.map((_, i) => GLenum.COLOR_ATTACHMENT0 + i));\r\n        } else if (drawBuffersExt) {\r\n          drawBuffersExt.drawBuffersWEBGL(color.map((_, i) => GLenum.COLOR_ATTACHMENT0 + i));\r\n        }\r\n      }\r\n\r\n      // Attach optional depth-stencil buffer to framebuffer\r\n      if (depth) {\r\n        if (depth.tex.props.renderTarget || (context.webgl2 && depth.tex.props.samples > 1)) { // Use renderbuffer\r\n          gl.framebufferRenderbuffer(GLenum.FRAMEBUFFER, withStencil ? GLenum.DEPTH_STENCIL_ATTACHMENT : GLenum.DEPTH_ATTACHMENT,\r\n            GLenum.RENDERBUFFER, (depth.tex as GLTexture).glrb);\r\n        } else if (isDepthStencil(depth.tex.props.format)) { // Use depth texture\r\n          framebufferTexture(gl, withStencil ? GLenum.DEPTH_STENCIL_ATTACHMENT : GLenum.DEPTH_ATTACHMENT, depth);\r\n        } else {\r\n          if (MUGL_DEBUG) {\r\n            console.error('Invalid depth texture format', depth.tex);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (MUGL_DEBUG) {\r\n        console.assert(\r\n          gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || gl.isContextLost(),\r\n          'Framebuffer completeness check failed'\r\n        );\r\n      }\r\n\r\n      if (context.webgl2) {\r\n        // WebGL has no support for multisample textures. We will render to MSAA renderbuffers\r\n        // and blit to the resolve renderbuffers which have textures attached.\r\n        for (let i = 0; i < maxAtt; ++i) {\r\n          this.glrfb.push(color[i].tex.props.samples > 1 ?\r\n            createResolveFrameBuffer(gl, GLenum.COLOR_ATTACHMENT0, color[i]) : null);\r\n        }\r\n        this.glrfb.push(depth && depth.tex.props.samples > 1 ?\r\n          createResolveFrameBuffer(gl, withStencil ? GLenum.DEPTH_STENCIL_ATTACHMENT : GLenum.DEPTH_ATTACHMENT, depth) : null);\r\n      }\r\n    }\r\n  }\r\n\r\n  public destroy(): void {\r\n    this.gl.deleteFramebuffer(this.glfb);\r\n    this.glfb = null;\r\n    for (const glrfb of this.glrfb) {\r\n      this.gl.deleteFramebuffer(glrfb);\r\n    }\r\n    this.glrfb = [];\r\n  }\r\n\r\n  public resolve(): void {\r\n    // Blit main framebuffer content to MSAA resolve framebuffers so that texture contents are updated\r\n    for (let i = 0; i < this.glrfb.length - 1; ++i) {\r\n      if (this.glrfb[i]) {\r\n        blitFramebuffer(<WebGL2RenderingContext>this.gl, this.glfb, this.glrfb[i], this.props.color[i].tex,\r\n          GLenum.COLOR_BUFFER_BIT, GLenum.COLOR_ATTACHMENT0 + i);\r\n      }\r\n    }\r\n    const depthFb = this.glrfb[this.glrfb.length - 1];\r\n    if (this.props.depth && depthFb) {\r\n      blitFramebuffer(<WebGL2RenderingContext>this.gl, this.glfb, depthFb,\r\n        this.props.depth.tex, GLenum.DEPTH_BUFFER_BIT | GLenum.STENCIL_BUFFER_BIT);\r\n    }\r\n  }\r\n}\r\n\r\nfunction framebufferTexture(gl: WebGLRenderingContext, attachment: GLenum, { tex, slice, mipLevel }: ReadonlyTextureView): void {\r\n  if (is3DTexture(tex.props.type)) {\r\n    (gl as WebGL2RenderingContext)\r\n      .framebufferTextureLayer(GLenum.FRAMEBUFFER, attachment, (tex as GLTexture).glt, mipLevel, slice);\r\n  } else {\r\n    const texTarget = (tex.props.type === GLenum.TEXTURE_CUBE_MAP) ? GLenum.TEXTURE_CUBE_MAP_POSITIVE_X + slice : tex.props.type;\r\n    gl.framebufferTexture2D(GLenum.FRAMEBUFFER, attachment, texTarget, (tex as GLTexture).glt, mipLevel);\r\n  }\r\n}\r\n\r\nfunction createResolveFrameBuffer(\r\n  gl: WebGLRenderingContext, attachment: GLenum, view: ReadonlyTextureView\r\n): WebGLFramebuffer | null {\r\n  const fb = gl.createFramebuffer();\r\n  gl.bindFramebuffer(GLenum.FRAMEBUFFER, fb);\r\n  framebufferTexture(gl, attachment, view);\r\n  if (MUGL_DEBUG) {\r\n    console.assert(\r\n      gl.checkFramebufferStatus(GLenum.FRAMEBUFFER) === GLenum.FRAMEBUFFER_COMPLETE || gl.isContextLost(),\r\n      'Framebuffer completeness check failed for MSAA resolve buffer'\r\n    );\r\n  }\r\n  return fb;\r\n}\r\n\r\nfunction blitFramebuffer(\r\n  gl2: WebGL2RenderingContext, from: WebGLFramebuffer | null, to: WebGLFramebuffer | null,\r\n  tex: Texture, mask: number, attachment: Int = -1\r\n): void {\r\n  gl2.bindFramebuffer(GLenum.READ_FRAMEBUFFER, from);\r\n  gl2.bindFramebuffer(GLenum.DRAW_FRAMEBUFFER, to);\r\n  if (attachment >= 0) {\r\n    gl2.readBuffer(attachment);\r\n  }\r\n  gl2.blitFramebuffer(\r\n    0, 0, tex.props.width, tex.props.height,\r\n    0, 0, tex.props.width, tex.props.height,\r\n    mask, GLenum.NEAREST\r\n  );\r\n}\r\n\r\nfunction initTextureView(view?: TextureView | null): ReadonlyTextureView | null {\r\n  if (view) {\r\n    return {\r\n      slice: 0,\r\n      mipLevel: 0,\r\n      ...view\r\n    };\r\n  }\r\n  return null;\r\n}\r\n"],"file":"renderpass.js"}