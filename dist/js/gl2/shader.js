import{MUGL_DEBUG}from"../../common/config.js";import{GLenum}from"../../common/index.js";export class GLShader{constructor(context,props){const gl=this.gl=context.gl;const shader=this.gls=gl.createShader(this.type=props.type);gl.shaderSource(shader,this.source=props.source);gl.compileShader(shader);if(MUGL_DEBUG){console.assert(gl.getShaderParameter(shader,GLenum.COMPILE_STATUS)||gl.isContextLost(),`Failed to compile shader: ${gl.getShaderInfoLog(shader)}`)}}destroy(){this.gl.deleteShader(this.gls);this.gls=null}}export function createProgram(gl,vert,frag,buffers){const program=gl.createProgram();gl.attachShader(program,vert.gls);gl.attachShader(program,frag.gls);for(let i=0;i<buffers.length;++i){const attrs=buffers[i].attrs;for(let j=0;j<attrs.length;++j){gl.bindAttribLocation(program,attrs[j].shaderLoc||0,attrs[j].name)}}gl.linkProgram(program);if(MUGL_DEBUG){console.assert(gl.getProgramParameter(program,GLenum.LINK_STATUS)||gl.isContextLost(),`Failed to link program: ${gl.getProgramInfoLog(program)}`)}return program}
//# sourceMappingURL=shader.js.map