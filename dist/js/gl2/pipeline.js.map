{"version":3,"sources":["../../../src/js/gl2/pipeline.ts"],"names":["GLenum","IndexFormat","PrimitiveType","TexType","UniformFormat","UniformType","vertexByteSize","MAX_VERTEX_ATTRIBS","DEFAULT_RASTER_STATE","DEFAULT_DEPTH_STATE","DEFAULT_STENCIL_STATE","DEFAULT_BLEND_STATE","createProgram","GLPipeline","constructor","context","props","gl","hasAttr","Array","nextShaderLoc","hasInstanced","buffers","map","attrs","descAttrs","stride","instanced","length","maxOffset","minOffset","Infinity","j","offset","shaderLoc","Math","max","format","min","uniforms","uniform","name","type","Value","texType","Tex2D","valueFormat","Float","vert","frag","indexFormat","UInt16","mode","Tri","raster","depth","stencil","blend","glp","cache","bufCount","texCount","i","loc","index","INVALID_INDEX","Buffer","getUniformBlockIndex","uniformBlockBinding","getUniformLocation","binding","Tex","destroy","deleteProgram"],"mappings":"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","sourcesContent":["import {\r\n  GLenum, IndexFormat, PipelineDescriptor, PipelineProperties, PrimitiveType, ReadonlyVertexAttribute, TexType,\r\n  UniformFormat, UniformLayoutEntry, UniformType, vertexByteSize\r\n} from '../../common';\r\nimport { GLPipeline as IGLPipeline, GLRenderingDevice } from '../device';\r\nimport { MAX_VERTEX_ATTRIBS } from './const';\r\nimport { DEFAULT_RASTER_STATE, DEFAULT_DEPTH_STATE, DEFAULT_STENCIL_STATE, DEFAULT_BLEND_STATE } from './pipestate';\r\nimport { createProgram, GLShader } from './shader';\r\n\r\n/** An entry of uniform info cache */\r\ntype UniformCacheEntry = UniformLayoutEntry & {\r\n  /** Uniform location. */\r\n  loc: WebGLUniformLocation | null,\r\n\r\n  /** Uniform block index. */\r\n  index: GLuint,\r\n  \r\n  /** Uniform buffer / Texture bind slot ID. */\r\n  binding: number\r\n}\r\n\r\n/** Cache of uniform info. */\r\ntype UniformCache = Record<string, UniformCacheEntry>;\r\n\r\nexport class GLPipeline implements IGLPipeline {\r\n  public readonly props: PipelineProperties;\r\n  public glp: WebGLProgram | null;\r\n\r\n  public readonly cache: UniformCache;\r\n  public readonly instanced: boolean;\r\n\r\n  private readonly gl: WebGLRenderingContext;\r\n\r\n  public constructor(context: GLRenderingDevice, props: PipelineDescriptor) {\r\n    const gl = this.gl = context.gl;\r\n\r\n    // Auto calculate buffer offsets, stride and shaderLoc\r\n    const hasAttr: boolean[] = Array(MAX_VERTEX_ATTRIBS);\r\n    let nextShaderLoc = 0;\r\n    let hasInstanced = false;\r\n    const buffers = props.buffers.map(({ attrs: descAttrs, stride = 0, instanced = false }) => {\r\n      hasInstanced = hasInstanced || instanced;\r\n      const attrs: ReadonlyVertexAttribute[] = Array(descAttrs.length);\r\n      let maxOffset = 0, minOffset = descAttrs.length > 0 ? Infinity : 0;\r\n      for (let j = 0; j < descAttrs.length; ++j) {\r\n        const { offset = maxOffset, shaderLoc = nextShaderLoc } = descAttrs[j];\r\n        attrs[j] = { ...descAttrs[j], offset, shaderLoc };\r\n        hasAttr[nextShaderLoc = shaderLoc] = true;\r\n        while (hasAttr[++nextShaderLoc]);\r\n        maxOffset = Math.max(maxOffset, offset + vertexByteSize(attrs[j].format));\r\n        minOffset = Math.min(minOffset, offset);\r\n      }\r\n      return { attrs, stride: stride || (maxOffset - minOffset), instanced };\r\n    });\r\n    const uniforms = (props.uniforms || []).map(uniform => ({\r\n      name: uniform.name,\r\n      type: uniform.type || UniformType.Value,\r\n      texType: uniform.texType || TexType.Tex2D,\r\n      valueFormat: uniform.valueFormat || UniformFormat.Float\r\n    }));\r\n\r\n    this.instanced = hasInstanced;\r\n    this.props = {\r\n      vert: props.vert,\r\n      frag: props.frag,\r\n      indexFormat: props.indexFormat || IndexFormat.UInt16,\r\n      mode: props.mode ?? PrimitiveType.Tri,\r\n      buffers,\r\n      uniforms,\r\n      raster: { ...DEFAULT_RASTER_STATE, ...props.raster },\r\n      depth: props.depth ? { ...DEFAULT_DEPTH_STATE, ...props.depth } : null,\r\n      stencil: props.stencil ? { ...DEFAULT_STENCIL_STATE, ...props.stencil } : null,\r\n      blend: props.blend ? { ...DEFAULT_BLEND_STATE, ...props.blend } : null\r\n    };\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    const glp = this.glp = createProgram(gl, props.vert as GLShader, props.frag as GLShader, buffers)!;\r\n\r\n    // Populate uniform types and location cache\r\n    const cache: UniformCache = this.cache = {};\r\n    let bufCount = 0;\r\n    let texCount = 0;\r\n    for (let i = 0; i < uniforms.length; ++i) {\r\n      const uniform = uniforms[i];\r\n      let loc = null;\r\n      let index = GLenum.INVALID_INDEX;\r\n      if (uniform.type === UniformType.Buffer) {\r\n        index = (gl as WebGL2RenderingContext).getUniformBlockIndex(glp, uniform.name);\r\n        (gl as WebGL2RenderingContext).uniformBlockBinding(glp, index, bufCount++);\r\n      } else {\r\n        loc = gl.getUniformLocation(glp, uniform.name);\r\n      }\r\n      if (loc !== null || index !== GLenum.INVALID_INDEX) {\r\n        cache[uniform.name] = {\r\n          ...uniform,\r\n          loc,\r\n          index,\r\n          binding: uniform.type === UniformType.Tex ? texCount++ : \r\n            uniform.type === UniformType.Buffer ? bufCount : -1\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy(): void {\r\n    this.gl.deleteProgram(this.glp);\r\n    this.glp = null;\r\n  }\r\n}\r\n"],"file":"pipeline.js"}