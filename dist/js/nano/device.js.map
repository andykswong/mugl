{"version":3,"sources":["../../../src/js/nano/device.ts"],"names":["BYTE_MASK","vertexSize","vertexType","vertexNormalized","indexSize","GLenum","GL_EXT_DRAW_BUFFERS","GL_EXT_INSTANCING","MAX_VERTEX_ATTRIBS","NGL_ENABLE_BLEND","NGL_ENABLE_MRT","NGL_ENABLE_OFFSCREEN","NGL_ENABLE_SCISSOR","NGL_ENABLE_STENCIL","NGL_ENABLE_TEXTURE","GLBuffer","GLPipeline","GLRenderPass","GLShader","GLTexture","applyPipelineState","EMPTY_TEXTURE","renderPassLite","getNGLDevice","canvas","options","gl","getContext","NanoGLRenderingDevice","constructor","webgl2","d","feature","r","NanoGLRenderPassContext","width","drawingBufferWidth","height","drawingBufferHeight","buffer","desc","texture","sampler","shader","pipeline","pass","render","props","color","tex","bindFramebuffer","FRAMEBUFFER","glfb","viewport","disable","SCISSOR_TEST","clearMask","clearColor","COLOR_BUFFER_BIT","colorMask","isNaN","clearDepth","DEPTH_BUFFER_BIT","depthMask","clearStencil","STENCIL_BUFFER_BIT","stencilMask","clear","extension","getExtension","reset","inst","s","p","useProgram","glp","i","disableVertexAttribArray","attrs","buffers","shaderLoc","enableVertexAttribArray","index","glb","bindBuffer","ELEMENT_ARRAY_BUFFER","vertex","slot","stride","instanced","ARRAY_BUFFER","format","offset","vertexAttribPointer","vertexAttribDivisorANGLE","uniforms","bindings","texId","binding","loc","getUniformLocation","name","values","valueBuffer","uniform","find","u","valueFormat","FLOAT_MAT4","uniformMatrix4fv","FLOAT_MAT3","uniformMatrix3fv","FLOAT_VEC4","uniform4fv","FLOAT_VEC3","uniform3fv","FLOAT_VEC2","uniform2fv","uniform1fv","activeTexture","TEXTURE0","bindTexture","type","glt","uniform1i","value","uniform1f","draw","vertexCount","instanceCount","firstVertex","mode","drawArraysInstancedANGLE","drawArrays","drawIndexed","indexCount","firstIndex","indexFormat","drawElementsInstancedANGLE","drawElements","x","y","scissor","blendColor","stencilRef","stencil","readMask","stencilFuncSeparate","FRONT","frontCompare","ALWAYS","BACK","backCompare","end"],"mappings":"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","sourcesContent":["import {\r\n  BYTE_MASK, BufferDescriptor, Canvas, GLRenderingDevice, GLRenderingDeviceFactory, PipelineDescriptor,\r\n  ReadonlyColor, RenderPassContext, RenderPassDescriptor, SamplerDescriptor, TextureDescriptor, vertexSize,\r\n  vertexType, vertexNormalized, indexSize, UniformBindings, ShaderDescriptor\r\n} from '../device';\r\nimport { GLenum } from '../../common/gl';\r\nimport { GL_EXT_DRAW_BUFFERS, GL_EXT_INSTANCING, MAX_VERTEX_ATTRIBS } from './const';\r\nimport {\r\n  NGL_ENABLE_BLEND, NGL_ENABLE_MRT, NGL_ENABLE_OFFSCREEN, NGL_ENABLE_SCISSOR, NGL_ENABLE_STENCIL, NGL_ENABLE_TEXTURE\r\n} from './config';\r\nimport { GLBuffer, GLPipeline, GLRenderPass, GLShader, GLTexture, applyPipelineState } from './resources';\r\nimport { EMPTY_TEXTURE, renderPassLite } from './stubs';\r\n\r\n/**\r\n * Create a {@link GLRenderingDevice}.\r\n * @param canvas the canvas to be used\r\n * @param options context initialization options\r\n * @returns rendering device instance, or null if WebGL is not supported\r\n */\r\nexport const getNGLDevice: GLRenderingDeviceFactory =\r\n  (canvas: Canvas, options?: WebGLContextAttributes): GLRenderingDevice | null => {\r\n    const gl: WebGLRenderingContext | null = canvas.getContext('webgl', options);\r\n    if (!gl) {\r\n      return null;\r\n    }\r\n    return new NanoGLRenderingDevice(gl);\r\n  }\r\n\r\n/**\r\n * The WebGL rendering context, in WebGPU API style.\r\n */\r\nclass NanoGLRenderingDevice implements GLRenderingDevice {\r\n  public readonly webgl2 = false;\r\n  public readonly canvas: Canvas;\r\n\r\n  /** Render pass context. */\r\n  private readonly r: NanoGLRenderPassContext;\r\n  \r\n  /** Draw buffers extension. */\r\n  private readonly d: WEBGL_draw_buffers | undefined;\r\n\r\n  constructor(public readonly gl: WebGLRenderingContext) {\r\n    this.canvas = gl.canvas;\r\n    if (NGL_ENABLE_MRT) {\r\n      this.d = this.feature(GL_EXT_DRAW_BUFFERS);\r\n    }\r\n    this.r = new NanoGLRenderPassContext(gl, this.feature(GL_EXT_INSTANCING));\r\n  }\r\n\r\n  public get width(): number {\r\n    return this.gl.drawingBufferWidth;\r\n  }\r\n\r\n  public get height(): number {\r\n    return this.gl.drawingBufferHeight;\r\n  }\r\n\r\n  public buffer(desc: BufferDescriptor): GLBuffer {\r\n    return new GLBuffer(this.gl, desc);\r\n  }\r\n\r\n  public texture(desc: TextureDescriptor, sampler?: SamplerDescriptor): GLTexture {\r\n    if (NGL_ENABLE_TEXTURE) {\r\n      return new GLTexture(this.gl, desc, sampler);\r\n    }\r\n    return EMPTY_TEXTURE;\r\n  }\r\n\r\n  public shader(desc: ShaderDescriptor): GLShader {\r\n    return new GLShader(this.gl, desc);\r\n  }\r\n\r\n  public pipeline(desc: PipelineDescriptor): GLPipeline {\r\n    return new GLPipeline(this.gl, desc);\r\n  }\r\n\r\n  public pass(desc: RenderPassDescriptor = {}): GLRenderPass {\r\n    if (NGL_ENABLE_TEXTURE && NGL_ENABLE_OFFSCREEN) {\r\n      return new GLRenderPass(this.gl, desc, this.d);\r\n    }\r\n    return renderPassLite(desc);\r\n  }\r\n\r\n  public render(pass: GLRenderPass): RenderPassContext {\r\n    let width = this.width, height = this.height;\r\n  \r\n    if (NGL_ENABLE_OFFSCREEN) {\r\n      if (pass.props.color) {\r\n        ({ width, height } = pass.props.color[0].tex.props as Required<TextureDescriptor>);\r\n      }\r\n  \r\n      // Bind the pass framebuffer\r\n      this.gl.bindFramebuffer(GLenum.FRAMEBUFFER, pass.glfb);\r\n    }\r\n\r\n    // Reset viewport and scissor\r\n    // CAVEAT: depthRange NOT supported and NOT reset\r\n    this.gl.viewport(0, 0, width, height);\r\n    if (NGL_ENABLE_SCISSOR) {\r\n      this.gl.disable(GLenum.SCISSOR_TEST);\r\n    }\r\n\r\n    // Clear buffers\r\n    let clearMask = 0;\r\n    if (pass.props.clearColor) {\r\n      clearMask |= GLenum.COLOR_BUFFER_BIT;\r\n      this.gl.clearColor(...pass.props.clearColor);\r\n      if (NGL_ENABLE_BLEND) {\r\n        this.gl.colorMask(true, true, true, true);\r\n      }\r\n    }\r\n    if (!isNaN(pass.props.clearDepth)) {\r\n      clearMask |= GLenum.DEPTH_BUFFER_BIT;\r\n      this.gl.clearDepth(pass.props.clearDepth);\r\n      this.gl.depthMask(true);\r\n    }\r\n    if (NGL_ENABLE_STENCIL && !isNaN(pass.props.clearStencil)) {\r\n      clearMask |= GLenum.STENCIL_BUFFER_BIT;\r\n      this.gl.clearStencil(pass.props.clearStencil);\r\n      this.gl.stencilMask(BYTE_MASK);\r\n    }\r\n    if (clearMask) {\r\n      this.gl.clear(clearMask);\r\n    }\r\n\r\n    return this.r;\r\n  }\r\n\r\n  public feature<F>(extension: string): F {\r\n    return this.gl.getExtension(extension);\r\n  }\r\n\r\n  public reset(): void {\r\n    this.r.reset();\r\n  }\r\n}\r\n\r\nclass NanoGLRenderPassContext implements RenderPassContext {\r\n  /** Current state. */\r\n  private s!: WebGLState;\r\n\r\n  constructor(\r\n    private readonly gl: WebGLRenderingContext,\r\n    private readonly inst?: ANGLE_instanced_arrays\r\n  ) {\r\n    this.reset();\r\n  }\r\n\r\n  public reset(): void {\r\n    this.s = {\r\n      p: null,\r\n      r: 0\r\n    };\r\n  }\r\n\r\n  public pipeline(pipeline: GLPipeline): RenderPassContext {\r\n    if (this.s.p !== pipeline) {\r\n      this.s.p = pipeline;\r\n\r\n      // Update shader program\r\n      this.gl.useProgram(pipeline.glp);\r\n      applyPipelineState(this.gl, pipeline.props, this.s.r);\r\n\r\n      // Enable/Disable vertex attributes\r\n      for (let i = 0; i < MAX_VERTEX_ATTRIBS; ++i) {\r\n        this.gl.disableVertexAttribArray(i);\r\n      }\r\n      for (const { attrs } of pipeline.props.buffers) {\r\n        for (const { shaderLoc } of attrs) {\r\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n          this.gl.enableVertexAttribArray(shaderLoc);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public index({ glb }: GLBuffer): RenderPassContext {\r\n    this.gl.bindBuffer(GLenum.ELEMENT_ARRAY_BUFFER, glb);\r\n    return this;\r\n  }\r\n\r\n  public vertex(slot: number, { glb }: GLBuffer): RenderPassContext {\r\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    const { attrs, stride, instanced } = this.s.p!.props.buffers[slot];\r\n    this.gl.bindBuffer(GLenum.ARRAY_BUFFER, glb);\r\n    for (const { format, offset, shaderLoc } of attrs) {\r\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n      this.gl.vertexAttribPointer(shaderLoc, vertexSize(format), vertexType(format), vertexNormalized(format), stride!, offset!);\r\n      this.inst && this.inst.vertexAttribDivisorANGLE(shaderLoc, instanced ? 1 : 0);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public uniforms(bindings: UniformBindings): RenderPassContext {\r\n    // CAVEAT: must use a single call to set all uniforms, or else textures may be overridden!\r\n    let texId = 0;\r\n    for (const binding of bindings) {\r\n      // CAVEAT: uniform buffer is unsupported\r\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n      const loc = this.gl.getUniformLocation(this.s.p!.glp!, binding.name);\r\n\r\n      if (loc) {\r\n        if (binding.values || binding.valueBuffer) { // Array types\r\n          // TODO: this is inefficient\r\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n          const uniform = this.s.p!.props.uniforms.find(u => u.name === binding.name);\r\n          if (uniform) {\r\n            switch (uniform.valueFormat) {\r\n              case GLenum.FLOAT_MAT4: this.gl.uniformMatrix4fv(loc, false, (binding.values || binding.valueBuffer) as number[]); break;\r\n              case GLenum.FLOAT_MAT3: this.gl.uniformMatrix3fv(loc, false, (binding.values || binding.valueBuffer) as number[]); break;\r\n              // CAVEAT: mat2 uniform is not commonly used and thus disabled\r\n              // case GLenum.FLOAT_MAT2: this.gl.uniformMatrix2fv(loc, false, (binding.values || binding.valueBuffer) as number[]); break;\r\n              case GLenum.FLOAT_VEC4: this.gl.uniform4fv(loc, (binding.values || binding.valueBuffer) as number[]); break;\r\n              case GLenum.FLOAT_VEC3: this.gl.uniform3fv(loc, (binding.values || binding.valueBuffer) as number[]); break;\r\n              case GLenum.FLOAT_VEC2: this.gl.uniform2fv(loc, (binding.values || binding.valueBuffer) as number[]); break;\r\n              default: this.gl.uniform1fv(loc, (binding.values || binding.valueBuffer) as number[]);\r\n            }\r\n          }\r\n        } else if (NGL_ENABLE_TEXTURE && binding.tex) { // Texture\r\n          this.gl.activeTexture(GLenum.TEXTURE0 + texId);\r\n          this.gl.bindTexture(binding.tex.props.type, (binding.tex as GLTexture).glt);\r\n          this.gl.uniform1i(loc, texId++);\r\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        } else if (!isNaN(binding.value!)) { // Single number\r\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n          this.gl.uniform1f(loc, binding.value!);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public draw(vertexCount: number, instanceCount = 1, firstVertex = 0): RenderPassContext {\r\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    const { props: { mode }, i } = this.s.p!;\r\n    if (i) {\r\n      this.inst && this.inst.drawArraysInstancedANGLE(mode, firstVertex, vertexCount, instanceCount);\r\n    } else {\r\n      this.gl.drawArrays(mode, firstVertex, vertexCount);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public drawIndexed(indexCount: number, instanceCount = 1, firstIndex = 0): RenderPassContext {\r\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    const { props: { indexFormat, mode }, i } = this.s.p!;\r\n    if (i) {\r\n      this.inst && this.inst.drawElementsInstancedANGLE(\r\n        mode, indexCount, indexFormat, firstIndex * indexSize(indexFormat), instanceCount);\r\n    } else {\r\n      this.gl.drawElements(mode, indexCount, indexFormat, firstIndex * indexSize(indexFormat));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public viewport(x: number, y: number, width: number, height: number): RenderPassContext {\r\n    this.gl.viewport(x, y, width, height);\r\n    // CAVEAT: depthRange NOT supported\r\n    return this;\r\n  }\r\n\r\n  public scissor(x: number, y: number, width: number, height: number): RenderPassContext {\r\n    if (NGL_ENABLE_SCISSOR) {\r\n      this.gl.scissor(x, y, width, height);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public blendColor(color: ReadonlyColor): RenderPassContext {\r\n    if (NGL_ENABLE_BLEND) {\r\n      this.gl.blendColor(...color);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public stencilRef(stencilRef: number): RenderPassContext {\r\n    if (NGL_ENABLE_STENCIL) {\r\n      const stencil = this.s.p && this.s.p.props.stencil;\r\n      if (stencil) {\r\n        const readMask = stencil.readMask ?? BYTE_MASK;\r\n        this.gl.stencilFuncSeparate(GLenum.FRONT, stencil.frontCompare || GLenum.ALWAYS, stencilRef, readMask);\r\n        this.gl.stencilFuncSeparate(GLenum.BACK, stencil.backCompare || GLenum.ALWAYS, stencilRef, readMask);\r\n      }\r\n      this.s.r = stencilRef;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public end(): void {\r\n    // Nothing to do\r\n  }\r\n}\r\n\r\ninterface WebGLState {\r\n  /** Current pipeline. */\r\n  p: GLPipeline | null;\r\n\r\n  /** Current stencil ref. */\r\n  r: number;\r\n}\r\n"],"file":"device.js"}