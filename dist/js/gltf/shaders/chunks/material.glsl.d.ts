declare const _default: "\nconst float MIN_ROUGHNESS = .04;\n\n#ifdef USE_COLOR_0\nvarying vec4 vColor0;\n#endif\n\nuniform vec4 baseColorFactor;\nuniform TextureInfo baseColorTexture;\n\nuniform float metallicFactor;\nuniform float roughnessFactor;\nuniform TextureInfo metallicRoughnessTexture;\n\nuniform TextureInfo occlusionTexture;\n\nuniform vec3 emissiveFactor;\nuniform TextureInfo emissiveTexture;\n\nvec4 getVertexColor() {\n  vec4 color = vec4(1.);\n#ifdef USE_COLOR_0\n  color = vColor0;\n#endif\n  return color;\n}\n\nvec4 getBaseColor() {\n  vec4 baseColor = vec4(1.);\n\n  baseColor *= baseColorFactor;\n  baseColor *= sRGBToLinear(texture(baseColorTexture, vec4(1.)));\n\n  return baseColor * getVertexColor();\n}\n\nvec2 getMetallicRoughness() {\n  vec4 mrTex = texture(metallicRoughnessTexture, vec4(1.));\n  return vec2(\n    clamp(metallicFactor * mrTex.b, 0., 1.),\n    clamp(roughnessFactor * mrTex.g, MIN_ROUGHNESS, 1.)\n  );\n}\n\nfloat getOcculsion() {\n  return texture(occlusionTexture, vec4(1.)).r;\n}\n\nvec3 getEmissiveFactor() {\n  return emissiveFactor * sRGBToLinear(texture(emissiveTexture, vec4(0)).rgb);\n}\n\n";
export default _default;
//# sourceMappingURL=material.glsl.d.ts.map