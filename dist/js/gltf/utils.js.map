{"version":3,"sources":["../../../src/js/gltf/utils.ts"],"names":["decodeText","data","TextDecoder","decode","isDataUri","uri","test","getBaseUrl","url","parts","split","pop","length","join","resolveRelativeUri","baseUri"],"mappings":"AAKA,MAAO,SAASA,CAAAA,UAAT,CAAoBC,IAApB,CAAgD,CACrD,MAAO,IAAIC,CAAAA,WAAJ,GAAkBC,MAAlB,CAAyBF,IAAzB,CACR,CAKD,MAAO,SAASG,CAAAA,SAAT,CAAmBC,GAAnB,CAAyC,CAC9C,MAAO,iBAAgBC,IAAhB,CAAqBD,GAArB,GACL,aAAaC,IAAb,CAAkBD,GAAlB,CACH,CAKD,MAAO,SAASE,CAAAA,UAAT,CAAoBC,GAApB,CAAyC,CAC9C,GAAIJ,SAAS,CAACI,GAAD,CAAb,CAAoB,CAClB,MAAO,EACR,CAED,KAAMC,CAAAA,KAAK,CAAGD,GAAG,CAACE,KAAJ,CAAU,MAAV,EAAkB,CAAlB,EAAqBA,KAArB,CAA2B,GAA3B,CAAd,CACAD,KAAK,CAACE,GAAN,GACA,MAAOF,CAAAA,KAAK,CAACG,MAAN,CAAeH,KAAK,CAACI,IAAN,CAAW,GAAX,EAAkB,GAAjC,CAAuC,EAC/C,CAKD,MAAO,SAASC,CAAAA,kBAAT,CAA4BT,GAA5B,CAAyCU,OAAzC,CAAkE,CACvE,GAAIV,GAAG,GAAK,EAAZ,CAAgB,CACd,MAAO,EACR,CAED,GACE,mBAAmBC,IAAnB,CAAwBD,GAAxB,GACAD,SAAS,CAACC,GAAD,CAFX,CAGE,CACA,MAAOA,CAAAA,GACR,CAGD,MAAOU,CAAAA,OAAO,CAAGV,GAClB","sourcesContent":["/**\r\n * Decodes a buffer into string.\r\n * This uses TextDecoder, which can be polyfilled as per:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder#polyfill\r\n */\r\nexport function decodeText(data: BufferSource): string {\r\n  return new TextDecoder().decode(data);\r\n}\r\n\r\n/**\r\n * Check if URI is a data or blob URI.\r\n */\r\nexport function isDataUri(uri: string): boolean {\r\n  return /^data:.*,.*$/i.test(uri) /* Data URI */ ||\r\n    /^blob:.*$/i.test(uri) /* Blob URI */;\r\n}\r\n\r\n/**\r\n * Extract the base part of a URL.\r\n */\r\nexport function getBaseUrl(url: string): string {\r\n  if (isDataUri(url)) {\r\n    return '';\r\n  }\r\n\r\n  const parts = url.split(/[?#]/)[0].split('/');\r\n  parts.pop();\r\n  return parts.length ? parts.join('/') + '/' : '';\r\n}\r\n\r\n/**\r\n * Resolve relative URIs into absolute path.\r\n */\r\nexport function resolveRelativeUri(uri: string, baseUri: string): string {\r\n  if (uri === '') {\r\n    return '';\r\n  }\r\n\r\n  if (\r\n    /^(https?:)?\\/\\//i.test(uri) /* Absolute HTTP URL */ ||\r\n    isDataUri(uri) /* Data URI */\r\n  ) {\r\n    return uri;\r\n  }\r\n\r\n  // Relative path\r\n  return baseUri + uri;\r\n}\r\n"],"file":"utils.js"}