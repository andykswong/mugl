{"version":3,"sources":["../../../src/js/gltf/render.ts"],"names":["mat3","mat4","vec3","GLenum","AddressMode","BlendFactor","BufferType","CompareFunc","CullMode","FilterMode","IndexFormat","MinFilterMode","PrimitiveType","TexType","UniformFormat","UniformType","VertexFormat","vertexSize","ShaderType","getCameraProjection","getExtras","getAccessorVertexFormat","getAccessorData","primitiveVert","pbrFrag","updateGlTF","MAX_VERTEX_ATTRIBS","TARGET_ATTRIBUTES","TARGET_ATTRIBUTE_MATCHER","I4","create","Z3","tmpViewProj","renderGlTF","device","glTF","options","scene","nodes","rootNodes","scenes","activeNodes","view","proj","cameraPosition","camera","activeCamera","cameras","index","extras","width","height","translation","model","invert","viewProj","mul","env","pass","context","render","transparentDrawables","i","length","node","mesh","meshes","primitives","primitive","materials","material","alphaMode","push","renderGlTFPrimitive","drawable","end","destroy","copy","nmat3","normalMatrix","id","indexed","offset","vertexCount","accessors","attributes","POSITION","count","uniforms","loadMaterialUniforms","targets","weights","numJoints","skin","skins","JOINTS_0","WEIGHTS_0","joints","jointMatrix","Float32Array","bindings","name","value","values","tex","pipeline","loadGPUPipeline","props","buffers","attr","attrs","targetAttrMatch","exec","buffer","loadGPUBuffer","Vertex","vertex","indexAccessor","indices","indexBuffer","Index","byteOffset","drawIndexed","draw","mode","Tri","doubleSided","unlit","extensions","getVertexBufferLayouts","indexFormat","componentType","UInt32","UInt16","normNumJoints","Math","ceil","pipelineKey","JSON","stringify","pipelines","defines","format","defineStr","map","define","join","additionalUniforms","type","Value","valueFormat","Mat4","Float","vert","shader","source","frag","Fragment","depth","compare","LEqual","write","blend","srcFactorRGB","SrcAlpha","dstFactorRGB","OneMinusSrcAlpha","srcFactorAlpha","One","dstFactorAlpha","undefined","raster","cullMode","None","Back","Mat3","Vec3","Vec4","Tex","texType","Tex2D","bufferIdMap","shaderLoc","getBufferLayoutDescriptor","accessor","sparse","bufferKey","bufferView","byteLength","bufferLayout","stride","bufferViews","byteStride","Array","j","Float3","materialId","loadBlankGPUTexture","setTexture","obj","scaleField","loadGPUTexture","texCoord","pbrMetallicRoughness","pbr","baseColorFactor","metallicFactor","roughnessFactor","alphaCutoff","emissiveFactor","accessorId","targetHint","isUByteIndex","UNSIGNED_BYTE","gpuBuffer","accessorData","data","widenedData","Uint16Array","Uint8Array","size","gpuBuffers","target","textureId","texture","textures","gpuTexture","img","samplerDesc","wrapU","Repeat","wrapV","magFilter","Linear","minFilter","image","images","sampler","samplers","wrapS","wrapT","Nearest","NearestMipmapNearest","NearestMipmapLinear","naturalWidth","naturalHeight","blankTexture"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n\r\nimport { Mat3, mat3, Mat4, mat4, Vec3, vec3 } from 'munum';\r\nimport { GLenum } from '../../common/gl';\r\nimport {\r\n  AddressMode, BlendFactor, Buffer, BufferType, CompareFunc, CullMode, FilterMode, IndexFormat, MinFilterMode, Pipeline, PrimitiveType,\r\n  RenderingDevice, RenderPassContext, SamplerDescriptor, Texture, TexType, UniformFormat, UniformLayout, UniformType,\r\n  UniformBindings, VertexBufferLayout, VertexFormat, vertexSize, ShaderType\r\n} from '../device';\r\nimport { Accessor, GlTF, Mesh, MeshPrimitive, Node } from '../gltf-spec/glTF2';\r\nimport { ResolvedGlTF } from './types';\r\nimport { getCameraProjection, getExtras, getAccessorVertexFormat, getAccessorData } from './gltf-utils';\r\nimport primitiveVert from './shaders/primitive.vert';\r\nimport pbrFrag from './shaders/pbr.frag';\r\nimport { updateGlTF } from './update';\r\n\r\n// Only supports 16 attributes\r\nconst MAX_VERTEX_ATTRIBS = 16;\r\nconst TARGET_ATTRIBUTES = ['POSITION', 'NORMAL', 'TANGENT'];\r\nconst TARGET_ATTRIBUTE_MATCHER = /(POSITION|NORMAL|TANGENT)_(\\d+)/;\r\n\r\nconst I4 = mat4.create();\r\nconst Z3 = vec3.create();\r\n\r\nconst tmpViewProj = mat4.create();\r\n\r\ninterface UniformValuesDescriptor {\r\n  [key: string]: number | number[] | Float32Array | Texture\r\n}\r\n\r\n/**\r\n * Options to render a GlTF model.\r\n */\r\nexport interface RenderGlTFOptions {\r\n  /** Specifies the camera to use. Defaults to the first camera, or an identity camera if model does not contain a camera. */\r\n  camera?: {\r\n    /** The camera index to use. */\r\n    index?: number;\r\n\r\n    /** Override the model matrix of the camera. */\r\n    model?: Mat4;\r\n\r\n    /** Override the projection matrix of the camera. */\r\n    proj?: Mat4;\r\n  };\r\n\r\n  /** The scene to render. Defaults to the active scene specified by the model. */\r\n  scene?: number;\r\n}\r\n\r\n/**\r\n * Render a resolved GlTF model.\r\n * @param device the rendering device\r\n * @param glTF the GlTF model resolved via resolveGlTF function\r\n * @param options optional rendering options\r\n */\r\nexport function renderGlTF(device: RenderingDevice, glTF: ResolvedGlTF, options: RenderGlTFOptions = {}): void {\r\n  const scene = (options.scene ?? glTF.scene) || 0;\r\n  const nodes = glTF.nodes;\r\n  const rootNodes = glTF.scenes?.[scene]?.nodes;\r\n  if (!nodes || !rootNodes) {\r\n    return; // Nothing to render\r\n  }\r\n\r\n  const activeNodes = updateGlTF(glTF, { scene });\r\n\r\n  // Get camera matrices\r\n  let view = I4;\r\n  let proj = I4;\r\n  let cameraPosition = Z3;\r\n\r\n  if (options.camera) {\r\n    const activeCamera = glTF.cameras?.[options.camera.index || 0];\r\n    if (activeCamera) {\r\n      view = (activeCamera.extras?.view as Mat4) || I4;\r\n      proj = getCameraProjection(tmpViewProj, activeCamera, device.width / device.height);\r\n      cameraPosition = (activeCamera.extras?.translation as Vec3) || Z3;\r\n    }\r\n    if (options.camera.model) {\r\n      cameraPosition = vec3.create(options.camera.model[12], options.camera.model[13], options.camera.model[14]);\r\n      mat4.invert(options.camera.model, view);\r\n    }\r\n    proj = options.camera.proj || proj;\r\n  }\r\n\r\n  const viewProj = mat4.mul(proj, view, tmpViewProj);\r\n\r\n  const env: UniformValuesDescriptor = { cameraPosition, viewProj, };\r\n\r\n  // Render all active nodes\r\n  const pass = device.pass();\r\n  const context = device.render(pass);\r\n\r\n  const transparentDrawables: { node: Node, mesh: Mesh, primitive: MeshPrimitive }[] = [];\r\n\r\n  // Draw opaque primitives\r\n  for (let i = 0; i < activeNodes.length; ++i) {\r\n    const node = nodes[activeNodes[i]];\r\n    const mesh = glTF.meshes?.[node.mesh!];\r\n    if (mesh) {\r\n      for (let i = 0; i < mesh.primitives.length; ++i) {\r\n        const primitive = mesh.primitives[i];\r\n        if (glTF.materials?.[primitive.material!]?.alphaMode === 'BLEND') {\r\n          transparentDrawables.push({ node, mesh, primitive });\r\n        } else {\r\n          renderGlTFPrimitive(device, context, glTF, node, mesh, primitive, env);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Draw transparent primitives last\r\n  // TODO: depth sorting, so that the furthest nodes are rendered first\r\n  for (const drawable of transparentDrawables) {\r\n    renderGlTFPrimitive(device, context, glTF, drawable.node, drawable.mesh, drawable.primitive, env);\r\n  }\r\n\r\n  context.end();\r\n  pass.destroy();\r\n}\r\n\r\nfunction renderGlTFPrimitive(\r\n  device: RenderingDevice, context: RenderPassContext, glTF: ResolvedGlTF,\r\n  node: Node, mesh: Mesh, primitive: MeshPrimitive,\r\n  env: UniformValuesDescriptor\r\n): void {\r\n  // Set model matrices. This overrides matrices in the env obj to reduce object allocations\r\n  env.model = mat4.copy((getExtras(node).model as Mat4) || I4, (env.model as Mat4) || mat4.create());\r\n  if (!mat4.nmat3(env.model as Mat4, (env.normalMatrix = (env.normalMatrix as Mat3) || mat3.create()))) {\r\n    mat3.id(env.normalMatrix as Mat3);\r\n  }\r\n\r\n  let indexed = false;\r\n  let offset = 0;\r\n  let vertexCount = glTF.accessors?.[primitive.attributes.POSITION!]?.count || 0;\r\n\r\n  // Require positions to render\r\n  if (!vertexCount) {\r\n    return;\r\n  }\r\n\r\n  const uniforms: UniformValuesDescriptor = {\r\n    ...env,\r\n    ...loadMaterialUniforms(device, glTF, primitive.material)\r\n  };\r\n\r\n  if (primitive.targets) {\r\n    uniforms['targetWeights'] = (getExtras(node).weights as number[]) || node.weights || mesh.weights || [0, 0, 0, 0, 0, 0, 0, 0];\r\n  }\r\n\r\n  let numJoints = 0;\r\n  const skin = glTF.skins?.[node.skin!];\r\n  if (primitive.attributes.JOINTS_0 && primitive.attributes.WEIGHTS_0 && skin) {\r\n    numJoints = skin.joints.length;\r\n    const jointMatrix = getExtras(node).jointMatrix = (getExtras(node).jointMatrix as Float32Array) || new Float32Array(numJoints * 16);\r\n    uniforms['jointMatrix'] = jointMatrix;\r\n  }\r\n\r\n  const bindings: UniformBindings = [];\r\n  for (const name in uniforms) {\r\n    if (typeof uniforms[name] ==='number') {\r\n      bindings.push({ name, value: uniforms[name] as number });\r\n    } else if ((uniforms[name] as number[]).length) {\r\n      bindings.push({ name, values: uniforms[name] as number[] });\r\n    } else {\r\n      bindings.push({ name, tex: uniforms[name] as Texture });\r\n    }\r\n  }\r\n\r\n  // Bind pipeline\r\n  const pipeline = loadGPUPipeline(device, glTF, primitive, numJoints);\r\n  context\r\n    .pipeline(pipeline)\r\n    .uniforms(bindings);\r\n\r\n  // Bind vertex buffers\r\n  for (let i = 0; i < pipeline.props.buffers.length; ++i) {\r\n    const attr = pipeline.props.buffers[i].attrs[0].name;\r\n    const targetAttrMatch = TARGET_ATTRIBUTE_MATCHER.exec(attr);\r\n    const buffer = loadGPUBuffer(\r\n      device, glTF,\r\n      targetAttrMatch ? primitive.targets![targetAttrMatch[2] as unknown as number][targetAttrMatch[1]] : primitive.attributes[attr],\r\n      BufferType.Vertex\r\n    );\r\n    if (buffer) {\r\n      context.vertex(i, buffer);\r\n    }\r\n  }\r\n\r\n  // Bind index buffer\r\n  const indexAccessor = glTF.accessors?.[primitive.indices!];\r\n  if (indexAccessor) {\r\n    const indexBuffer = loadGPUBuffer(device, glTF, primitive.indices, BufferType.Index);\r\n    if (indexBuffer) {\r\n      context.index(indexBuffer);\r\n      vertexCount = indexAccessor.count;\r\n      offset = (getExtras(indexAccessor).byteOffset as number) || 0;\r\n      indexed = true;\r\n    }\r\n  }\r\n\r\n  // Draw\r\n  if (indexed) {\r\n    context.drawIndexed(vertexCount, 1, offset);\r\n  } else {\r\n    context.draw(vertexCount);\r\n  }\r\n}\r\n\r\nfunction loadGPUPipeline(device: RenderingDevice, glTF: ResolvedGlTF, primitive: MeshPrimitive, numJoints = 0): Pipeline {\r\n  let pipeline: Pipeline | undefined = getExtras(primitive).pipeline as Pipeline | undefined;\r\n  if (pipeline) {\r\n    return pipeline;\r\n  }\r\n\r\n  const mode: PrimitiveType = (primitive.mode as PrimitiveType) || PrimitiveType.Tri;\r\n  const material = glTF.materials?.[primitive.material!];\r\n  let alphaMode = 'OPAQUE';\r\n  let doubleSided = false;\r\n  let unlit = false;\r\n  if (material) {\r\n    doubleSided = material.doubleSided || false;\r\n    alphaMode = material.alphaMode || alphaMode;\r\n    unlit = !!material.extensions?.['KHR_materials_unlit'];\r\n  }\r\n\r\n  const buffers = getVertexBufferLayouts(glTF, primitive);\r\n\r\n  const indexFormat = (glTF.accessors?.[primitive.indices!]?.componentType === IndexFormat.UInt32) ?\r\n    IndexFormat.UInt32 : IndexFormat.UInt16;\r\n\r\n  const normNumJoints = primitive.attributes['JOINTS_0'] && primitive.attributes['WEIGHTS_0'] ?\r\n    Math.ceil(numJoints / 12) * 12 : 0;\r\n\r\n  // TODO: better key encoding\r\n  const pipelineKey = JSON.stringify([\r\n    buffers,\r\n    doubleSided,\r\n    alphaMode,\r\n    normNumJoints,\r\n    indexFormat,\r\n    mode,\r\n    unlit\r\n  ]);\r\n\r\n  const pipelines: Record<string, Pipeline> = getExtras(glTF).pipelines =\r\n    (getExtras(glTF).pipelines as Record<string, Pipeline>) || {};\r\n  pipeline = pipelines[pipelineKey];\r\n  if (pipeline) {\r\n    return pipeline;\r\n  }\r\n\r\n  const defines: string[] = [\r\n    `ALPHAMODE_${alphaMode}`\r\n  ];\r\n  for (const buffer of buffers) {\r\n    for (const attr of buffer.attrs) {\r\n      defines.push(`USE_${attr.name}`);\r\n      if (attr.name === 'COLOR_0' && vertexSize(attr.format) === 3) {\r\n        defines.push('COLOR_0_VEC3');\r\n      }\r\n    }\r\n  }\r\n  if (normNumJoints > 0) {\r\n    defines.push(`NUM_JOINTS ${normNumJoints}`);\r\n  }\r\n  if (unlit) {\r\n    defines.push('MATERIAL_UNLIT');\r\n  }\r\n  const defineStr = defines.map(define => `#define ${define}`).join('\\n');\r\n\r\n  const additionalUniforms: UniformLayout = [];\r\n  if (normNumJoints > 0) {\r\n    additionalUniforms.push({ name: 'jointMatrix', type: UniformType.Value, valueFormat: UniformFormat.Mat4 });\r\n  }\r\n  if (primitive.targets) {\r\n    additionalUniforms.push({ name: 'targetWeights', type: UniformType.Value, valueFormat: UniformFormat.Float });\r\n  }\r\n\r\n  const vert = device.shader({ type: ShaderType.Vertex, source: defineStr + primitiveVert });\r\n  const frag = device.shader({ type: ShaderType.Fragment, source: defineStr + pbrFrag });\r\n\r\n  pipeline = getExtras(primitive).pipeline = pipelines[pipelineKey] = device.pipeline({\r\n    vert,\r\n    frag,\r\n    buffers,\r\n    indexFormat,\r\n    mode,\r\n    depth: {\r\n      compare: CompareFunc.LEqual,\r\n      write: !(alphaMode === 'BLEND')\r\n    },\r\n    blend: (alphaMode === 'BLEND') ? {\r\n      srcFactorRGB: BlendFactor.SrcAlpha,\r\n      dstFactorRGB: BlendFactor.OneMinusSrcAlpha,\r\n      srcFactorAlpha: BlendFactor.One,\r\n      dstFactorAlpha: BlendFactor.OneMinusSrcAlpha,\r\n    }: undefined,\r\n    raster: {\r\n      cullMode: doubleSided ? CullMode.None : CullMode.Back\r\n    },\r\n    uniforms: [\r\n      { name: 'model', type: UniformType.Value, valueFormat: UniformFormat.Mat4 },\r\n      { name: 'viewProj', type: UniformType.Value, valueFormat: UniformFormat.Mat4 },\r\n      { name: 'normalMatrix', type: UniformType.Value, valueFormat: UniformFormat.Mat3 },\r\n      { name: 'cameraPosition', type: UniformType.Value, valueFormat: UniformFormat.Vec3 },\r\n      { name: 'alphaCutoff', type: UniformType.Value, valueFormat: UniformFormat.Float },\r\n      { name: 'baseColorFactor', type: UniformType.Value, valueFormat: UniformFormat.Vec4 },\r\n      { name: 'baseColorTexture.tex', type: UniformType.Tex, texType: TexType.Tex2D },\r\n      { name: 'baseColorTexture.texCoord', type: UniformType.Value, valueFormat: UniformFormat.Float },\r\n      { name: 'metallicFactor', type: UniformType.Value, valueFormat: UniformFormat.Float },\r\n      { name: 'roughnessFactor', type: UniformType.Value, valueFormat: UniformFormat.Float },\r\n      { name: 'metallicRoughnessTexture.tex', type: UniformType.Tex, texType: TexType.Tex2D },\r\n      { name: 'metallicRoughnessTexture.texCoord', type: UniformType.Value, valueFormat: UniformFormat.Float },\r\n      { name: 'normalTexture.tex', type: UniformType.Tex, texType: TexType.Tex2D },\r\n      { name: 'normalTexture.texCoord', type: UniformType.Value, valueFormat: UniformFormat.Float },\r\n      { name: 'normalTexture.scale', type: UniformType.Value, valueFormat: UniformFormat.Float },\r\n      { name: 'emissiveFactor', type: UniformType.Value, valueFormat: UniformFormat.Vec3 },\r\n      { name: 'emissiveTexture.tex', type: UniformType.Tex, texType: TexType.Tex2D },\r\n      { name: 'emissiveTexture.texCoord', type: UniformType.Value, valueFormat: UniformFormat.Float },\r\n      { name: 'occlusionTexture.tex', type: UniformType.Tex, texType: TexType.Tex2D },\r\n      { name: 'occlusionTexture.texCoord', type: UniformType.Value, valueFormat: UniformFormat.Float },\r\n      { name: 'occlusionTexture.scale', type: UniformType.Value, valueFormat: UniformFormat.Float },\r\n      ...additionalUniforms\r\n    ]\r\n  });\r\n\r\n  vert.destroy();\r\n  frag.destroy();\r\n\r\n  return pipeline;\r\n}\r\n\r\nfunction getVertexBufferLayouts(glTF: ResolvedGlTF, primitive: MeshPrimitive): VertexBufferLayout[] {\r\n  const bufferIdMap: Record<string, number> = {};\r\n  const buffers: VertexBufferLayout[] = [];\r\n  let shaderLoc = 0;\r\n\r\n  function getBufferLayoutDescriptor(accessor: Accessor): VertexBufferLayout {\r\n    if (!accessor.sparse) {\r\n      const buffer = getAccessorData(glTF, accessor).buffer;\r\n      const bufferKey = `${accessor.bufferView},${buffer.byteOffset},${buffer.byteLength}`;\r\n\r\n      if (bufferKey in bufferIdMap) {\r\n        return buffers[bufferIdMap[bufferKey]];\r\n      }\r\n\r\n      bufferIdMap[bufferKey] = buffers.length;\r\n    }\r\n\r\n    const bufferLayout = {\r\n      attrs: [],\r\n      stride: glTF.bufferViews?.[accessor.bufferView!]?.byteStride\r\n    };\r\n    buffers.push(bufferLayout);\r\n\r\n    return bufferLayout;\r\n  }\r\n\r\n  // Standard attributes\r\n  for (const name of ['POSITION', 'NORMAL', 'TANGENT', 'TEXCOORD_0', 'TEXCOORD_1', 'COLOR_0', 'JOINTS_0', 'WEIGHTS_0']) {\r\n    const accessor = glTF.accessors?.[primitive.attributes[name]];\r\n    if (accessor) {\r\n      const format = getAccessorVertexFormat(accessor);\r\n      if (!format) {\r\n        // TODO: Support all formats?\r\n        continue;\r\n      }\r\n\r\n      getBufferLayoutDescriptor(accessor).attrs.push({ \r\n        name,\r\n        format,\r\n        shaderLoc,\r\n        offset: (getExtras(accessor).byteOffset as number) || 0\r\n      });\r\n      shaderLoc++;\r\n    }\r\n  }\r\n\r\n  // Morph target attributes\r\n  if (primitive.targets) {\r\n    const accessors: (Accessor|undefined)[] = new Array(3);\r\n    for (let i = 0; i < primitive.targets.length; ++i) {\r\n      let attrs = 0;\r\n\r\n      for (let j = 0; j < TARGET_ATTRIBUTES.length; ++j) {\r\n        if ((accessors[j] = glTF.accessors?.[primitive.targets[i][TARGET_ATTRIBUTES[j]]])) {\r\n          ++attrs;\r\n        }\r\n      }\r\n\r\n      if (shaderLoc + attrs > MAX_VERTEX_ATTRIBS) { // Too many attributes\r\n        break;\r\n      }\r\n\r\n      for (let j = 0; j < TARGET_ATTRIBUTES.length; ++j) {\r\n        const accessor = accessors[j];\r\n        if (accessor) {\r\n          getBufferLayoutDescriptor(accessor).attrs.push({ \r\n            name: `${TARGET_ATTRIBUTES[j]}_${i}`,\r\n            format: VertexFormat.Float3,\r\n            shaderLoc,\r\n            offset: (getExtras(accessor).byteOffset as number) || 0\r\n          });\r\n          shaderLoc++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return buffers;\r\n}\r\n\r\nfunction loadMaterialUniforms(device: RenderingDevice, glTF: ResolvedGlTF, materialId: number | undefined): UniformValuesDescriptor {\r\n  const env: UniformValuesDescriptor = {\r\n    'alphaCutoff': 0.5,\r\n    'baseColorFactor': [1, 1, 1, 1],\r\n    'baseColorTexture.tex': loadBlankGPUTexture(device, glTF),\r\n    'baseColorTexture.texCoord': -1,\r\n    'metallicFactor': 1,\r\n    'roughnessFactor': 1,\r\n    'metallicRoughnessTexture.tex': loadBlankGPUTexture(device, glTF),\r\n    'metallicRoughnessTexture.texCoord': -1,\r\n    'normalTexture.tex': loadBlankGPUTexture(device, glTF),\r\n    'normalTexture.texCoord': -1,\r\n    'normalTexture.scale': 1,\r\n    'emissiveFactor': [0, 0, 0],\r\n    'emissiveTexture.tex': loadBlankGPUTexture(device, glTF),\r\n    'emissiveTexture.texCoord': -1,\r\n    'occlusionTexture.tex': loadBlankGPUTexture(device, glTF),\r\n    'occlusionTexture.texCoord': -1,\r\n    'occlusionTexture.scale': 0\r\n  };\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  function setTexture(obj: any, name: string, scaleField: string | null = null): void {\r\n    if (obj[name]) {\r\n      env[`${name}.tex`] = loadGPUTexture(device, glTF, obj[name].index);\r\n      env[`${name}.texCoord`] = obj[name].texCoord || 0;\r\n      if (scaleField) {\r\n        env[`${name}.scale`] = obj[name][scaleField] ?? env[`${name}.scale`];\r\n      }\r\n    }\r\n  }\r\n\r\n  const material = glTF.materials?.[materialId!];\r\n  if (material) {\r\n    if (material.pbrMetallicRoughness) {\r\n      const pbr = material.pbrMetallicRoughness;\r\n\r\n      env.baseColorFactor = pbr.baseColorFactor || env.baseColorFactor;\r\n      if (pbr.metallicFactor || pbr.metallicFactor === 0) {\r\n        env.metallicFactor = pbr.metallicFactor;\r\n      }\r\n\r\n      if (pbr.roughnessFactor || pbr.roughnessFactor === 0) {\r\n        env.roughnessFactor = pbr.roughnessFactor;\r\n      }\r\n      setTexture(pbr, 'baseColorTexture');\r\n      setTexture(pbr, 'metallicRoughnessTexture');\r\n    }\r\n\r\n    env.alphaCutoff = material.alphaCutoff ?? env.alphaCutoff;\r\n    env.emissiveFactor = material.emissiveFactor || env.emissiveFactor;\r\n\r\n    setTexture(material, 'emissiveTexture');\r\n    setTexture(material, 'occlusionTexture', 'strength');\r\n    setTexture(material, 'normalTexture', 'scale');\r\n  }\r\n\r\n  return env;\r\n}\r\n\r\nfunction loadGPUBuffer(device: RenderingDevice, glTF: ResolvedGlTF, accessorId: number | undefined, targetHint: BufferType): Buffer | null {\r\n  const accessor = glTF.accessors?.[accessorId!];\r\n  if (!accessor) {\r\n    return null;\r\n  }\r\n\r\n  // sparse accessor uses its own buffer\r\n  // ubyte index is not supported in mugl, thus uses its own widened buffer\r\n  const isUByteIndex = targetHint === BufferType.Index && accessor.componentType === GLenum.UNSIGNED_BYTE;\r\n  if (accessor.sparse || isUByteIndex) {\r\n    let gpuBuffer: Buffer | undefined = getExtras(accessor).gpuBuffer as Buffer | undefined;\r\n    if (!gpuBuffer) {\r\n      const accessorData = getAccessorData(glTF, accessor);\r\n      let data: ArrayBufferView = accessorData.buffer;\r\n      if (isUByteIndex) {\r\n        const widenedData = new Uint16Array(data.byteLength);\r\n        for (let i = 0; i < data.byteLength; ++i) {\r\n          widenedData[i] = (data as Uint8Array)[accessorData.byteOffset + i];\r\n        }\r\n        data = getExtras(accessor).buffer = new Uint8Array(widenedData.buffer, 0, widenedData.byteLength);\r\n        getExtras(accessor).byteOffset = 0;\r\n      }\r\n\r\n      gpuBuffer = getExtras(accessor).gpuBuffer =\r\n        device.buffer({ type: targetHint, size: data.byteLength }).data(data);\r\n    }\r\n    return gpuBuffer;\r\n  }\r\n\r\n  // Other accessors must have buffer view\r\n  const bufferView = glTF.bufferViews?.[accessor.bufferView!];\r\n  if (!bufferView) {\r\n    return null;\r\n  }\r\n\r\n  // Vertex buffers are splitted to optimize for pipeline sharing, but we want to share them if possible\r\n  const gpuBuffers: Record<string, Buffer> = getExtras(bufferView).gpuBuffers =\r\n    (getExtras(bufferView).gpuBuffers as Record<string, Buffer>) || {};\r\n\r\n  const buffer = getAccessorData(glTF, accessor).buffer;\r\n  const bufferKey = `${buffer.byteOffset},${buffer.byteLength}`;\r\n\r\n  if (gpuBuffers[bufferKey]) {\r\n    return gpuBuffers[bufferKey];\r\n  }\r\n\r\n  return gpuBuffers[bufferKey] =\r\n      device.buffer({ type: (bufferView.target as BufferType) || targetHint, size: buffer.byteLength }).data(buffer);\r\n}\r\n\r\nfunction loadGPUTexture(device: RenderingDevice, glTF: ResolvedGlTF, textureId: number): Texture {\r\n  const texture = glTF.textures?.[textureId];\r\n  if (!texture) {\r\n    return loadBlankGPUTexture(device, glTF);\r\n  }\r\n\r\n  let gpuTexture: Texture | undefined = getExtras(texture).texture as Texture | undefined;\r\n  if (gpuTexture) {\r\n    return gpuTexture;\r\n  }\r\n\r\n  let img: HTMLImageElement | null = null;\r\n  const samplerDesc: SamplerDescriptor = {\r\n    wrapU: AddressMode.Repeat,\r\n    wrapV: AddressMode.Repeat,\r\n    magFilter: FilterMode.Linear,\r\n    minFilter: MinFilterMode.Linear,\r\n  };\r\n\r\n  const image = glTF.images?.[texture.source!];\r\n  if (image) {\r\n    img = image.extras.image;\r\n  }\r\n\r\n  const sampler = glTF.samplers?.[texture.sampler!];\r\n  if (sampler) {\r\n    samplerDesc.wrapU = sampler.wrapS as AddressMode || samplerDesc.wrapU;\r\n    samplerDesc.wrapV = sampler.wrapT as AddressMode || samplerDesc.wrapV;\r\n    samplerDesc.magFilter = sampler.magFilter as FilterMode || samplerDesc.magFilter;\r\n\r\n    // TODO: Support mipmapping\r\n    switch (sampler.minFilter) {\r\n      case MinFilterMode.Nearest:\r\n      case MinFilterMode.NearestMipmapNearest:\r\n      case MinFilterMode.NearestMipmapLinear:\r\n        samplerDesc.minFilter = MinFilterMode.Nearest;\r\n        break;\r\n    }\r\n  }\r\n\r\n  // TODO: resize non power of 2 textures\r\n\r\n  gpuTexture = getExtras(texture).texture = device.texture({\r\n    width: img?.naturalWidth || 1,\r\n    height: img?.naturalHeight || 1,\r\n  }, samplerDesc);\r\n  gpuTexture.data(img ? { image: img } : { buffer: new Uint8Array([255, 255, 255, 255]) });\r\n\r\n  return gpuTexture;\r\n}\r\n\r\n/** Load a placeholder texture. */\r\nfunction loadBlankGPUTexture(device: RenderingDevice, glTF: GlTF): Texture {\r\n  let gpuTexture: Texture | undefined = getExtras(glTF).blankTexture as Texture | undefined;\r\n  if (gpuTexture) {\r\n    return gpuTexture;\r\n  }\r\n\r\n  gpuTexture = getExtras(glTF).blankTexture =\r\n    device.texture({}).data({ buffer: new Uint8Array([255, 255, 255, 255]) });\r\n\r\n  return gpuTexture;\r\n}\r\n"],"file":"render.js"}