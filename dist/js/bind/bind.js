import{getGLDevice}from"../gl2/index.js";const UINT_MAX=4294967295;export function muglBind(imports,deviceFactory=getGLDevice){let module={};const pinned={};let canvasId=1;const canvasIdMap={};const canvas={};let imageId=1;const imageIdMap={};const images={};let deviceId=1;const devices={};let bufferId=1;const buffers={};let textureId=1;const textures={};let shaderId=1;const shaders={};let renderPassId=1;const renderPasses={};let pipelineId=1;const pipelines={};let renderPassContextId=1;const renderPassContexts={};const boundUniforms={};imports.mugl={getCanvasById(id){const idStr=module.__getString(id);if(canvasIdMap[idStr]){return canvasIdMap[idStr]}const c=document.getElementById(idStr);if(!c){return 0}canvasIdMap[idStr]=canvasId;canvas[canvasId]=c;return canvasId++},createImage(uri){const img=images[imageId]=new Image;img.crossOrigin="anonymous";img.src=module.__getString(uri);return imageId++},getImageById(id){const idStr=module.__getString(id);if(imageIdMap[idStr]){return imageIdMap[idStr]}const img=document.getElementById(idStr);if(!img){return 0}imageIdMap[idStr]=imageId;images[imageId]=img;return imageId++},deleteImage(ptr){delete images[ptr]},getGLDevice(c,flags){const options={alpha:!!(flags&1),antialias:!!(flags&1<<1),depth:!!(flags&1<<2),desynchronized:!!(flags&1<<3),failIfMajorPerformanceCaveat:!!(flags&1<<4),powerPreference:flags&1<<6?"high-performance":flags&1<<5?"low-power":"default",premultipliedAlpha:!!(flags&1<<7),preserveDrawingBuffer:!!(flags&1<<8),stencil:!!(flags&1<<9),webgl2:!!(flags&1<<10)};const device=canvas[c]&&deviceFactory(canvas[c],options);if(!device){return 0}devices[deviceId]=device;return deviceId++},getCanvasWidth(device){var _devices$device;return(_devices$device=devices[device])===null||_devices$device===void 0?void 0:_devices$device.width},getCanvasHeight(device){var _devices$device2;return(_devices$device2=devices[device])===null||_devices$device2===void 0?void 0:_devices$device2.height},resetDevice(device){var _devices$device3;(_devices$device3=devices[device])===null||_devices$device3===void 0?void 0:_devices$device3.reset()},deviceFeature(device,feature){var _devices$device4;return(_devices$device4=devices[device])!==null&&_devices$device4!==void 0&&_devices$device4.feature(module.__getString(feature))?true:false},createBuffer(device,type,size,usage){const d=devices[device];if(!d){return 0}buffers[bufferId]=d.buffer({type,size,usage});return bufferId++},deleteBuffer(buffer){var _buffers$buffer;(_buffers$buffer=buffers[buffer])===null||_buffers$buffer===void 0?void 0:_buffers$buffer.destroy();delete buffers[buffer]},bufferData(buffer,data,offset){var _buffers$buffer2;(_buffers$buffer2=buffers[buffer])===null||_buffers$buffer2===void 0?void 0:_buffers$buffer2.data(module.__getArrayView(data),offset)},createTexture(device,type,format,width,height,depth,mipLevels,samples,renderTarget,wrapU,wrapV,wrapW,magFilter,minFilter,minLOD,maxLOD,maxAniso){const d=devices[device];if(!d){return 0}textures[textureId]=d.texture({type,format,width,height,depth,mipLevels,samples,renderTarget},{wrapU,wrapV,wrapW,magFilter,minFilter,minLOD,maxLOD,maxAniso});return textureId++},deleteTexture(texture){var _textures$texture;(_textures$texture=textures[texture])===null||_textures$texture===void 0?void 0:_textures$texture.destroy();delete textures[texture]},textureBuffer(texture,bufferPtr,origin,extent,mipLevel){var _textures$texture2;const buffer=module.__getArrayView(bufferPtr);(_textures$texture2=textures[texture])===null||_textures$texture2===void 0?void 0:_textures$texture2.data({buffer},module.__getArrayView(origin),module.__getArrayView(extent),mipLevel)},textureImages(texture,imagesPtr,origin,extent,mipLevel){var _textures$texture3;const imagePtrs=module.__getArrayView(imagesPtr);const imageData=new Array(imagePtrs.length);for(let i=0;i<imagePtrs.length;++i){imageData[i]=images[imagePtrs[i]]}(_textures$texture3=textures[texture])===null||_textures$texture3===void 0?void 0:_textures$texture3.data({images:imageData},module.__getArrayView(origin),module.__getArrayView(extent),mipLevel)},mipmap(texture,hint){var _textures$texture4;(_textures$texture4=textures[texture])===null||_textures$texture4===void 0?void 0:_textures$texture4.mipmap(hint)},createShader(device,type,source){const d=devices[device];if(!d){return 0}shaders[shaderId]=d.shader({type,source:module.__getString(source)});return shaderId++},deleteShader(shader){var _shaders$shader;(_shaders$shader=shaders[shader])===null||_shaders$shader===void 0?void 0:_shaders$shader.destroy();delete shaders[shader]},createRenderPass(device,colorTex,colorMipLevel,colorSlice,depthTex,depthMipLevel,depthSlice,clearColor,clearDepth,clearStencil){const d=devices[device];if(!d){return 0}const color=[];if(colorTex){const mipLevels=module.__getArrayView(colorMipLevel);const slices=module.__getArrayView(colorSlice);const colorTexes=module.__getArrayView(colorTex);for(let i=0;i<colorTexes.length;++i){color.push({tex:textures[colorTexes[i]],mipLevel:mipLevels[i],slice:slices[i]})}}renderPasses[renderPassId]=d.pass({color,depth:textures[depthTex]?{tex:textures[depthTex],mipLevel:depthMipLevel,slice:depthSlice}:null,clearColor:clearColor?module.__getArray(clearColor):null,clearDepth,clearStencil});return renderPassId++},deleteRenderPass(pass){var _renderPasses$pass;(_renderPasses$pass=renderPasses[pass])===null||_renderPasses$pass===void 0?void 0:_renderPasses$pass.destroy();delete renderPasses[pass]},resolveRenderPass(pass){var _renderPasses$pass2;(_renderPasses$pass2=renderPasses[pass])===null||_renderPasses$pass2===void 0?void 0:_renderPasses$pass2.resolve()},createPipeline(device,vert,frag,indexFormat,mode,bufferInstStridesPtr,attrNamesPtr,attrBufferIdsPtr,attrFormatsPtr,attrShaderLocPtr,attrOffsetsPtr,uniformNamesPtr,uniformTypesPtr,uniformFormatsPtr,frontFace,cullMode,depthBias,depthBiasSlopeScale,alphaToCoverage,depthEnabled,depthWrite,depthCompare,stencilEnabled,stencilFrontCompare,stencilFrontFailOp,stencilFrontZFailOp,stencilFrontPassOp,stencilBackCompare,stencilBackFailOp,stencilBackZFailOp,stencilBackPassOp,stencilReadMask,stencilWriteMask,blendEnabled,srcFactorRGB,dstFactorRGB,opRGB,srcFactorAlpha,dstFactorAlpha,opAlpha,colorMask){const d=devices[device];if(!d){return 0}const bufferInstStrides=module.__getArrayView(bufferInstStridesPtr);const buffers=Array(bufferInstStrides.length);for(let i=0;i<buffers.length;++i){buffers[i]={attrs:[],stride:bufferInstStrides[i]>>1,instanced:!!(bufferInstStrides[i]&1)}}const attrNamesPtrs=module.__getArrayView(attrNamesPtr);const attrNames=Array(attrNamesPtrs.length);for(let i=0;i<attrNames.length;++i){attrNames[i]=module.__getString(attrNamesPtrs[i])}const attrBufferIds=module.__getArrayView(attrBufferIdsPtr);const attrFormats=module.__getArrayView(attrFormatsPtr);const attrShaderLoc=module.__getArrayView(attrShaderLocPtr);const attrOffsets=module.__getArrayView(attrOffsetsPtr);for(let i=0;i<attrNames.length;++i){buffers[attrBufferIds[i]].attrs.push({name:attrNames[i],format:attrFormats[i],shaderLoc:attrShaderLoc[i]===UINT_MAX?undefined:attrShaderLoc[i],offset:attrOffsets[i]===UINT_MAX?undefined:attrOffsets[i]})}const uniforms=[];if(uniformNamesPtr){const uniformNamesPtrs=module.__getArrayView(uniformNamesPtr);const uniformNames=Array(uniformNamesPtrs.length);for(let i=0;i<uniformNames.length;++i){uniformNames[i]=module.__getString(uniformNamesPtrs[i])}const uniformTypes=module.__getArrayView(uniformTypesPtr);const uniformFormats=module.__getArrayView(uniformFormatsPtr);for(let i=0;i<uniformNames.length;++i){uniforms.push({name:uniformNames[i],type:uniformTypes[i],texType:uniformFormats[i],valueFormat:uniformFormats[i]})}}pipelines[pipelineId]=d.pipeline({vert:shaders[vert],frag:shaders[frag],indexFormat,mode,buffers,uniforms,raster:{frontFace,cullMode,depthBias,depthBiasSlopeScale,alphaToCoverage},depth:depthEnabled?{write:depthWrite,compare:depthCompare}:null,stencil:stencilEnabled?{frontCompare:stencilFrontCompare,frontFailOp:stencilFrontFailOp,frontZFailOp:stencilFrontZFailOp,frontPassOp:stencilFrontPassOp,backCompare:stencilBackCompare,backFailOp:stencilBackFailOp,backZFailOp:stencilBackZFailOp,backPassOp:stencilBackPassOp,readMask:stencilReadMask,writeMask:stencilWriteMask}:null,blend:blendEnabled?{srcFactorRGB,dstFactorRGB,opRGB,srcFactorAlpha,dstFactorAlpha,opAlpha,colorMask}:null});return pipelineId++},deletePipeline(pipeline){var _pipelines$pipeline;(_pipelines$pipeline=pipelines[pipeline])===null||_pipelines$pipeline===void 0?void 0:_pipelines$pipeline.destroy();delete pipelines[pipeline]},render(device,pass){const d=devices[device];const p=renderPasses[pass];if(!d||!p){return 0}renderPassContexts[renderPassContextId]=d.render(p);boundUniforms[renderPassContextId]=[];return renderPassContextId++},endRender(context){var _renderPassContexts$c;(_renderPassContexts$c=renderPassContexts[context])===null||_renderPassContexts$c===void 0?void 0:_renderPassContexts$c.end();delete renderPassContexts[context];delete boundUniforms[context]},bindPipeline(context,pipeline){if(pipelines[pipeline]){var _renderPassContexts$c2;(_renderPassContexts$c2=renderPassContexts[context])===null||_renderPassContexts$c2===void 0?void 0:_renderPassContexts$c2.pipeline(pipelines[pipeline])}},bindVertexBuffer(context,slot,buffer){if(buffers[buffer]){var _renderPassContexts$c3;(_renderPassContexts$c3=renderPassContexts[context])===null||_renderPassContexts$c3===void 0?void 0:_renderPassContexts$c3.vertex(slot,buffers[buffer])}},bindIndexBuffer(context,buffer){if(buffers[buffer]){var _renderPassContexts$c4;(_renderPassContexts$c4=renderPassContexts[context])===null||_renderPassContexts$c4===void 0?void 0:_renderPassContexts$c4.index(buffers[buffer])}},bindUniform(context,name,value,valuesPtr,valueBufferPtr,tex,buffer,bufferOffset,bufferSize){var _boundUniforms$contex;let values=undefined;if(valuesPtr||valueBufferPtr){values=module.__getArrayView(valuesPtr||valueBufferPtr);module.__pin(valuesPtr||valueBufferPtr);pinned[valuesPtr||valueBufferPtr]=valuesPtr||valueBufferPtr}(_boundUniforms$contex=boundUniforms[context])===null||_boundUniforms$contex===void 0?void 0:_boundUniforms$contex.push({name:module.__getString(name),value,values,tex:textures[tex],buffer:buffers[buffer],bufferOffset,bufferSize})},draw(context,indexed,count,instanceCount,first){const uniforms=boundUniforms[context];if(uniforms!==null&&uniforms!==void 0&&uniforms.length){var _renderPassContexts$c5;(_renderPassContexts$c5=renderPassContexts[context])===null||_renderPassContexts$c5===void 0?void 0:_renderPassContexts$c5.uniforms(uniforms);uniforms.length=0}if(indexed){var _renderPassContexts$c6;(_renderPassContexts$c6=renderPassContexts[context])===null||_renderPassContexts$c6===void 0?void 0:_renderPassContexts$c6.drawIndexed(count,instanceCount,first)}else{var _renderPassContexts$c7;(_renderPassContexts$c7=renderPassContexts[context])===null||_renderPassContexts$c7===void 0?void 0:_renderPassContexts$c7.draw(count,instanceCount,first)}for(const ptr in pinned){module.__unpin(pinned[ptr]);delete pinned[ptr]}},viewport(context,x,y,width,height,minDepth,maxDepth){var _renderPassContexts$c8;(_renderPassContexts$c8=renderPassContexts[context])===null||_renderPassContexts$c8===void 0?void 0:_renderPassContexts$c8.viewport(x,y,width,height,minDepth,maxDepth)},scissor(context,x,y,width,height){var _renderPassContexts$c9;(_renderPassContexts$c9=renderPassContexts[context])===null||_renderPassContexts$c9===void 0?void 0:_renderPassContexts$c9.scissor(x,y,width,height)},blendColor(context,color){var _renderPassContexts$c10;(_renderPassContexts$c10=renderPassContexts[context])===null||_renderPassContexts$c10===void 0?void 0:_renderPassContexts$c10.blendColor(module.__getArrayView(color))},stencilRef(context,ref){var _renderPassContexts$c11;(_renderPassContexts$c11=renderPassContexts[context])===null||_renderPassContexts$c11===void 0?void 0:_renderPassContexts$c11.stencilRef(ref)}};return{bindModule(exports){module=exports},addCanvas(id,c){canvasIdMap[id]=canvasId;canvas[canvasId]=c;return canvasId++},addImage(id,image){imageIdMap[id]=imageId;images[imageId]=image;return imageId++},pinned,canvasIdMap,canvas,imageIdMap,images,devices,renderPassContexts,boundUniforms,buffers,textures,shaders,renderPasses,pipelines}}
//# sourceMappingURL=bind.js.map