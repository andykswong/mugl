{"version":3,"sources":["../../../src/js/bind/bind.ts"],"names":["getGLDevice","UINT_MAX","muglBind","imports","deviceFactory","module","pinned","canvasId","canvasIdMap","canvas","imageId","imageIdMap","images","deviceId","devices","bufferId","buffers","textureId","textures","shaderId","shaders","renderPassId","renderPasses","pipelineId","pipelines","renderPassContextId","renderPassContexts","boundUniforms","mugl","getCanvasById","id","idStr","__getString","c","document","getElementById","createImage","uri","img","Image","crossOrigin","src","getImageById","deleteImage","ptr","flags","options","alpha","antialias","depth","desynchronized","failIfMajorPerformanceCaveat","powerPreference","premultipliedAlpha","preserveDrawingBuffer","stencil","webgl2","device","getCanvasWidth","width","getCanvasHeight","height","resetDevice","reset","deviceFeature","feature","createBuffer","type","size","usage","d","buffer","deleteBuffer","destroy","bufferData","data","offset","__getArrayView","createTexture","format","mipLevels","samples","renderTarget","wrapU","wrapV","wrapW","magFilter","minFilter","minLOD","maxLOD","maxAniso","texture","deleteTexture","textureBuffer","bufferPtr","origin","extent","mipLevel","textureImages","imagesPtr","imagePtrs","imageData","Array","length","i","mipmap","hint","createShader","source","shader","deleteShader","createRenderPass","colorTex","colorMipLevel","colorSlice","depthTex","depthMipLevel","depthSlice","clearColor","clearDepth","clearStencil","color","slices","colorTexes","push","tex","slice","pass","__getArray","deleteRenderPass","resolveRenderPass","resolve","createPipeline","vert","frag","indexFormat","mode","bufferInstStridesPtr","attrNamesPtr","attrBufferIdsPtr","attrFormatsPtr","attrShaderLocPtr","attrOffsetsPtr","uniformNamesPtr","uniformTypesPtr","uniformFormatsPtr","frontFace","cullMode","depthBias","depthBiasSlopeScale","alphaToCoverage","depthEnabled","depthWrite","depthCompare","stencilEnabled","stencilFrontCompare","stencilFrontFailOp","stencilFrontZFailOp","stencilFrontPassOp","stencilBackCompare","stencilBackFailOp","stencilBackZFailOp","stencilBackPassOp","stencilReadMask","stencilWriteMask","blendEnabled","srcFactorRGB","dstFactorRGB","opRGB","srcFactorAlpha","dstFactorAlpha","opAlpha","colorMask","bufferInstStrides","attrs","stride","instanced","attrNamesPtrs","attrNames","attrBufferIds","attrFormats","attrShaderLoc","attrOffsets","name","shaderLoc","undefined","uniforms","uniformNamesPtrs","uniformNames","uniformTypes","uniformFormats","texType","valueFormat","pipeline","raster","write","compare","frontCompare","frontFailOp","frontZFailOp","frontPassOp","backCompare","backFailOp","backZFailOp","backPassOp","readMask","writeMask","blend","deletePipeline","render","p","endRender","context","end","bindPipeline","bindVertexBuffer","slot","vertex","bindIndexBuffer","index","bindUniform","value","valuesPtr","valueBufferPtr","bufferOffset","bufferSize","values","__pin","draw","indexed","count","instanceCount","first","drawIndexed","__unpin","viewport","x","y","minDepth","maxDepth","scissor","blendColor","stencilRef","ref","bindModule","exports","addCanvas","addImage","image"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n\r\nimport { ASUtil } from '@assemblyscript/loader';\r\nimport {\r\n  AddressMode, BlendFactor, BlendOp, Buffer, BufferType, ColorMask, CompareFunc, CullMode, FilterMode, Float,\r\n  FrontFace, ImageSource, IndexFormat, Int, MinFilterMode, MipmapHint, Pipeline, PixelFormat, PrimitiveType,\r\n  ReadonlyVertexAttribute, RenderingDevice, RenderPass, RenderPassContext, Shader, ShaderType, StencilOp, Texture,\r\n  TexType, UniformType, Usage, VertexFormat\r\n} from '../../common';\r\nimport { UniformBindings, UniformLayout } from '../../common/device/descriptor';\r\nimport { Canvas, GLRenderingDeviceFactory, GLRenderingDeviceOptions } from '../device';\r\nimport { getGLDevice } from '../gl2';\r\n\r\ntype Ptr = number;\r\ntype Uint = number;\r\n\r\ntype ImageId = Ptr;\r\ntype CanvasId = Ptr;\r\ntype RenderingDeviceId = Ptr;\r\ntype RenderPassContextId = Ptr;\r\ntype BufferId = Ptr;\r\ntype TextureId = Ptr;\r\ntype RenderPassId = Ptr;\r\ntype ShaderId = Ptr;\r\ntype PipelineId = Ptr;\r\n\r\nconst UINT_MAX = 4294967295;\r\n\r\n/**\r\n * mugl-WASM binding object.\r\n */\r\nexport interface MuglBind {\r\n  /**\r\n   * Bind mugl to WASM module exports.\r\n   * @param exports module exports\r\n   */\r\n  bindModule(exports: ASUtil & Record<string, unknown>): void;\r\n\r\n  /**\r\n   * Register a canvas for use in WASM.\r\n   * @param id ID of the canvas\r\n   * @param canvas the canvas\r\n   * @returns pointer to the given canvas\r\n   */\r\n  addCanvas(id: string, canvas: Canvas): CanvasId;\r\n\r\n  /**\r\n   * Register an image for use in WASM.\r\n   * @param id ID of the image\r\n   * @param image the image\r\n   * @returns pointer to the given image\r\n   */\r\n  addImage(id: string, image: ImageSource): ImageId;\r\n\r\n  pinned: Record<Ptr, Ptr>;\r\n  canvasIdMap: Record<string, CanvasId>;\r\n  canvas: Record<CanvasId, Canvas>;\r\n  imageIdMap: Record<string, ImageId>;\r\n  images: Record<ImageId, ImageSource>;\r\n  devices: Record<RenderingDeviceId, RenderingDevice>;\r\n  renderPassContexts: Record<RenderPassContextId, RenderPassContext>;\r\n  boundUniforms: Record<RenderPassContextId, UniformBindings>;\r\n  buffers: Record<BufferId, Buffer>;\r\n  textures: Record<TextureId, Texture>;\r\n  shaders: Record<ShaderId, Shader>;\r\n  renderPasses: Record<RenderPassId, RenderPass>;\r\n  pipelines: Record<PipelineId, Pipeline>;\r\n}\r\n\r\n/**\r\n * Bind mugl device library to WASM module.\r\n */\r\nexport function muglBind(\r\n  imports: Record<string, unknown>,\r\n  deviceFactory: GLRenderingDeviceFactory = getGLDevice\r\n): MuglBind {\r\n  let module: any = {};\r\n\r\n  const pinned: Record<Ptr, Ptr> = {};\r\n  let canvasId: CanvasId = 1;\r\n  const canvasIdMap: Record<string, CanvasId> = {};\r\n  const canvas: Record<CanvasId, Canvas> = {};\r\n  let imageId: ImageId = 1;\r\n  const imageIdMap: Record<string, ImageId> = {};\r\n  const images: Record<ImageId, TexImageSource> = {};\r\n  let deviceId: RenderingDeviceId = 1;\r\n  const devices: Record<RenderingDeviceId, RenderingDevice> = {};\r\n  let bufferId: BufferId = 1;\r\n  const buffers: Record<BufferId, Buffer> = {};\r\n  let textureId: TextureId = 1;\r\n  const textures: Record<TextureId, Texture> = {};\r\n  let shaderId: ShaderId = 1;\r\n  const shaders: Record<ShaderId, Shader> = {};\r\n  let renderPassId: RenderPassId = 1;\r\n  const renderPasses: Record<RenderPassId, RenderPass> = {};\r\n  let pipelineId: PipelineId = 1;\r\n  const pipelines: Record<PipelineId, Pipeline> = {};\r\n  let renderPassContextId: RenderPassContextId = 1;\r\n  const renderPassContexts: Record<RenderPassContextId, RenderPassContext> = {};\r\n  const boundUniforms: Record<RenderPassContextId, UniformBindings> = {};\r\n\r\n  imports.mugl = {\r\n    getCanvasById(id: Ptr): CanvasId {\r\n      const idStr = module.__getString(id);\r\n      if (canvasIdMap[idStr]) { return canvasIdMap[idStr]; }\r\n      const c = document.getElementById(idStr) as HTMLCanvasElement;\r\n      if (!c) { return 0; }\r\n      canvasIdMap[idStr] = canvasId;\r\n      canvas[canvasId] = c;\r\n      return canvasId++;\r\n    },\r\n\r\n    createImage(uri: Ptr): ImageId {\r\n      const img = images[imageId] = new Image();\r\n      img.crossOrigin = 'anonymous';\r\n      img.src = module.__getString(uri);\r\n      return imageId++;\r\n    },\r\n    getImageById(id: Ptr): ImageId {\r\n      const idStr = module.__getString(id);\r\n      if (imageIdMap[idStr]) { return imageIdMap[idStr]; }\r\n      const img = document.getElementById(idStr) as TexImageSource;\r\n      if (!img) { return 0; }\r\n      imageIdMap[idStr] = imageId;\r\n      images[imageId] = img;\r\n      return imageId++;\r\n    },\r\n    deleteImage(ptr: ImageId): void {\r\n      delete images[ptr];\r\n    },\r\n\r\n    getGLDevice(c: CanvasId, flags: Uint): RenderingDeviceId {\r\n      const options: GLRenderingDeviceOptions = {\r\n        alpha: !!(flags & 1),\r\n        antialias: !!(flags & (1 << 1)),\r\n        depth: !!(flags & (1 << 2)),\r\n        desynchronized: !!(flags & (1 << 3)),\r\n        failIfMajorPerformanceCaveat: !!(flags & (1 << 4)),\r\n        powerPreference: (flags & (1 << 6)) ? 'high-performance' :\r\n          (flags & (1 << 5)) ? 'low-power' : 'default',\r\n        premultipliedAlpha: !!(flags & (1 << 7)),\r\n        preserveDrawingBuffer: !!(flags & (1 << 8)),\r\n        stencil: !!(flags & (1 << 9)),\r\n        webgl2: !!(flags & (1 << 10))\r\n      };\r\n      const device = canvas[c] && deviceFactory(canvas[c], options);\r\n      if (!device) { return 0; }\r\n      devices[deviceId] = device;\r\n      return deviceId++;\r\n    },\r\n\r\n    getCanvasWidth(device: RenderingDeviceId): Uint {\r\n      return devices[device]?.width;\r\n    },\r\n    getCanvasHeight(device: RenderingDeviceId): Uint {\r\n      return devices[device]?.height;\r\n    },\r\n    resetDevice(device: RenderingDeviceId): void {\r\n      devices[device]?.reset();\r\n    },\r\n    deviceFeature(device: RenderingDeviceId, feature: Ptr): boolean {\r\n      // TODO: return feature object pointer\r\n      return devices[device]?.feature(module.__getString(feature)) ? true : false;\r\n    },\r\n\r\n    createBuffer(device: RenderingDeviceId, type: BufferType, size: Uint, usage: Usage): BufferId {\r\n      const d = devices[device];\r\n      if (!d) { return 0; }\r\n      buffers[bufferId] = d.buffer({ type, size, usage });\r\n      return bufferId++;\r\n    },\r\n    deleteBuffer(buffer: BufferId): void {\r\n      buffers[buffer]?.destroy();\r\n      delete buffers[buffer];\r\n    },\r\n    bufferData(buffer: BufferId, data: Ptr, offset: Uint): void {\r\n      buffers[buffer]?.data(module.__getArrayView(data), offset);\r\n    },\r\n\r\n    createTexture(\r\n      device: RenderingDeviceId,\r\n      type: TexType, format: PixelFormat, width: Uint, height: Uint, depth: Uint, mipLevels: Uint, samples: Uint, renderTarget: boolean,\r\n      wrapU: AddressMode, wrapV: AddressMode, wrapW: AddressMode, magFilter: FilterMode, minFilter: MinFilterMode, minLOD: Float, maxLOD: Float, maxAniso: Float\r\n    ): TextureId {\r\n      const d = devices[device];\r\n      if (!d) { return 0; }\r\n      textures[textureId] = d.texture(\r\n        { type, format, width, height, depth, mipLevels, samples, renderTarget },\r\n        { wrapU, wrapV, wrapW, magFilter, minFilter, minLOD, maxLOD, maxAniso }\r\n      );\r\n      return textureId++;\r\n    },\r\n    deleteTexture(texture: TextureId): void {\r\n      textures[texture]?.destroy();\r\n      delete textures[texture];\r\n    },\r\n    textureBuffer(texture: TextureId, bufferPtr: Ptr, origin: Ptr, extent: Ptr, mipLevel: Uint): void {\r\n      const buffer = module.__getArrayView(bufferPtr);\r\n      textures[texture]?.data({ buffer }, module.__getArrayView(origin), module.__getArrayView(extent), mipLevel);\r\n    },\r\n    textureImages(texture: TextureId, imagesPtr: Ptr, origin: Ptr, extent: Ptr, mipLevel: Uint): void {\r\n      const imagePtrs = module.__getArrayView(imagesPtr);\r\n      const imageData = new Array(imagePtrs.length);\r\n      for (let i = 0; i < imagePtrs.length; ++i) {\r\n        imageData[i] = images[imagePtrs[i]];\r\n      }\r\n      textures[texture]?.data({ images: imageData }, module.__getArrayView(origin), module.__getArrayView(extent), mipLevel);\r\n    },\r\n    mipmap(texture: TextureId, hint: MipmapHint): void {\r\n      textures[texture]?.mipmap(hint);\r\n    },\r\n\r\n    createShader(device: RenderingDeviceId, type: ShaderType, source: Ptr): ShaderId {\r\n      const d = devices[device];\r\n      if (!d) { return 0; }\r\n      shaders[shaderId] = d.shader({ type, source: module.__getString(source) });\r\n      return shaderId++;\r\n    },\r\n    deleteShader(shader: ShaderId): void {\r\n      shaders[shader]?.destroy();\r\n      delete shaders[shader];\r\n    },\r\n\r\n    createRenderPass(\r\n      device: RenderingDeviceId,\r\n      colorTex: Ptr, colorMipLevel: Ptr, colorSlice: Ptr,\r\n      depthTex: TextureId, depthMipLevel: Uint, depthSlice: Uint,\r\n      clearColor: Ptr, clearDepth: Float, clearStencil: Float\r\n    ): RenderPassId {\r\n      const d = devices[device];\r\n      if (!d) { return 0; }\r\n      const color = [];\r\n      if (colorTex) {\r\n        const mipLevels = module.__getArrayView(colorMipLevel);\r\n        const slices = module.__getArrayView(colorSlice);\r\n        const colorTexes = module.__getArrayView(colorTex);\r\n        for (let i = 0; i < colorTexes.length; ++i) {\r\n          color.push({\r\n            tex: textures[colorTexes[i]],\r\n            mipLevel: mipLevels[i],\r\n            slice: slices[i]\r\n          });\r\n        }\r\n      }\r\n      renderPasses[renderPassId] = d.pass({\r\n        color,\r\n        depth: textures[depthTex] ? {\r\n          tex: textures[depthTex],\r\n          mipLevel: depthMipLevel,\r\n          slice: depthSlice\r\n        } : null,\r\n        clearColor: clearColor ? module.__getArray(clearColor) : null,\r\n        clearDepth,\r\n        clearStencil\r\n      });\r\n      return renderPassId++;\r\n    },\r\n    deleteRenderPass(pass: RenderPassId): void {\r\n      renderPasses[pass]?.destroy();\r\n      delete renderPasses[pass];\r\n    },\r\n    resolveRenderPass(pass: RenderPassId): void {\r\n      renderPasses[pass]?.resolve();\r\n    },\r\n\r\n    createPipeline(\r\n      device: RenderingDeviceId,\r\n      vert: ShaderId, frag: ShaderId, indexFormat: IndexFormat, mode: PrimitiveType,\r\n      bufferInstStridesPtr: Ptr,\r\n      attrNamesPtr: Ptr, attrBufferIdsPtr: Ptr, attrFormatsPtr: Ptr, attrShaderLocPtr: Ptr, attrOffsetsPtr: Ptr,\r\n      uniformNamesPtr: Ptr, uniformTypesPtr: Ptr, uniformFormatsPtr: Ptr,\r\n      frontFace: FrontFace, cullMode: CullMode, depthBias: Float, depthBiasSlopeScale: Float, alphaToCoverage: boolean,\r\n      depthEnabled: boolean, depthWrite: boolean, depthCompare: CompareFunc,\r\n      stencilEnabled: boolean,\r\n      stencilFrontCompare: CompareFunc, stencilFrontFailOp: StencilOp, stencilFrontZFailOp: StencilOp, stencilFrontPassOp: StencilOp,\r\n      stencilBackCompare: CompareFunc, stencilBackFailOp: StencilOp, stencilBackZFailOp: StencilOp, stencilBackPassOp: StencilOp,\r\n      stencilReadMask: Uint, stencilWriteMask: Uint,\r\n      blendEnabled: boolean,\r\n      srcFactorRGB: BlendFactor, dstFactorRGB: BlendFactor, opRGB: BlendOp,\r\n      srcFactorAlpha: BlendFactor, dstFactorAlpha: BlendFactor, opAlpha: BlendOp, colorMask: ColorMask\r\n    ): PipelineId {\r\n      const d = devices[device];\r\n      if (!d) { return 0; }\r\n\r\n      const bufferInstStrides = module.__getArrayView(bufferInstStridesPtr);\r\n      const buffers = Array(bufferInstStrides.length);\r\n      for (let i = 0; i < buffers.length; ++i) {\r\n        buffers[i] = {\r\n          attrs: [] as ReadonlyVertexAttribute[],\r\n          stride: (bufferInstStrides[i] >> 1),\r\n          instanced: !!(bufferInstStrides[i] & 1)\r\n        };\r\n      }\r\n\r\n      const attrNamesPtrs = module.__getArrayView(attrNamesPtr);\r\n      const attrNames = Array(attrNamesPtrs.length);\r\n      for (let i = 0; i < attrNames.length; ++i) {\r\n        attrNames[i] = module.__getString(attrNamesPtrs[i]);\r\n      }\r\n      const attrBufferIds: Uint[] = module.__getArrayView(attrBufferIdsPtr);\r\n      const attrFormats: VertexFormat[] = module.__getArrayView(attrFormatsPtr);\r\n      const attrShaderLoc: Uint[] = module.__getArrayView(attrShaderLocPtr);\r\n      const attrOffsets: Uint[] = module.__getArrayView(attrOffsetsPtr);\r\n      for (let i = 0; i < attrNames.length; ++i) {\r\n        buffers[attrBufferIds[i]].attrs.push({\r\n          name: attrNames[i],\r\n          format: attrFormats[i],\r\n          shaderLoc: attrShaderLoc[i] === UINT_MAX ? undefined : attrShaderLoc[i],\r\n          offset: attrOffsets[i] === UINT_MAX ? undefined : attrOffsets[i]\r\n        });\r\n      }\r\n\r\n      const uniforms: UniformLayout = [];\r\n      if (uniformNamesPtr) {\r\n        const uniformNamesPtrs = module.__getArrayView(uniformNamesPtr);\r\n        const uniformNames = Array(uniformNamesPtrs.length);\r\n        for (let i = 0; i < uniformNames.length; ++i) {\r\n          uniformNames[i] = module.__getString(uniformNamesPtrs[i]);\r\n        }\r\n        const uniformTypes: UniformType[] = module.__getArrayView(uniformTypesPtr);\r\n        const uniformFormats: Uint[] = module.__getArrayView(uniformFormatsPtr);\r\n        for (let i = 0; i < uniformNames.length; ++i) {\r\n          uniforms.push({\r\n            name: uniformNames[i],\r\n            type: uniformTypes[i],\r\n            texType: uniformFormats[i],\r\n            valueFormat: uniformFormats[i]\r\n          })\r\n        }\r\n      }\r\n\r\n      pipelines[pipelineId] = d.pipeline({\r\n        vert: shaders[vert],\r\n        frag: shaders[frag],\r\n        indexFormat,\r\n        mode,\r\n        buffers,\r\n        uniforms,\r\n        raster: { frontFace, cullMode, depthBias, depthBiasSlopeScale, alphaToCoverage },\r\n        depth: depthEnabled ? { write: depthWrite, compare: depthCompare } : null,\r\n        stencil: stencilEnabled ? {\r\n          frontCompare: stencilFrontCompare, frontFailOp: stencilFrontFailOp, frontZFailOp: stencilFrontZFailOp, frontPassOp: stencilFrontPassOp,\r\n          backCompare: stencilBackCompare, backFailOp: stencilBackFailOp, backZFailOp: stencilBackZFailOp, backPassOp: stencilBackPassOp,\r\n          readMask: stencilReadMask, writeMask: stencilWriteMask\r\n        } : null,\r\n        blend: blendEnabled ? {\r\n          srcFactorRGB, dstFactorRGB, opRGB, srcFactorAlpha, dstFactorAlpha, opAlpha, colorMask\r\n        } : null\r\n      });\r\n\r\n      return pipelineId++;\r\n    },\r\n    deletePipeline(pipeline: PipelineId): void {\r\n      pipelines[pipeline]?.destroy();\r\n      delete pipelines[pipeline];\r\n    },\r\n\r\n    render(device: RenderingDeviceId, pass: RenderPassId): RenderPassContextId {\r\n      const d = devices[device];\r\n      const p = renderPasses[pass];\r\n      if (!d || !p) { return 0; }\r\n      renderPassContexts[renderPassContextId] = d.render(p);\r\n      boundUniforms[renderPassContextId] = [];\r\n      return renderPassContextId++;\r\n    },\r\n    endRender(context: RenderPassContextId): void {\r\n      renderPassContexts[context]?.end();\r\n      delete renderPassContexts[context];\r\n      delete boundUniforms[context];\r\n    },\r\n    bindPipeline(context: RenderPassContextId, pipeline: PipelineId): void {\r\n      if (pipelines[pipeline]) {\r\n        renderPassContexts[context]?.pipeline(pipelines[pipeline]);\r\n      }\r\n    },\r\n    bindVertexBuffer(context: RenderPassContextId, slot: Uint, buffer: BufferId): void {\r\n      if (buffers[buffer]) {\r\n        renderPassContexts[context]?.vertex(slot, buffers[buffer]);\r\n      }\r\n    },\r\n    bindIndexBuffer(context: RenderPassContextId, buffer: BufferId): void {\r\n      if (buffers[buffer]) {\r\n        renderPassContexts[context]?.index(buffers[buffer]);\r\n      }\r\n    },\r\n    bindUniform(\r\n      context: RenderPassContextId, name: Ptr, value: Float, valuesPtr: Ptr, valueBufferPtr: Ptr, tex: TextureId,\r\n      buffer: BufferId, bufferOffset: Uint, bufferSize: Uint\r\n    ) {\r\n      let values = undefined;\r\n      if (valuesPtr || valueBufferPtr) {\r\n        values = module.__getArrayView(valuesPtr || valueBufferPtr);\r\n        module.__pin(valuesPtr || valueBufferPtr);\r\n        pinned[valuesPtr || valueBufferPtr] = valuesPtr || valueBufferPtr;\r\n      }\r\n      boundUniforms[context]?.push({\r\n        name: module.__getString(name),\r\n        value,\r\n        values,\r\n        tex: textures[tex],\r\n        buffer: buffers[buffer],\r\n        bufferOffset,\r\n        bufferSize\r\n      });\r\n    },\r\n    draw(context: RenderPassContextId, indexed: boolean, count: Uint, instanceCount: Uint, first: Uint): void {\r\n      const uniforms = boundUniforms[context];\r\n      if (uniforms?.length) {\r\n        renderPassContexts[context]?.uniforms(uniforms);\r\n        uniforms.length = 0;\r\n      }\r\n      if (indexed) {\r\n        renderPassContexts[context]?.drawIndexed(count, instanceCount, first);\r\n      } else {\r\n        renderPassContexts[context]?.draw(count, instanceCount, first);\r\n      }\r\n      for (const ptr in pinned) {\r\n        module.__unpin(pinned[ptr]);\r\n        delete pinned[ptr];\r\n      }\r\n    },\r\n    viewport(context: RenderPassContextId, x: Int, y: Int, width: Int, height: Int, minDepth: Int, maxDepth: Int): void {\r\n      renderPassContexts[context]?.viewport(x, y, width, height, minDepth, maxDepth);\r\n    },\r\n    scissor(context: RenderPassContextId, x: Int, y: Int, width: Int, height: Int): void {\r\n      renderPassContexts[context]?.scissor(x, y, width, height);\r\n    },\r\n    blendColor(context: RenderPassContextId, color: Ptr): void {\r\n      renderPassContexts[context]?.blendColor(module.__getArrayView(color));\r\n    },\r\n    stencilRef(context: RenderPassContextId, ref: Uint): void {\r\n      renderPassContexts[context]?.stencilRef(ref);\r\n    },\r\n  };\r\n\r\n  return {\r\n    bindModule(exports: ASUtil & Record<string, unknown>): void {\r\n      module = exports;\r\n    },\r\n\r\n    addCanvas(id: string, c: Canvas): CanvasId {\r\n      canvasIdMap[id] = canvasId;\r\n      canvas[canvasId] = c;\r\n      return canvasId++;\r\n    },\r\n\r\n    addImage(id: string, image: ImageSource): ImageId {\r\n      imageIdMap[id] = imageId;\r\n      images[imageId] = image;\r\n      return imageId++;\r\n    },\r\n\r\n    pinned,\r\n    canvasIdMap,\r\n    canvas,\r\n    imageIdMap,\r\n    images,\r\n    devices,\r\n    renderPassContexts,\r\n    boundUniforms,\r\n    buffers,\r\n    textures,\r\n    shaders,\r\n    renderPasses,\r\n    pipelines\r\n  };\r\n}\r\n"],"file":"bind.js"}