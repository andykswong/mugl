{"version":3,"sources":["../../js/store/id.ts"],"names":["MAX_SAFE_GENERATION","UNIT_GENERATION","create","index","generation","indexOf","id","generationOf"],"mappings":"AAAA,MAAO,MAAMA,CAAAA,mBAAmB,CAAG,CAAC,GAAK,EAAN,EAAY,CAAxC,CACP,MAAO,MAAMC,CAAAA,eAAe,CAAG,GAAK,EAA7B,CAGP,MAAO,SAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAA+BC,UAA/B,CAA2D,CAChE,MAAQ,CAACA,UAAU,CAAGJ,mBAAd,EAAqCC,eAArC,EAAwDE,KAAK,GAAK,CAAlE,CACT,CAGD,MAAO,SAASE,CAAAA,OAAT,CAAiBC,EAAjB,CAAqC,CAC1C,MAAOA,CAAAA,EAAE,GAAK,CACf,CAGD,MAAO,SAASC,CAAAA,YAAT,CAAsBD,EAAtB,CAA0C,CAC/C,MAAQA,CAAAA,EAAE,CAAGL,eAAN,CAAyBD,mBACjC","sourcesContent":["export const MAX_SAFE_GENERATION = (1 << 21) - 1;\nexport const UNIT_GENERATION = 2 ** 32;\n\n/** Creates a generational index ID from index and generation parts. */\nexport function create(index: number, generation: number): number {\n  return ((generation & MAX_SAFE_GENERATION) * UNIT_GENERATION + (index >>> 0));\n}\n\n/** Returns the index part (lower 32bit) of a generational index ID. */\nexport function indexOf(id: number): number {\n  return id >>> 0;\n}\n\n/** Returns the generation part (upper 21bit) of a generational index ID. */\nexport function generationOf(id: number): number {\n  return (id / UNIT_GENERATION) & MAX_SAFE_GENERATION;\n}\n"],"file":"id.js"}